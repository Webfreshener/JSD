[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/classes/_ajvWrapper.js",
    "content": "/* ############################################################################\nThe MIT License (MIT)\n\nCopyright (c) 2016 - 2019 Van Schroeder\nCopyright (c) 2017-2019 Webfreshener, LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n############################################################################ */\n/**\n * @private\n */\nimport {_ajvRef} from \"./_references\";\nimport {RxVO} from \"./rxvo\";\nimport Ajv from \"ajv\";\nimport {getSchemaID} from \"./utils\";\n\nconst _validators = new WeakMap();\n\n/**\n * backreferences object tree for top-down evaluation\n * @param path\n * @param data\n * @param rxvo\n * @returns {any}\n * @private\n */\nconst _preconstruct = (path, data, rxvo) => {\n    const _p = path.replace(/^[a-z0-9_]*#+/i, \"\").split(\"/\");\n    let _o = Object.assign({}, data);\n\n    while(_p.length > 0) {\n        _p.pop();\n        _o = Object.assign({}, rxvo.getPath(_p.join(\".\")), _o);\n    }\n\n    return _o;\n};\n\n/**\n *\n * @param inst\n * @param schemas\n * @param opts\n * @returns {ajv | ajv.Ajv}\n */\nconst createAjv = (inst, schemas, opts) => {\n    const _ajv = new Ajv(opts);\n    if (schemas) {\n        if (schemas.hasOwnProperty(\"meta\")) {\n            if (Array.isArray(schemas.meta)) {\n                schemas.meta.forEach((meta) => {\n                    _ajv.addMetaSchema(meta);\n                });\n            }\n        }\n\n        // todo: review performance of addSchema\n        if (schemas.hasOwnProperty(\"schemas\")) {\n            let schemaID;\n            if (Array.isArray(schemas.schemas)) {\n                schemas.schemas.forEach((schema) => {\n                    schemaID = getSchemaID(schema);\n                    _ajv.addSchema(schema, schemaID);\n                });\n            } else {\n                if ((typeof schemas.schemas) === \"string\") {\n                    schemaID = getSchemaID(schemas.schema);\n                    _ajv.addSchema(schemas.schemas, schemaID);\n                }\n            }\n\n            if (schemaID) {\n                inst.path = schemaID;\n            }\n        }\n    }\n\n    return _ajv;\n};\n\n/**\n * Wrapper for Ajv JSON-PropertiesModel Validator\n * @private\n */\nexport class AjvWrapper {\n    /**\n     * @constructor\n     * @param rxvo\n     * @param schemas\n     * @param ajvOptions\n     */\n    constructor(rxvo, schemas, ajvOptions = {}) {\n        // ensures that we are given something that represents a RxVO object\n        if ((!rxvo) || !(rxvo instanceof RxVO)) {\n            throw \"RxVO is required at arguments[0]\";\n        }\n\n        if (_validators.get(this) === void(0)) {\n            _validators.set(this, {});\n        }\n\n        // defines getter for parent RxVO reference\n        Object.defineProperty(this, \"$rxvo\", {\n            get: () => rxvo,\n            enumerable: false,\n        });\n\n        // applies user specified options over our default Ajv Options\n        const opts = Object.assign(_ajvOptions, ajvOptions);\n\n        // makes user defined options object accessible for evaluation\n        Object.defineProperty(this, \"options\", {\n            get: () => opts,\n            enumerable: true,\n        });\n\n        // declares default path of root# for validation queries\n        this.path = \"root#\";\n\n        // appends trailing \"#\" to end of \"id\" string if missing\n        const _procID = (id) => id.match(/#+$/) === null ? `${id}#` : id;\n\n        // processes schema \"id\" for JSON-schemas =< v04 and >= v06\n        const _procSchema = (_s) => {\n            if (_s.hasOwnProperty(\"$id\")) {\n                _s[\"$id\"] = _procID(_s[\"$id\"]);\n            }\n\n            if (_s.hasOwnProperty(\"id\")) {\n                _s[\"id\"] = _procID(_s[\"id\"]);\n            }\n            return _s;\n        };\n\n        // evaluates contents of schemas to normalize \"id\" attributes to have trailing \"#\"\n        if ((typeof schemas) === \"object\") {\n            if (schemas.hasOwnProperty(\"schemas\")) {\n                if (Array.isArray(schemas.schemas)) {\n                    schemas.schemas = schemas.schemas.map(_procSchema);\n                } else {\n                    schemas.schemas = _procSchema(schemas.schemas);\n                }\n            } else {\n                if (Array.isArray(schemas)) {\n                    schemas = schemas.map(_procSchema);\n                } else {\n                    schemas = _procSchema(schemas);\n                }\n            }\n        }\n\n        const _ajv = createAjv(this, schemas, opts);\n\n        // initializes Ajv instance for this Doc and stores it to WeakMap\n        _ajvRef.set(this, _ajv);\n\n        // accept no further modifications to this object\n        Object.seal(this);\n    }\n\n    /**\n     * Helper method to derive path for given model\n     * todo: review for removal\n     * @param model\n     * @return {string}\n     */\n    static resolvePath(model) {\n        return \"not yet implemented\";\n    }\n\n    /**\n     * Getter for captive Ajv validator\n     * -- use this for Ajv API Methods\n     * @returns {ajv}\n     */\n    get $ajv() {\n        return _ajvRef.get(this);\n    }\n\n    /**\n     * Executes validator at PropertiesModel $model `path` against `value`\n     * @param {string} path\n     * @param {any} value\n     */\n    exec(path, value) {\n        // appends id ref to path\n        if (path.indexOf(\"#\") < 0) {\n            path = `${this.path}${path}`;\n        }\n\n        let _res = false;\n\n        /*\n            makes initial validation attempt and reattempts from top on failure\n         */\n        try {\n            _res = this.$ajv.validate(path, value);\n        } catch (e) {\n            if (path.replace(/(items|properties)\\/?/, \"\").split(\"/\").length) {\n                return this.exec(`${this.path}/`, _preconstruct(path, value, this.$rxvo));\n            }\n        }\n\n        return _res;\n    }\n}\n\n/**\n * AJV Options Config in it's entirely for reference\n * only RxVO specific option changes are enabled\n * @type {*}\n * @private\n */\nconst _ajvOptions = {\n    // // validation and reporting options:\n    // $data:            false,\n    // allErrors:        true,\n    // verbose:          true,\n    // $comment:         false, // NEW in Ajv version 6.0\n    jsonPointers: true,\n    // uniqueItems:      true,\n    // unicode:          true,\n    // format:           'fast',\n    // formats:          {},\n    // unknownFormats:   true,\n    // schemas:          {},\n    // logger:           undefined,\n    // // referenced schema options:\n    schemaId: 'auto',\n    // missingRefs:      true,\n    extendRefs: true, // default 'ignore'\n    // loadSchema:       undefined, // function(uri: string): Promise {}\n    // // options to modify validated data:\n    // removeAdditional: true,\n    // useDefaults: true,\n    // coerceTypes:      false,\n    // // asynchronous validation options:\n    // transpile:        undefined, // requires ajv-async package\n    // // advanced options:\n    // meta:             true,\n    // validateSchema:   true,\n    // addUsedSchema:    true,\n    // inlineRefs:       true,\n    // passContext:      false,\n    // loopRequired:     Infinity,\n    // ownProperties:    false,\n    // multipleOfPrecision: false,\n    // errorDataPath:    'object', // deprecated\n    // messages:         true,\n    // sourceCode:       false,\n    // processCode:      undefined, // function (str: string): string {}\n    // cache:            new Cache,\n    // serialize:        undefined\n};\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/_ajvWrapper.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "_validators",
    "memberof": "src/classes/_ajvWrapper.js",
    "static": true,
    "longname": "src/classes/_ajvWrapper.js~_validators",
    "access": "private",
    "export": false,
    "importPath": "rxvo/src/classes/_ajvWrapper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "function",
    "name": "_preconstruct",
    "memberof": "src/classes/_ajvWrapper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/_ajvWrapper.js~_preconstruct",
    "access": "private",
    "export": false,
    "importPath": "rxvo/src/classes/_ajvWrapper.js",
    "importStyle": null,
    "description": "backreferences object tree for top-down evaluation",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "rxvo",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 51,
    "kind": "function",
    "name": "createAjv",
    "memberof": "src/classes/_ajvWrapper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/_ajvWrapper.js~createAjv",
    "access": "public",
    "export": false,
    "importPath": "rxvo/src/classes/_ajvWrapper.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ajv | ajv.Ajv}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "inst",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "schemas",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ajv ",
        " ajv.Ajv"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "class",
    "name": "AjvWrapper",
    "memberof": "src/classes/_ajvWrapper.js",
    "static": true,
    "longname": "src/classes/_ajvWrapper.js~AjvWrapper",
    "access": "private",
    "export": true,
    "importPath": "rxvo/src/classes/_ajvWrapper.js",
    "importStyle": "{AjvWrapper}",
    "description": "Wrapper for Ajv JSON-PropertiesModel Validator",
    "lineNumber": 102,
    "interface": false
  },
  {
    "__docId__": 53,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_ajvWrapper.js~AjvWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_ajvWrapper.js~AjvWrapper#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 109,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "rxvo",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "schemas",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "ajvOptions",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "path",
    "memberof": "src/classes/_ajvWrapper.js~AjvWrapper",
    "static": false,
    "longname": "src/classes/_ajvWrapper.js~AjvWrapper#path",
    "access": "public",
    "description": null,
    "lineNumber": 135,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "resolvePath",
    "memberof": "src/classes/_ajvWrapper.js~AjvWrapper",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/_ajvWrapper.js~AjvWrapper.resolvePath",
    "access": "public",
    "description": "Helper method to derive path for given model\ntodo: review for removal",
    "lineNumber": 184,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 56,
    "kind": "get",
    "name": "$ajv",
    "memberof": "src/classes/_ajvWrapper.js~AjvWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_ajvWrapper.js~AjvWrapper#$ajv",
    "access": "public",
    "description": "Getter for captive Ajv validator\n-- use this for Ajv API Methods",
    "lineNumber": 193,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ajv}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ajv"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "exec",
    "memberof": "src/classes/_ajvWrapper.js~AjvWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_ajvWrapper.js~AjvWrapper#exec",
    "access": "public",
    "description": "Executes validator at PropertiesModel $model `path` against `value`",
    "lineNumber": 202,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "name": "_ajvOptions",
    "memberof": "src/classes/_ajvWrapper.js",
    "static": true,
    "longname": "src/classes/_ajvWrapper.js~_ajvOptions",
    "access": "private",
    "export": false,
    "importPath": "rxvo/src/classes/_ajvWrapper.js",
    "importStyle": null,
    "description": "AJV Options Config in it's entirely for reference\nonly RxVO specific option changes are enabled",
    "lineNumber": 231,
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "src/classes/_ajvWrapper.test.js",
    "content": "import {default as JSONSchemaV4} from \"../schemas/json-schema-draft-04\";\nimport {default as JSONSchemaV6} from \"../schemas/json-schema-draft-06\";\nimport {default as OpenAPIv2} from \"../../fixtures/OpenAPIv2\";\nimport {default as PetStoreV2} from \"../../fixtures/petstore.v2\";\nimport {default as BasicAPI} from \"../../fixtures/basic-api.swagger\";\nimport Ajv from \"ajv\";\nimport {AjvWrapper} from \"./_ajvWrapper\";\nimport {RxVO} from \"./rxvo\";\n\ndescribe(\"AJVWrapper Tests\", () => {\n    describe(\"AJV Standalone -- version integrity & debug\", () => {\n        it(\"should handle v4 Schemas\", () => {\n            const opts = {\n                schemaId: \"auto\",\n                jsonPointers: true,\n                allErrors: false,\n                extendRefs: true,\n            };\n            const _ajv = new Ajv(opts);\n            _ajv.addMetaSchema(JSONSchemaV4);\n            _ajv.addMetaSchema(JSONSchemaV6);\n            _ajv.addSchema(OpenAPIv2, \"http://swagger.io/v2/schema.json#\");\n            // const _v = _ajv.getSchema(\"http://swagger.io/v2/schema.json\");\n            // const _isValid = _v(PetStoreV2);\n            // expect(_isValid).toBe(true);\n            expect(_ajv.validate(\"http://swagger.io/v2/schema.json#/\", PetStoreV2)).toBe(true);\n\n        });\n    });\n\n    describe(\"AJVWrapper\", () => {\n        it(\"should handle v4 Schemas\", () => {\n            const opts = {\n                schemaId: \"auto\",\n                jsonPointers: true,\n                allErrors: false,\n                extendRefs: true,\n            };\n\n            const schemas = {\n                meta: [JSONSchemaV4, JSONSchemaV6],\n                schemas: [OpenAPIv2],\n                // use: \"http://swagger.io/v2/schema.json#\"\n            };\n\n            const rxvo = new RxVO(schemas);\n            const _ajv = new AjvWrapper(rxvo, schemas, opts);\n            const _isValid = _ajv.exec(\"http://swagger.io/v2/schema.json#\", PetStoreV2);\n\n            rxvo.model = PetStoreV2;\n\n            expect(rxvo.errors).toBe(null);\n            expect(_isValid).toBe(true);\n        });\n    });\n});",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/_ajvWrapper.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "file",
    "name": "src/classes/_branchNotifier.js",
    "content": "/* ############################################################################\nThe MIT License (MIT)\n\nCopyright (c) 2016 - 2019 Van Schroeder\nCopyright (c) 2017-2019 Webfreshener, LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n############################################################################ */\nimport {_oBuilders} from \"./_references\";\nconst notifiers = new WeakMap();\n\n/**\n * protocol for Errors\n */\nclass ErrorNotification {\n    /**\n     * @constructor\n     * @param {string} path\n     * @param {string|string[]} error\n     */\n    constructor(path, error) {\n        // defines getter for `path` prop\n        Object.defineProperty(this, \"path\", {\n            get: () => path,\n            enumerable: true,\n        });\n        // defines getter for `error` prop\n        Object.defineProperty(this, \"error\", {\n            get: () => error,\n            enumerable: true,\n        });\n    }\n\n    toString() {\n        return `\"${this.path}\": ${JSON.stringify(this.error)}`;\n    }\n}\n\n/**\n * todo: implement this somewhere\n */\nclass CompleteNotification {\n    /**\n     * @constructor\n     * @param {string} path\n     */\n    constructor(path) {\n        Object.defineProperty(this, \"path\", {\n            get: () => path,\n            enumerable: true,\n        });\n    }\n}\n\n/**\n * Notification Management\n * acts as liason between Models and RxJS Subscription Dispatchers\n */\nclass Notifier {\n    /**\n     *\n     * @param rxvo\n     * @returns {Notifier|*}\n     */\n    constructor(rxvo) {\n        Object.defineProperty(this, \"$rxvo\", {\n            get: () => rxvo,\n        });\n\n        notifiers.set(rxvo, this);\n    }\n\n    /**\n     * Delegates sending RxJS `next` notifications\n     * @param forPath\n     */\n    sendNext(forPath) {\n        if (forPath[0] !== \".\") {\n            forPath = `.${forPath}`;\n        }\n\n        this.$rxvo.getModelsInPath(forPath)\n            .forEach((m) => _oBuilders.get(this.$rxvo).next(m.$model));\n    }\n\n    /**\n     * Delegates sending RxJS `error` notifications\n     * @param forPath\n     * @param error\n     */\n    sendError(forPath, error) {\n        this.$rxvo.getModelsInPath(forPath)\n            .forEach((model) => _oBuilders.get(this.$rxvo).error(model.$model,\n                new ErrorNotification(model.$model.path, error)));\n    }\n\n    /**\n     * Delegates sending RxJS `complete` notifications\n     * @param forPath\n     */\n    sendComplete(forPath) {\n        this.$rxvo.getModelsInPath(forPath)\n            .forEach((model) => _oBuilders.get(this.$rxvo).complete(model.$model));\n    }\n}\n\n/**\n * Creates and Retrives Notification Handlers\n * @static\n */\nexport default class Notifiers {\n    /**\n     *\n     * @param rxvo\n     * @returns {*}\n     */\n    static create(rxvo) {\n       new Notifier(rxvo);\n       return Notifiers.get(rxvo);\n    }\n\n    /**\n     *\n     * @param rxvo\n     * @returns {Notifier}\n     */\n    static get(rxvo) {\n        return notifiers.get(rxvo);\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/_branchNotifier.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 61,
    "kind": "variable",
    "name": "notifiers",
    "memberof": "src/classes/_branchNotifier.js",
    "static": true,
    "longname": "src/classes/_branchNotifier.js~notifiers",
    "access": "public",
    "export": false,
    "importPath": "rxvo/src/classes/_branchNotifier.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 62,
    "kind": "class",
    "name": "ErrorNotification",
    "memberof": "src/classes/_branchNotifier.js",
    "static": true,
    "longname": "src/classes/_branchNotifier.js~ErrorNotification",
    "access": "public",
    "export": false,
    "importPath": "rxvo/src/classes/_branchNotifier.js",
    "importStyle": null,
    "description": "protocol for Errors",
    "lineNumber": 32,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 63,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_branchNotifier.js~ErrorNotification",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_branchNotifier.js~ErrorNotification#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "toString",
    "memberof": "src/classes/_branchNotifier.js~ErrorNotification",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_branchNotifier.js~ErrorNotification#toString",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "class",
    "name": "CompleteNotification",
    "memberof": "src/classes/_branchNotifier.js",
    "static": true,
    "longname": "src/classes/_branchNotifier.js~CompleteNotification",
    "access": "public",
    "export": false,
    "importPath": "rxvo/src/classes/_branchNotifier.js",
    "importStyle": null,
    "description": "todo: implement this somewhere",
    "lineNumber": 59,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 66,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_branchNotifier.js~CompleteNotification",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_branchNotifier.js~CompleteNotification#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 67,
    "kind": "class",
    "name": "Notifier",
    "memberof": "src/classes/_branchNotifier.js",
    "static": true,
    "longname": "src/classes/_branchNotifier.js~Notifier",
    "access": "public",
    "export": false,
    "importPath": "rxvo/src/classes/_branchNotifier.js",
    "importStyle": null,
    "description": "Notification Management\nacts as liason between Models and RxJS Subscription Dispatchers",
    "lineNumber": 76,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 68,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_branchNotifier.js~Notifier",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_branchNotifier.js~Notifier#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Notifier|*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "rxvo",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Notifier",
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "sendNext",
    "memberof": "src/classes/_branchNotifier.js~Notifier",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_branchNotifier.js~Notifier#sendNext",
    "access": "public",
    "description": "Delegates sending RxJS `next` notifications",
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "forPath",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "sendError",
    "memberof": "src/classes/_branchNotifier.js~Notifier",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_branchNotifier.js~Notifier#sendError",
    "access": "public",
    "description": "Delegates sending RxJS `error` notifications",
    "lineNumber": 108,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "forPath",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "sendComplete",
    "memberof": "src/classes/_branchNotifier.js~Notifier",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_branchNotifier.js~Notifier#sendComplete",
    "access": "public",
    "description": "Delegates sending RxJS `complete` notifications",
    "lineNumber": 118,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "forPath",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 72,
    "kind": "class",
    "name": "Notifiers",
    "memberof": "src/classes/_branchNotifier.js",
    "static": true,
    "longname": "src/classes/_branchNotifier.js~Notifiers",
    "access": "public",
    "export": true,
    "importPath": "rxvo/src/classes/_branchNotifier.js",
    "importStyle": "Notifiers",
    "description": "Creates and Retrives Notification Handlers",
    "lineNumber": 128,
    "interface": false
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "create",
    "memberof": "src/classes/_branchNotifier.js~Notifiers",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/_branchNotifier.js~Notifiers.create",
    "access": "public",
    "description": "",
    "lineNumber": 134,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "rxvo",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "get",
    "memberof": "src/classes/_branchNotifier.js~Notifiers",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/_branchNotifier.js~Notifiers.get",
    "access": "public",
    "description": "",
    "lineNumber": 144,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Notifier}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "rxvo",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Notifier"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 75,
    "kind": "file",
    "name": "src/classes/_metaData.js",
    "content": "/* ############################################################################\nThe MIT License (MIT)\n\nCopyright (c) 2016 - 2019 Van Schroeder\nCopyright (c) 2017-2019 Webfreshener, LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n############################################################################ */\nimport {wf, _mdRef} from \"./_references\";\nconst _mData = new WeakMap();\n/**\n * @private\n */\nexport class MetaData {\n    /**\n     * @constructor\n     * @param {PropertiesModel|Set} _oRef -- Object Reference to item being described\n     * @param {object} _data -- Initial Data {parent:PropertiesModel|ItemsModel}\n     */\n    constructor(_oRef, _data = {}) {\n        let _cName = wf.Fun.getConstructorName(_oRef);\n\n        if (this._createID == null) {\n            let _id = 0;\n            MetaData.prototype._createID = function () {\n                if (this.__objID == null) {\n                    _id = _id + 1;\n                    this.__objID = `${_cName}${_id}`;\n                }\n                return this.__objID;\n            };\n        }\n\n        _data = Object.assign({}, _data, {\n            _id: this._createID(),\n            _className: _cName,\n            _created: Date.now()\n        });\n\n        _mData.set(this, _data);\n        _mdRef.set(this, this);\n    }\n\n    /**\n     * @param {string} key\n     */\n    get(key) {\n        let __ = _mData.get(this);\n        return __.hasOwnProperty(key) ? __[key] : null;\n    }\n\n    /**\n     * not implemented\n     */\n    set() {\n        return this;\n    }\n\n    /**\n     * UUID of element\n     * @returns {string} Unique ObjectID\n     */\n    get objectID() {\n        return this.get(\"_id\");\n    }\n\n    /**\n     * Root PropertiesModel element\n     * @returns {PropertiesModel|Set}\n     */\n    get root() {\n        return this.get(\"_root\");\n    }\n\n    /**\n     * Path to element\n     * @returns {string}\n     */\n    get path() {\n        return this.get(\"_path\");\n    }\n\n    /**\n     * Owner RxVO document\n     * @returns {RxVO}\n     */\n    get rxvo() {\n        return this.get(\"_rxvo\");\n    }\n\n    /**\n     * Getter for parent model\n     * @returns {string | null}\n     */\n    get parent() {\n        return this.get(\"_parent\");\n    }\n\n    /**\n     * Provides representation of Model as JSON string\n     * @return {string}\n     */\n    toString() {\n        return JSON.stringify(_mData.get(this));\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/_metaData.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 76,
    "kind": "variable",
    "name": "_mData",
    "memberof": "src/classes/_metaData.js",
    "static": true,
    "longname": "src/classes/_metaData.js~_mData",
    "access": "private",
    "export": false,
    "importPath": "rxvo/src/classes/_metaData.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 77,
    "kind": "class",
    "name": "MetaData",
    "memberof": "src/classes/_metaData.js",
    "static": true,
    "longname": "src/classes/_metaData.js~MetaData",
    "access": "private",
    "export": true,
    "importPath": "rxvo/src/classes/_metaData.js",
    "importStyle": "{MetaData}",
    "description": "",
    "lineNumber": 31,
    "interface": false
  },
  {
    "__docId__": 78,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "PropertiesModel",
          "Set"
        ],
        "spread": false,
        "optional": false,
        "name": "_oRef",
        "description": "- Object Reference to item being described"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "_data",
        "description": "- Initial Data {parent:PropertiesModel|ItemsModel}"
      }
    ]
  },
  {
    "__docId__": 79,
    "kind": "member",
    "name": "__objID",
    "memberof": "src/classes/_metaData.js~MetaData",
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#__objID",
    "access": "private",
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "get",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#get",
    "access": "public",
    "description": "",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "set",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#set",
    "access": "public",
    "description": "not implemented",
    "lineNumber": 72,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "get",
    "name": "objectID",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#objectID",
    "access": "public",
    "description": "UUID of element",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} Unique ObjectID"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Unique ObjectID"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "get",
    "name": "root",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#root",
    "access": "public",
    "description": "Root PropertiesModel element",
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PropertiesModel|Set}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PropertiesModel",
        "Set"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "get",
    "name": "path",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#path",
    "access": "public",
    "description": "Path to element",
    "lineNumber": 96,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "get",
    "name": "rxvo",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#rxvo",
    "access": "public",
    "description": "Owner RxVO document",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RxVO}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RxVO"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "get",
    "name": "parent",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#parent",
    "access": "public",
    "description": "Getter for parent model",
    "lineNumber": 112,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string | null}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string ",
        " null"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "toString",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#toString",
    "access": "public",
    "description": "Provides representation of Model as JSON string",
    "lineNumber": 120,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 88,
    "kind": "file",
    "name": "src/classes/_metadata.test.js",
    "content": "import {MetaData} from \"./_metaData\";\nimport {PropertiesModel} from \"./propertiesModel\";\nimport {RxVO} from \"./rxvo\";\nimport {basicModel} from \"../../fixtures/PropertiesModel.schemas\";\ndescribe(\"MetaData Units\", () => {\n    let _md = null;\n    describe( \"SubClass Validation\", ()=> {\n        it( \"should accept objects that are subclasses of PropertiesModel\", function() {\n            let _ = new PropertiesModel(new RxVO(basicModel));\n            !expect(() => _md = new MetaData(_, {_path: \"\", _root: _})).not.toThrow(\n                \"new MetaData() argument 1 requires subclass PropertiesModel or ItemsModel. Was subclass of '<Object>'\");\n        });\n        it( \"should accept objects that are subclasses of ItemsModel\", function() {\n            let _ = new Set();\n            expect(()=> _md = new MetaData( _, { _path: \"\", _root: _})).not.toThrow(\n                \"new MetaData() argument 1 requires subclass PropertiesModel or ItemsModel. Was subclass of '<Object>'\"\n            );\n        });\n    });\n    describe( \"Parameter Accessor Validation\", ()=> {\n        const rxvo = new RxVO(basicModel);\n        let _ = rxvo.model.$model;\n        const _md = new MetaData( new PropertiesModel(rxvo), {_path: \"key\", _root: _, _parent: _});\n        it(\"should access `root` property\", function() {\n            expect(typeof _md.root).toBe(\"object\");\n        });\n        it(\"should access `path` property\", function() {\n            expect(_md.path).toEqual(\"key\");\n        });\n        it(\"should access `parent` property\", function() {\n            let _md = new MetaData( _, { _path: \"\", _root: _});\n            expect(typeof _md.parent).toEqual(\"object\");\n        });\n    });\n});\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/_metadata.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 89,
    "kind": "file",
    "name": "src/classes/_observerBuilder.js",
    "content": "/* ############################################################################\nThe MIT License (MIT)\n\nCopyright (c) 2016 - 2019 Van Schroeder\nCopyright (c) 2017-2019 Webfreshener, LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n############################################################################ */\nimport {_observers} from \"./_references\";\nimport {BehaviorSubject} from \"rxjs/Rx\";\n\nconst _observerPaths = new WeakMap();\nconst _observerCache = new WeakMap();\n\nexport class ObserverBuilder {\n    /**\n     * @constructor\n     */\n    constructor() {\n        _observers.set(this, new WeakMap());\n        _observerPaths.set(this, []);\n    }\n\n    /**\n     * Retrieves BehaviorSubject Collection for given Model\n     * @param target {Model}\n     * @returns {Observer|null} Observer at path reference\n     */\n    get(target) {\n        return _observers.get(this).get(target) || null;\n    }\n\n    /**\n     * Retrieves BehaviorSubject Collection for Model at given path\n     * @param path\n     * @returns {*}\n     */\n    getObserverForPath(path) {\n        const _itm = _observerPaths.get(this).find((o) => o[0] === `${path}`);\n        return _itm && _itm.length > 1 ? this.get(_itm[1]) : null;\n    }\n\n    /**\n     * lists all registered observer paths\n     * @returns {*}\n     */\n    list() {\n        return _observerPaths.get(this).map((o) => o[0]);\n    }\n\n    /**\n     * Creates BehaviorSubjects for given Model\n     * @param target {Model}\n     */\n    create(target) {\n        const _o = _observers.get(this);\n        const _h = {\n            onNext: new BehaviorSubject(null).skip(1),\n            onError: new BehaviorSubject(null).skip(1),\n            onComplete: new BehaviorSubject(null).skip(1),\n        };\n        _o.set(target, _h);\n        _observerPaths.get(this).splice(0, 0, [`${target.path}`, target]);\n        return _o.get(target);\n    }\n\n    /**\n     * mutes notifications to `target` observers\n     * @param target\n     */\n    mute(target) {\n        const _idx = _observerPaths.get(this).findIndex((el) => el[0] === `${target.path}` && el[1] === target);\n        _observerCache.set(target, {idx: _idx, value: _observerPaths.get(this).splice(_idx, 1)});\n    }\n\n    /**\n     * unmutes notifications to `target` observers if muted\n     * @param target\n     */\n    unmute(target) {\n        const _cached = _observerCache.get(target);\n\n        if (_cached) {\n            _observerPaths.get(this).splice(_cached.idx, 0, _cached.value);\n            _observerCache.delete(target);\n        }\n    }\n\n    /**\n     * Calls next on Next Subject\n     * @param target {Model}\n     */\n    next(target) {\n        if (!target || target.isDirty) {\n            return;\n        }\n\n        let _o = !_observerCache.get(target) ? this.get(target) : null;\n\n        if (_o !== null) {\n            _o.onNext.next(target);\n        }\n    }\n\n    /**\n     * Calls next on Complete Subject\n     * @param target {Model}\n     */\n    complete(target) {\n        let _o = this.get(target);\n        if (_o !== null) {\n            _o.onComplete.next(target);\n        }\n    }\n\n    /**\n     * Calls next on Error Subject\n     * @param target {Model}\n     * @param message {*}\n     */\n    error(target, message) {\n        let _o = this.get(target);\n        if (_o !== null) {\n            _o.onError.next(message);\n        }\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/_observerBuilder.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 90,
    "kind": "variable",
    "name": "_observerPaths",
    "memberof": "src/classes/_observerBuilder.js",
    "static": true,
    "longname": "src/classes/_observerBuilder.js~_observerPaths",
    "access": "private",
    "export": false,
    "importPath": "rxvo/src/classes/_observerBuilder.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 91,
    "kind": "variable",
    "name": "_observerCache",
    "memberof": "src/classes/_observerBuilder.js",
    "static": true,
    "longname": "src/classes/_observerBuilder.js~_observerCache",
    "access": "private",
    "export": false,
    "importPath": "rxvo/src/classes/_observerBuilder.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 92,
    "kind": "class",
    "name": "ObserverBuilder",
    "memberof": "src/classes/_observerBuilder.js",
    "static": true,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder",
    "access": "public",
    "export": true,
    "importPath": "rxvo/src/classes/_observerBuilder.js",
    "importStyle": "{ObserverBuilder}",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 93,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "get",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#get",
    "access": "public",
    "description": "Retrieves BehaviorSubject Collection for given Model",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Observer|null} Observer at path reference"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "{Model}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Observer",
        "null"
      ],
      "spread": false,
      "description": "Observer at path reference"
    }
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "getObserverForPath",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#getObserverForPath",
    "access": "public",
    "description": "Retrieves BehaviorSubject Collection for Model at given path",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "list",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#list",
    "access": "public",
    "description": "lists all registered observer paths",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "create",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#create",
    "access": "public",
    "description": "Creates BehaviorSubjects for given Model",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "{Model}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "mute",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#mute",
    "access": "public",
    "description": "mutes notifications to `target` observers",
    "lineNumber": 88,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "unmute",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#unmute",
    "access": "public",
    "description": "unmutes notifications to `target` observers if muted",
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "next",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#next",
    "access": "public",
    "description": "Calls next on Next Subject",
    "lineNumber": 110,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "{Model}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "complete",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#complete",
    "access": "public",
    "description": "Calls next on Complete Subject",
    "lineNumber": 126,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "{Model}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "error",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#error",
    "access": "public",
    "description": "Calls next on Error Subject",
    "lineNumber": 138,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "{Model}"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "{*}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 103,
    "kind": "file",
    "name": "src/classes/_observerBuilder.test.js",
    "content": "import {ObserverBuilder} from \"./_observerBuilder\";\nimport {RxVO} from \"./rxvo\";\nimport {PropertiesModel} from \"./propertiesModel\";\n\ndescribe(\"ObserverBuilder Unit Test Suite\", () => {\n    describe(\"Builder Methods\", () => {\n        let _observer = null;\n        let _schema = null;\n\n        beforeEach(function () {\n            _observer = null;\n            _schema = new PropertiesModel({\n                name: {\n                    required: true,\n                    type: \"String\",\n                },\n                active: {\n                    required: true,\n                    polymorphic: [{type: \"Boolean\"}, {type: \"Number\"}],\n                }\n            }, null, new RxVO());\n        });\n\n        it.skip(\"should create an observer\", function () {\n            ObserverBuilder.create(\"active\", _schema);\n            _observer = ObserverBuilder.getInstance().get(\"active\");\n            expect(typeof _observer.subscribe).toEqual(\"function\");\n        });\n\n        it.skip(\"should subscribe to observer and get value\", function (done) {\n            const _f = {\n                next: (o) => {\n                    expect(o).toBe(true);\n                    done();\n                },\n                error: (e) => {\n                    done(e);\n                }\n            };\n            _schema.subscribeTo(\"active\", _f);\n            _schema.model = {\n                name: \"item-A\",\n                active: true\n            };\n        });\n    });\n});",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/_observerBuilder.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 104,
    "kind": "file",
    "name": "src/classes/_references.js",
    "content": "/* ############################################################################\nThe MIT License (MIT)\n\nCopyright (c) 2016 - 2019 Van Schroeder\nCopyright (c) 2017-2019 Webfreshener, LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n############################################################################ */\n/**\n * @private Weakmap Refs\n */\nimport {exists, Fun, Obj, Str} from \"ofs-utils\";\nexport const _exists = exists;\nexport const wf = {\n    Fun:Fun,\n    Obj: Obj,\n    Str: Str\n};\n\n/**\n * Holder for PropertiesModel and ItemsModel instance references\n *\n * @type {WeakMap}\n * @private\n */\nexport const _object = new WeakMap();\n\n/**\n * Holder for MetaData references\n * @type {WeakMap}\n * @private\n */\nexport const _mdRef = new WeakMap();\n\n/**\n * Holder for AjvWrapper references\n * @type {WeakMap<Object, ajv>}\n * @private\n */\nexport const _ajvRef = new WeakMap();\n\n/**\n * Holder for models in transition\n *\n * @type {WeakMap}\n * @private\n */\nexport const _dirtyModels = new WeakMap();\n\n/**\n * Holder for PropertiesModel Validators\n * @type {WeakMap}\n * @private\n */\nexport const _validators = new WeakMap();\n\n/**\n * Holder for PropertiesModel options refeerences\n *\n * @type {WeakMap}\n * @private\n */\nexport const _schemaOptions = new WeakMap();\n\n/**\n * Holder for PropertiesModel Helpers references\n *\n * @type {WeakMap}\n * @private\n */\nexport const _schemaHelpers = new WeakMap();\n\n/**\n * Holder for RXJS Observer references\n * @type {WeakMap}\n * @private\n */\nexport const _observers = new WeakMap();\n\n/**\n * Holder for RXJS Observer references\n * @type {WeakMap}\n * @private\n */\nexport const _observerPaths = new WeakMap();\n\n/**\n * Holder for Observer Builders\n * @type {WeakMap}\n * @private\n */\nexport const _oBuilders = new WeakMap();\n\n/**\n * Holder for JSON-Schemas\n * @type {WeakMap}\n * @private\n */\nexport const _schemaSignatures = new WeakMap();\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/_references.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 105,
    "kind": "variable",
    "name": "_exists",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_exists",
    "access": "private",
    "export": true,
    "importPath": "rxvo/src/classes/_references.js",
    "importStyle": "{_exists}",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "variable",
    "name": "wf",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~wf",
    "access": "public",
    "export": true,
    "importPath": "rxvo/src/classes/_references.js",
    "importStyle": "{wf}",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "{\"Fun\": *, \"Obj\": *, \"Str\": *}"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "variable",
    "name": "_object",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_object",
    "access": "private",
    "export": true,
    "importPath": "rxvo/src/classes/_references.js",
    "importStyle": "{_object}",
    "description": "Holder for PropertiesModel and ItemsModel instance references",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 108,
    "kind": "variable",
    "name": "_mdRef",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_mdRef",
    "access": "private",
    "export": true,
    "importPath": "rxvo/src/classes/_references.js",
    "importStyle": "{_mdRef}",
    "description": "Holder for MetaData references",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 109,
    "kind": "variable",
    "name": "_ajvRef",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_ajvRef",
    "access": "private",
    "export": true,
    "importPath": "rxvo/src/classes/_references.js",
    "importStyle": "{_ajvRef}",
    "description": "Holder for AjvWrapper references",
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap<Object, ajv>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 110,
    "kind": "variable",
    "name": "_dirtyModels",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_dirtyModels",
    "access": "private",
    "export": true,
    "importPath": "rxvo/src/classes/_references.js",
    "importStyle": "{_dirtyModels}",
    "description": "Holder for models in transition",
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 111,
    "kind": "variable",
    "name": "_validators",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_validators",
    "access": "private",
    "export": true,
    "importPath": "rxvo/src/classes/_references.js",
    "importStyle": "{_validators}",
    "description": "Holder for PropertiesModel Validators",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 112,
    "kind": "variable",
    "name": "_schemaOptions",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_schemaOptions",
    "access": "private",
    "export": true,
    "importPath": "rxvo/src/classes/_references.js",
    "importStyle": "{_schemaOptions}",
    "description": "Holder for PropertiesModel options refeerences",
    "lineNumber": 80,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 113,
    "kind": "variable",
    "name": "_schemaHelpers",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_schemaHelpers",
    "access": "private",
    "export": true,
    "importPath": "rxvo/src/classes/_references.js",
    "importStyle": "{_schemaHelpers}",
    "description": "Holder for PropertiesModel Helpers references",
    "lineNumber": 88,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 114,
    "kind": "variable",
    "name": "_observers",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_observers",
    "access": "private",
    "export": true,
    "importPath": "rxvo/src/classes/_references.js",
    "importStyle": "{_observers}",
    "description": "Holder for RXJS Observer references",
    "lineNumber": 95,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 115,
    "kind": "variable",
    "name": "_observerPaths",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_observerPaths",
    "access": "private",
    "export": true,
    "importPath": "rxvo/src/classes/_references.js",
    "importStyle": "{_observerPaths}",
    "description": "Holder for RXJS Observer references",
    "lineNumber": 102,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 116,
    "kind": "variable",
    "name": "_oBuilders",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_oBuilders",
    "access": "private",
    "export": true,
    "importPath": "rxvo/src/classes/_references.js",
    "importStyle": "{_oBuilders}",
    "description": "Holder for Observer Builders",
    "lineNumber": 109,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 117,
    "kind": "variable",
    "name": "_schemaSignatures",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_schemaSignatures",
    "access": "private",
    "export": true,
    "importPath": "rxvo/src/classes/_references.js",
    "importStyle": "{_schemaSignatures}",
    "description": "Holder for JSON-Schemas",
    "lineNumber": 116,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 118,
    "kind": "file",
    "name": "src/classes/_references.test.js",
    "content": "import each from \"jest-each\";\nimport {\n    _validators, _schemaHelpers,\n    _exists, _mdRef, _object,\n    _observers, _oBuilders,\n    _dirtyModels,\n    _schemaSignatures\n} from \"./_references\";\n\ndescribe(\"Maps Units\", () => {\n    describe(\"_exists method\", () => {\n        it(\"expects _exists to be defined\", () => {\n            expect(typeof _exists).toBe(\"function\");\n        });\n    });\n\n    describe(\"Shared WeakMap Reference Holders\", () => {\n        each([\n            [_validators, WeakMap, true],\n            [_schemaHelpers, WeakMap, true],\n            [_mdRef, WeakMap, true],\n            [_object, WeakMap, true],\n            [_observers, WeakMap, true],\n            [_oBuilders, WeakMap, true],\n            [_schemaSignatures, WeakMap, true],\n            [_dirtyModels, WeakMap, true],\n        ])\n            .it(\"expects %s to be a Weakmap\", (a, b, expected) => {\n                expect(a instanceof b).toBe(expected);\n            });\n    });\n});\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/_references.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 119,
    "kind": "file",
    "name": "src/classes/_schemaHelpers.js",
    "content": "/* ############################################################################\nThe MIT License (MIT)\n\nCopyright (c) 2016 - 2019 Van Schroeder\nCopyright (c) 2017-2019 Webfreshener, LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n############################################################################ */\nimport {_exists, _mdRef, _oBuilders} from \"./_references\";\nimport {MetaData} from \"./_metaData\";\nimport {PropertiesModel} from \"./propertiesModel\";\nimport {ItemsModel} from \"./itemsModel\";\n\n/**\n * @private\n */\nexport class SchemaHelpers {\n    /**\n     * @constructor\n     */\n    constructor(_ref) {\n        if (!_exists(_ref) || (typeof _ref) !== \"object\") {\n            throw new Error(\"arguments[0] must be an object\");\n        }\n\n        this._ref = _ref;\n        Object.seal(this);\n    }\n\n    /**\n     * Sets Object key/values upon PropertiesModel Reference\n     * @param obj\n     * @returns {*}\n     */\n    setObject(obj) {\n        if (typeof obj === \"string\") {\n            return obj;\n        }\n        // calls set with nested key value pair\n        Object.keys(obj).forEach((k) => {\n            let eMsg = this._ref.set(k, obj[k]);\n            if (typeof eMsg === \"string\") {\n                throw new Error(eMsg);\n            }\n        });\n        return this._ref;\n    }\n\n    /**\n     * Creates Child Model and set data on it\n     * @param key\n     * @param value\n     * @returns {*}\n     */\n    setChildObject(key, value) {\n        let _mdData = _mdRef.get(this._ref);\n        let _s = this.createSchemaChild(key, value, _mdData);\n\n        // creates Observables for new Child Model\n        _oBuilders.get(this._ref.rxvo).create(_s);\n\n        if (typeof _s === \"string\") {\n            return _s;\n        } else if (!_exists(_s) ||\n            typeof _s !== \"object\") {\n            return `'${key}' was invalid`;\n        }\n\n        _s.model = value;\n        return _s.model;\n    }\n\n    /**\n     * Creates Child Model\n     * @param {string} key\n     * @param {*} value\n     * @param {MetaData} metaData\n     * @returns {Model|string} - PropertiesModel, ItemsModel or error string\n     */\n    createSchemaChild(key, value, metaData) {\n        let path = !Array.isArray(this._ref.model) ?\n            `${this._ref.path}/properties/${key}` : `${this._ref.path}/items`;\n        // populates MetaData config object\n        let _d = Object.assign({\n            _path: path,\n            _parent: this._ref,\n            _root: this._ref.root,\n            _rxvo: this._ref.rxvo,\n        }, metaData || {});\n\n        // constructs new MetaData object with owner as reference point for chaining\n        let _md = new MetaData(this._ref, _d);\n\n        // returns new child Model\n        return new ((!Array.isArray(value)) ? PropertiesModel : ItemsModel)(_md);\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/_schemaHelpers.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 120,
    "kind": "class",
    "name": "SchemaHelpers",
    "memberof": "src/classes/_schemaHelpers.js",
    "static": true,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "access": "private",
    "export": true,
    "importPath": "rxvo/src/classes/_schemaHelpers.js",
    "importStyle": "{SchemaHelpers}",
    "description": "",
    "lineNumber": 34,
    "interface": false
  },
  {
    "__docId__": 121,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 122,
    "kind": "member",
    "name": "_ref",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#_ref",
    "access": "private",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "setObject",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#setObject",
    "access": "public",
    "description": "Sets Object key/values upon PropertiesModel Reference",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "setChildObject",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#setChildObject",
    "access": "public",
    "description": "Creates Child Model and set data on it",
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "createSchemaChild",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#createSchemaChild",
    "access": "public",
    "description": "Creates Child Model",
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Model|string} - PropertiesModel, ItemsModel or error string"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MetaData"
        ],
        "spread": false,
        "optional": false,
        "name": "metaData",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Model",
        "string"
      ],
      "spread": false,
      "description": "PropertiesModel, ItemsModel or error string"
    }
  },
  {
    "__docId__": 126,
    "kind": "file",
    "name": "src/classes/_schemaHelpers.test.js",
    "content": "import {_mdRef} from \"./_references\";\nimport {PropertiesModel} from \"./propertiesModel\";\nimport {RxVO} from \"./rxvo\";\nimport {SchemaHelpers} from \"./_schemaHelpers\";\nimport {basicModel} from \"../../fixtures/PropertiesModel.schemas\";\n\ndescribe(\"SchemaHelpers Class Tests\", () => {\n    let _rxvo, _schema, _sH;\n\n    beforeEach(() => {\n        _rxvo = new RxVO(basicModel);\n        _schema = new PropertiesModel(_rxvo);\n        _sH = new SchemaHelpers(_schema);\n    });\n\n    describe(\"Child Object Methods\", () => {\n        beforeEach(() => {\n            _rxvo = new RxVO({schemas: [basicModel]});\n            _schema = new PropertiesModel(_rxvo);\n            _sH = new SchemaHelpers(_schema);\n        });\n\n        it(\"should set PropertiesModel from Object values\", () => {\n            expect((typeof _sH.setObject({properties: {name: \"bar\"}})) === \"string\").toBe(false);\n            expect(_schema.model.properties.name).toBe(\"bar\");\n        });\n\n        describe(\"Create Object\", () => {\n            it(\"should create Child PropertiesModel Object\", () => {\n                let _sC = _sH.createSchemaChild(\"foo\", {}, _mdRef.get(_schema));\n                expect((typeof _sC) === \"string\").toBe(false);\n                expect(_sC instanceof PropertiesModel).toBe(true);\n            });\n        });\n        describe(\"ItemsModel Values\", () => {\n            it(\"should set Value Object on Child PropertiesModel\", () => {\n                const sH = new SchemaHelpers(_schema);\n                const _child = sH.setChildObject(\"\", {baz: 123});\n                expect(typeof _child).toBe(\"object\");\n                expect(_child.baz).toBe(123);\n            });\n        });\n\n    });\n});\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/_schemaHelpers.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 127,
    "kind": "file",
    "name": "src/classes/itemsModel.js",
    "content": "/* ############################################################################\nThe MIT License (MIT)\n\nCopyright (c) 2016 - 2019 Van Schroeder\nCopyright (c) 2017-2019 Webfreshener, LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n############################################################################ */\nimport {\n    _object, _schemaHelpers, _oBuilders,\n} from \"./_references\";\nimport {Model} from \"./model\";\nimport {SchemaHelpers} from \"./_schemaHelpers\";\nimport {makeClean, makeDirty, refAtKeyValidation, refValidation} from \"./utils\";\nimport Notifiers from \"./_branchNotifier\";\n\nconst _observerDelegates = new WeakMap();\n\n/**\n * @class ItemsModel\n */\nexport class ItemsModel extends Model {\n    /**\n     * @constructor\n     */\n    constructor() {\n        super(arguments[0]);\n        _schemaHelpers.set(this, new SchemaHelpers(this));\n        _object.set(this, new Proxy(Model.createRef(this, []), this.handler));\n    }\n\n    /**\n     * getter for object model\n     */\n    get model() {\n        return _object.get(this);\n    }\n\n    /**\n     * setter for object model\n     * @param value\n     */\n    set model(value) {\n        if (!Array.isArray(value) || this.isFrozen) {\n            return false;\n        }\n\n        let _idx = 0;\n        // value.forEach((itm) => {\n        //     let _defaults = this.rxvo.getDefaultsForPath(this.jsonPath);\n        //     if (Object.keys(_defaults).length) {\n        //         value[_idx] = merge(_defaults, itm);\n        //     }\n        //     _idx++;\n        // });\n\n        if (refValidation(this, value) !== true) {\n            Notifiers.get(this.rxvo).sendError(this.jsonPath, this.rxvo.errors);\n            return false;\n        }\n\n        if (!this.isDirty) {\n            // marks model as dirty to prevent cascading validation calls\n            makeDirty(this);\n        }\n\n        _oBuilders.get(this.rxvo).mute(this);\n\n        _object.set(this, new Proxy(Model.createRef(this, []), this.handler));\n        _observerDelegates.set(this, true);\n\n        try {\n            let cnt = 0;\n\n            value.forEach((val) => {\n                _object.get(this)[cnt++] = val;\n            });\n            // todo: review why this wont fly\n            // _object.get(this).splice(0,0, value);\n        } catch (e) {\n            makeClean(this);\n            _oBuilders.get(this.rxvo).unmute(this);\n            Notifiers.get(this.rxvo).sendError(this.jsonPath, e);\n            return false;\n        }\n\n        makeClean(this);\n\n        if (!this.isDirty) {\n            _oBuilders.get(this.rxvo).unmute(this);\n            Notifiers.get(this.rxvo).sendNext(this.jsonPath);\n            _observerDelegates.delete(this);\n        }\n\n        return true;\n    }\n\n    get handler() {\n        return Object.assign(super.handler, {\n            get: (t, idx) => {\n                // TODO: review for removal\n                // if (typeof idx === \"symbol\") {\n                //     idx = `${String(idx)}`;\n                // }\n\n                if (idx === \"length\") {\n                    return t.length;\n                }\n\n                if (idx in Array.prototype) {\n                    // only handle methods that modify the reference array\n                    if ([\"fill\", \"pop\", \"push\", \"shift\", \"splice\", \"unshift\"].indexOf(idx) > -1) {\n                        return applyMethod(this, t, idx);\n                    } else {\n                        return t[idx];\n                    }\n                }\n\n                if (idx === \"$model\") {\n                    return this;\n                }\n\n                return t[idx];\n            },\n            set: (t, idx, value) => {\n                if (idx in Array.prototype) {\n                    // do nothing against proto props\n                    return true;\n                }\n\n                // -- ensures we aren't in a frozen hierarchy branch\n                if (this.isFrozen) {\n                    return false;\n                }\n\n                let _oDel = _observerDelegates.get(this);\n\n                if (refAtKeyValidation(this, \"items\", value) !== true) {\n                    if (_oDel !== void(0)) {\n                        makeClean(this);\n                        Notifiers.get(this.rxvo).sendError(this.jsonPath, this.rxvo.errors);\n                    }\n                    return false;\n                }\n\n                // we set the value on the array with success\n                if ((typeof value) === \"object\") {\n                    let _sH = _schemaHelpers.get(this);\n                    value = _sH.setChildObject(`${this.path}`, value);\n                }\n\n                t[idx] = value;\n\n                // makes clean if not serial operation\n                if (_oDel !== void(0)) {\n                    makeClean(this);\n                    // updates observers\n                    // Notifiers.get(this.rxvo).sendNext(this.jsonPath);\n                }\n\n                return true;\n            },\n\n            deleteProperty: (t, idx) => {\n                return deleteTrap(this, t, idx);\n            }\n        });\n    }\n}\n\n/**\n * Handles Proxy Delete Trap for Array elements\n * @param model\n * @param t\n * @param idx\n * @returns {boolean}\n */\nconst deleteTrap = (model, t, idx) => {\n    let _oDel = _observerDelegates.get(model);\n    // creates mock of future Model state for evaluation\n    let _o = [].concat(t);\n    try {\n        // attempts splice method to\n        // remove item at given index index\n        _o.splice(idx, 1);\n    } catch (e) {\n        if (!_oDel) {\n            makeClean(model);\n            Notifiers.get(model.rxvo).sendError(model.jsonPath, e);\n        }\n        return false;\n    }\n\n    // validates mock of change state\n    const _res = refValidation(model, _o);\n\n\n    if (_res !== true) {\n        // makes clean and notifies\n        // if not serial operation\n        if (!_oDel) {\n            makeClean(model);\n            Notifiers.get(model.rxvo).sendError(model.jsonPath, _res);\n        }\n        return false;\n    }\n\n    // applies operation\n    t.splice(idx, 1);\n\n    // flags model as in sync with tree\n    makeClean(model);\n\n    // updates observers\n    Notifiers.get(model.rxvo).sendNext(model.jsonPath);\n    return true;\n};\n\n/**\n * Handles proxy get for Array proto methods\n * @param model\n * @param t\n * @param idx\n * @returns {function(...[*]=)}\n */\nconst applyMethod = (model, t, idx) => {\n\n    // returns closure analog to referenced method\n    return (...args) => {\n        // mocks current model state\n        const _arr = [].concat(t);\n\n        // applies method to model state\n        const _val = t[idx].apply(_arr, args);\n\n        // validates updated mock\n        const _res = refValidation(model, _arr);\n\n        // in event of validation failure\n        if (_res !== true) {\n            // .. marks model as clean\n            makeClean(model);\n\n            // .. sends notifications\n            Notifiers.get(model.rxvo).sendError(model.jsonPath,\n                model.rxvo.errors);\n\n            return false;\n        }\n\n        // model is a kludge to handle updates from proto methods\n        if (model.parent !== null) {\n            // applies change to parent object if model is not root context\n            model.parent.model[model.jsonPath.split(\".\").pop()] = _arr;\n        } else {\n            // applies change to RxVO instance\n            model.rxvo.model = _arr;\n        }\n\n        return _val;\n    }\n};\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/itemsModel.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 128,
    "kind": "variable",
    "name": "_observerDelegates",
    "memberof": "src/classes/itemsModel.js",
    "static": true,
    "longname": "src/classes/itemsModel.js~_observerDelegates",
    "access": "private",
    "export": false,
    "importPath": "rxvo/src/classes/itemsModel.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 129,
    "kind": "class",
    "name": "ItemsModel",
    "memberof": "src/classes/itemsModel.js",
    "static": true,
    "longname": "src/classes/itemsModel.js~ItemsModel",
    "access": "public",
    "export": true,
    "importPath": "rxvo/src/classes/itemsModel.js",
    "importStyle": "{ItemsModel}",
    "description": "",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "ItemsModel"
      }
    ],
    "interface": false,
    "extends": [
      "src/classes/model.js~Model"
    ]
  },
  {
    "__docId__": 130,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/itemsModel.js~ItemsModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/itemsModel.js~ItemsModel#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 131,
    "kind": "get",
    "name": "model",
    "memberof": "src/classes/itemsModel.js~ItemsModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/itemsModel.js~ItemsModel#model",
    "access": "public",
    "description": "getter for object model",
    "lineNumber": 52,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "set",
    "name": "model",
    "memberof": "src/classes/itemsModel.js~ItemsModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/itemsModel.js~ItemsModel#model",
    "access": "public",
    "description": "setter for object model",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 133,
    "kind": "get",
    "name": "handler",
    "memberof": "src/classes/itemsModel.js~ItemsModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/itemsModel.js~ItemsModel#handler",
    "access": "public",
    "description": null,
    "lineNumber": 115,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "function",
    "name": "deleteTrap",
    "memberof": "src/classes/itemsModel.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/itemsModel.js~deleteTrap",
    "access": "public",
    "export": false,
    "importPath": "rxvo/src/classes/itemsModel.js",
    "importStyle": null,
    "description": "Handles Proxy Delete Trap for Array elements",
    "lineNumber": 195,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "idx",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 135,
    "kind": "function",
    "name": "applyMethod",
    "memberof": "src/classes/itemsModel.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/itemsModel.js~applyMethod",
    "access": "public",
    "export": false,
    "importPath": "rxvo/src/classes/itemsModel.js",
    "importStyle": null,
    "description": "Handles proxy get for Array proto methods",
    "lineNumber": 243,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function(...[*]=)}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "idx",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function(...[*]=)"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 136,
    "kind": "file",
    "name": "src/classes/itemsModel.test.js",
    "content": "import {RxVO} from \"./rxvo\";\nimport {default as deepEqual} from \"deep-equal\";\nimport {\n    stringsCollection,\n    stringsMinMaxCollection,\n    objectCollection, objectCollectionDefaults\n} from \"../../fixtures/ItemsModel.schemas\";\nimport {Model} from \"./model\";\n\ndescribe(\"ItemsModel Class Suite\", function () {\n\n    describe(\"Simple ItemsModel Tests\", () => {\n        beforeEach(() => {\n            this.rxvo = new RxVO({schemas: [stringsCollection]});\n        });\n\n        describe(\"LifeCycle: Instantiation\", () => {\n            it(\"should initialize a schema and a schema object\", () => {\n                expect(this.rxvo.model.$model).toBeDefined();\n                expect(this.rxvo.model.$model instanceof Model).toBe(true);\n            });\n\n            it(\"should not initialize a invalid schema and schema object\", () => {\n                let badSchema = Object.assign({}, stringsCollection, {\n                    items: [{type: \"INVALID\"}],\n                });\n                expect(() => new RxVO({schemas: [badSchema]})).toThrow();\n            });\n        });\n\n        describe(\"ItemsModel LifeCycle: Creation\", () => {\n\n            let _d;\n\n            it(\"should populate with valid data and make that data accessible\", (done) => {\n                _d = [\"abc\", \"def\", \"ghi\"];\n                let _cnt = 0;\n\n                this.rxvo.subscribe({\n                    next: (m) => {\n                        _cnt++;\n                        expect(deepEqual(this.rxvo.model, _d)).toBe(true);\n                    },\n                    error: done,\n                });\n\n                setTimeout(() => {\n                    expect(_cnt).toEqual(1);\n                    done();\n                }, 100);\n\n                this.rxvo.model = _d;\n            });\n\n            it(\"should reject invalid data and leave model pristine\", () => {\n                _d = [99, 100, 101];\n\n                this.rxvo.model = _d;\n                expect(deepEqual(this.rxvo.model, {})).toBe(true);\n            });\n        });\n    });\n\n    describe(\"Nested Elements Tests\", () => {\n        beforeEach(() => {\n            this.rxvo = new RxVO({schemas: [objectCollection]});\n        });\n\n        describe(\"LifeCycle: Instantiation\", () => {\n            it(\"should initialize a valid schema and a schema object\", () => {\n                expect(this.rxvo.model.$model).toBeDefined();\n                expect(this.rxvo.model.$model instanceof Model).toBe(true);\n                expect(this.rxvo.model.$model).toBeDefined();\n                expect(this.rxvo.model.$model instanceof Model).toBe(true);\n            });\n        });\n\n        describe(\"ItemsModel LifeCycle: Nested Create\", () => {\n\n            let _d;\n\n            it(\"should populate with valid data and make that data accessible\", (done) => {\n                _d = [{\n                    name: \"Item A\",\n                    value: 1,\n                }, {\n                    name: \"Item B\",\n                }, {\n                    name: \"Item C\",\n                    value: 2,\n                }];\n\n                let _cnt = 0;\n\n                this.rxvo.subscribe({\n                    next: (m) => {\n                        _cnt++;\n                    },\n                    error: done,\n                });\n\n                setTimeout(() => {\n                    expect(_cnt).toEqual(1);\n                    done();\n                }, 100);\n\n                this.rxvo.model = _d;\n                // expect(deepEqual(this.rxvo.model, _d)).toBe(true);\n            });\n\n            it(\"should reject invalid data and leave model pristine\", () => {\n                _d = [{\n                    name: 123,\n                    value: 1,\n                }, {\n                    value: \"Item B\",\n                }, {\n                    value: 2,\n                }];\n\n                this.rxvo.model = _d;\n                expect(typeof this.rxvo.errors).toBe(\"object\");\n                expect(deepEqual(this.rxvo.model, [])).toBe(true);\n            });\n        });\n\n        describe(\"LifeCycle: Update\", () => {\n\n            let _d;\n\n            it(\"should update nested models with valid data and pass validation\", () => {\n                _d = [{\n                    name: \"Item A\",\n                    value: 1,\n                }, {\n                    name: \"Item B\",\n                }, {\n                    name: \"Item C\",\n                    value: 2,\n                }];\n\n                this.rxvo.model = _d;\n\n                this.rxvo.model[1] = {\n                    name: \"Item B\",\n                    value: 3\n                };\n\n                expect(this.rxvo.errors).toBe(null);\n                expect(this.rxvo.model[1]).toEqual({name: \"Item B\", value: 3});\n            });\n\n            it(\"should updated properties in nested objects with valid data and pass validation\", () => {\n                _d = [{\n                    name: \"Item A\",\n                    value: 1,\n                }, {\n                    name: \"Item B\",\n                }, {\n                    name: \"Item C\",\n                    value: 2,\n                }];\n\n                this.rxvo.model = _d;\n\n                this.rxvo.model[1].value = 3;\n\n\n                expect(this.rxvo.errors).toBe(null);\n                expect(this.rxvo.model[1]).toEqual({name: \"Item B\", value: 3});\n            });\n        });\n\n        describe(\"LifeCycle: Delete\", () => {\n            beforeEach(() => {\n                this.rxvo = new RxVO({schemas: [stringsMinMaxCollection]});\n            });\n\n            let _d = [\"Item A\", \"Item B\", \"Item C\"];\n\n            it(\"should allow deletion of nested properties that are not required\", () => {\n                this.rxvo.model = _d;\n                delete this.rxvo.model[1];\n                expect(this.rxvo.errors).toBe(null);\n                expect(this.rxvo.model.length).toBe(2);\n            });\n\n            it(\"should prevent deletion of nested properties that are required\", () => {\n                this.rxvo.model = _d;\n                delete this.rxvo.model[0];\n                delete this.rxvo.model[1];\n                delete this.rxvo.model[2];\n                expect(typeof this.rxvo.errors).toBe(\"object\");\n                expect(this.rxvo.model.length).toBe(1);\n            });\n        });\n\n        describe(\"LifeCycle: Reset\", () => {\n            beforeEach(() => {\n                this.rxvo = new RxVO({schemas: [objectCollection]});\n            });\n\n            it(\"should notifiy subsequent validations\", () => {\n                const _d = [{\n                    name: \"Item A\",\n                    value: 1,\n                }, {\n                    name: \"Item B\",\n                }, {\n                    name: \"Item C\",\n                    value: 2,\n                }];\n\n                this.rxvo.model = _d;\n\n                setTimeout(() => {\n                    this.rxvo.subscribe({\n                        next: (m) => {\n                            expect(m.models.length).toEqual(3);\n                            done()\n                        },\n                        error: done,\n                    });\n\n                    this.rxvo.model = _d;\n                }, 100);\n            });\n        });\n\n\n    });\n\n    describe(\"Array Prototype method tests\", () => {\n        beforeEach(() => {\n            this.rxvo = new RxVO({schemas: [stringsMinMaxCollection]});\n            this.rxvo.model = [\"Item A\", \"Item B\", \"Item C\"];\n        });\n\n        it(\"should fill with validation\", () => {\n            this.rxvo.model.fill([\"Item A\", \"Item B\", \"Item C\", \"Item D\"]);\n            expect(typeof this.rxvo.errors).toBe(\"object\");\n            expect(this.rxvo.model.length).toBe(3);\n        });\n\n        it(\"should pop with validation\", () => {\n            this.rxvo.model.pop();\n            this.rxvo.model.pop();\n            this.rxvo.model.pop();\n            expect(typeof this.rxvo.errors).toBe(\"object\");\n            expect(this.rxvo.model.length).toBe(1);\n        });\n\n        it(\"should push with validation\", () => {\n            this.rxvo.model.push(\"Item D\");\n            expect(typeof this.rxvo.errors).toBe(\"object\");\n            expect(this.rxvo.model.length).toBe(3);\n            expect(this.rxvo.model[2]).toBe(\"Item C\");\n        });\n\n        it(\"should shift with validation\", () => {\n            this.rxvo.model.shift();\n            this.rxvo.model.shift();\n            this.rxvo.model.shift();\n            expect(typeof this.rxvo.errors).toBe(\"object\");\n            expect(this.rxvo.model.length).toBe(1);\n        });\n\n        it(\"should splice with validation\", () => {\n            // remove all..\n            this.rxvo.model.splice(0, -1);\n            expect(typeof this.rxvo.errors).toBe(\"object\");\n            expect(this.rxvo.model.length).toBe(3);\n            // append element...\n            this.rxvo.model.splice(0, 0, \"Item D\");\n            expect(typeof this.rxvo.errors).toBe(\"object\");\n            expect(this.rxvo.model.length).toBe(3);\n        });\n\n        it(\"should unshift with validation\", () => {\n            this.rxvo.model.unshift(\"Item Z\");\n            expect(typeof this.rxvo.errors).toBe(\"object\");\n            expect(this.rxvo.model.length).toBe(3);\n        });\n    });\n\n    describe(\"Default Values\", () => {\n        it(\"should apply defaults to items\", () => {\n            this.rxvo = new RxVO({schemas: [objectCollectionDefaults]}, {ajvOptions: {useDefaults: true}});\n            this.rxvo.model = [{}];\n            expect(this.rxvo.model[0]).toEqual({name: \"abc\"});\n        });\n    });\n\n    describe(\"Model Class methods \", () => {\n\n        it(\"should not reset if it would invalidate model\", () => {\n            const _rxvo = new RxVO({schemas: [stringsMinMaxCollection]});\n            _rxvo.model = [\"Item A\", \"Item B\", \"Item C\"];\n            expect(_rxvo.model.length).toBe(3);\n            _rxvo.model.$model.reset();\n            expect(_rxvo.model.length).toBe(3);\n        });\n\n        it(\"should reset it's collection if allowed\", () => {\n            const _rxvo = new RxVO({schemas: [stringsCollection]});\n            _rxvo.model = [\"Item A\", \"Item B\", \"Item C\"];\n            _rxvo.model = [\"Item A\", \"Item B\", \"Item C\"];\n            expect(_rxvo.model.length).toBe(3);\n            _rxvo.model.$model.reset();\n            expect(_rxvo.model.length).toBe(0);\n        });\n\n        it(\"should quietly validate data with the validate method\", () => {\n            const _rxvo = new RxVO({schemas: [stringsCollection]});\n            expect(_rxvo.model.$model.validate([1, 2, 3])).toBe(\"data/0 should be string\");\n            expect(_rxvo.model.$model.validate([\"1\", \"2\", \"3\"])).toBe(true);\n        });\n\n        it(\"should freeze it's model\", () => {\n            const _rxvo = new RxVO({schemas: [stringsCollection]});\n            _rxvo.model = [\"Item A\", \"Item B\", \"Item C\"];\n            _rxvo.model.$model.freeze();\n            expect(_rxvo.model.$model.isFrozen).toBe(true);\n            _rxvo.model = [\"1\", \"2\", \"3\"];\n            expect(deepEqual(_rxvo.model, [\"Item A\", \"Item B\", \"Item C\"])).toBe(true);\n        });\n\n        it(\"should freeze it's model hierarchy\", () => {\n            const _rxvo = new RxVO({schemas: [objectCollection]});\n            const _orig = [{\n                name: \"My Name\",\n                active: true,\n            }];\n\n            _rxvo.model = _orig;\n            _rxvo.model.$model.freeze();\n\n            expect(_rxvo.model.$model.isFrozen).toBe(true);\n            // should not allow array to be overriden\n            _rxvo.model = [{\n                name: \"Your Name\",\n                active: false,\n            }];\n            expect(deepEqual(_rxvo.model, _orig)).toBe(true);\n            // should not allow array item to be overriden\n            _rxvo.model[0] = {\n                name: \"Your Name\",\n                active: false,\n            };\n            expect(deepEqual(_rxvo.model, _orig)).toBe(true);\n            // should not set attributes on nested object properties\n            _rxvo.model[0].name = \"Other Name\";\n            expect(deepEqual(_rxvo.model, _orig)).toBe(true);\n        });\n    });\n});\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/itemsModel.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 137,
    "kind": "file",
    "name": "src/classes/model-rxjs.test.js",
    "content": "import {PropertiesModel} from \"./propertiesModel\";\nimport {RxVO} from \"./rxvo\";\nimport {basicModel, scoresModel} from \"../../fixtures/PropertiesModel.schemas\";\nimport {_observers, _oBuilders} from \"./_references\";\nimport deepEqual from \"deep-equal\";\n\ndescribe(\"RXJS Test Suite\", () => {\n    describe(\"Basic Notifications\", () => {\n        describe(\"update\", () => {\n            // let _rxvo;\n            // beforeEach(() => {\n            //     _rxvo = new RxVO(basicModel);\n            // });\n            //\n            // afterEach(() => {\n            //     _rxvo = null;\n            // });\n\n            it(\"should have some tests\", (done) => {\n                const _rxvo = new RxVO({schemas: [basicModel]});\n                const _d = {\n                    name: \"A Name\",\n                    age: 99,\n                    active: true,\n                };\n\n                const _sub = _rxvo.subscribe({\n                    next: (model) => {\n                        _sub.unsubscribe();\n                        expect(deepEqual(model.toJSON(), _d)).toBe(true);\n                        done()\n                    },\n                    error: (e) => {\n                        _sub.unsubscribe();\n                        done(e);\n                    }\n                });\n\n                _rxvo.model = _d;\n            });\n        });\n    });\n\n    describe(\"Nested Element Notifications\", () => {\n        describe(\"update\", () => {\n            // let _rxvo;\n\n            beforeEach(() => {\n                // _rxvo = new RxVO(scoresModel);\n            });\n\n            afterEach(() => {\n                // _rxvo = null;\n            });\n\n            it(\"should have some tests\", (done) => {\n                const _rxvo1 = new RxVO({schemas: [scoresModel]});\n                _rxvo1.model = {\n                    name: \"A Game\",\n                    topScores: [{\n                        name: \"Player 1\",\n                        score: 1000000000,\n                    }, {\n                        name: \"Player 2\",\n                        score: 2000000000,\n                    }],\n                };\n\n                let cnt = 0;\n\n                const _sub = _rxvo1.subscribe({\n                    next: (res) => {\n                        // expect(res.model.topScores.length).toBe(3);\n                        // _sub.unsubscribe();\n                        done()\n                    },\n                    error: (e) => {\n                        done(JSON.stringify(e));\n                    }\n                });\n\n                _rxvo1.model.topScores.push({\n                    name: \"Player 3\",\n                    score: 3000000000,\n                });\n\n                // console.log(_rxvo1.errors);\n\n                // _rxvo.model.topScores.splice(1, 1, {\n                //     name: \"Player 3\",\n                //     score: 4000000000,\n                // });\n\n            });\n        });\n    });\n});",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/model-rxjs.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 138,
    "kind": "file",
    "name": "src/classes/model.js",
    "content": "/* ############################################################################\nThe MIT License (MIT)\n\nCopyright (c) 2016 - 2019 Van Schroeder\nCopyright (c) 2017-2019 Webfreshener, LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n############################################################################ */\nimport {\n    _mdRef, _oBuilders, _object, _schemaOptions, _dirtyModels\n} from \"./_references\";\nimport {RxVO} from \"./rxvo\";\nimport {MetaData} from \"./_metaData\";\nimport {makeClean, makeDirty, validate} from \"./utils\";\nimport {Pipe} from \"./pipe\";\n\n/**\n *\n * @param ref\n * @param metaRef\n */\nconst createMetaDataRef = (ref, metaRef) => {\n    let _md;\n    if (metaRef instanceof RxVO) {\n        // root properties are handed the RxVO object\n        // will create new MetaData and set reference as root element\n        _md = new MetaData(ref, {\n            _path: \"\",\n            _parent: null,\n            _root: ref,\n            _rxvo: metaRef,\n        });\n    } else if ((typeof metaRef) === \"object\") {\n        // extends MetaData reference\n        if (metaRef instanceof MetaData) {\n            _md = metaRef;\n        } else {\n            // todo: re-evaluate this line for possible removal\n            _md = new MetaData(this, metaRef);\n        }\n    } else {\n        throw \"Invalid attempt to construct Model.\" +\n        \"tip: use `new RxVO([schema])` instead\"\n    }\n    // sets MetaData object to global reference\n    _mdRef.set(ref, _md);\n};\n\n/**\n *\n */\nexport class Model {\n    constructor() {\n        createMetaDataRef(this, arguments[0]);\n    }\n\n    /**\n     * Subscribes handler method to observer for model\n     * @param func\n     * @returns {object}\n     */\n    subscribe(func) {\n        return this.subscribeTo(this.path, func);\n    }\n\n    /**\n     * Subscribes handler method to property observer for path\n     * @param path\n     * @param func\n     * @return {object}\n     */\n    subscribeTo(path, func) {\n        const _oBuilder = _oBuilders.get(this.rxvo);\n        const _o = _oBuilder.getObserverForPath(path);\n        if (_o === null) {\n            return _o;\n        }\n\n        // support next handler being passed directly\n        // todo: review other valid manners of passing observer callbacks\n        if ((typeof func) === \"function\") {\n            func = {next: func};\n        }\n\n        // references to subscriptions for Observable\n        const _subRefs = [];\n\n        // init's observer handlers if defined on passed `func` object\n        [\n            {call: \"onNext\", func: \"next\"},\n            {call: \"onError\", func: \"error\"},\n            {call: \"onComplete\", func: \"complete\"},\n        ].forEach((obs) => {\n            if (func.hasOwnProperty(obs.func)) {\n                _subRefs.push(_o[obs.call].subscribe({next: func[obs.func]}));\n            }\n        });\n\n        // creates an extensible object to hold our unsubscribe method\n        // and adds unsubscribe calls to the Proto object\n        const _subs = class { };\n\n        // adds unsubscribe to the Proto object\n        _subs.prototype.unsubscribe = () => {\n            _subRefs.forEach((sub) => {\n                sub.unsubscribe();\n            });\n        };\n\n        return new _subs();\n    }\n\n    /**\n     * Tests value for validation without setting value to Model\n     * @param {json} value - JSON value to validate for validity\n     * @return {boolean}\n     */\n    validate(value) {\n        try {\n            return validate(this, this.validationPath, value);\n        } catch (e) {\n            // couldn't find schema, so is Additional Properties\n            // todo: review `removeAdditional` ajv option for related behavior\n            return true;\n        }\n\n\n    }\n\n    /**\n     * resets Model to empty value\n     * @return {Model}\n     */\n    reset() {\n        const _isArray = Array.isArray(this.model);\n        const _o = !_isArray ? {} : [];\n        const _res = this.validate(_o);\n        // validates that this model be returned to an empty value\n        if (_res !== true) {\n            _oBuilders.get(this.rxvo).error(this, _res);\n            return this;\n        }\n\n        // marks this model as out of sync with tree\n        makeDirty(this);\n\n        // closure to handle the freeze operation safely\n        const _freeze = (itm) => {\n            if (!Object.isFrozen(itm)) {\n                itm.freeze();\n            }\n        };\n\n        // freezes all child Model/Elements\n        // -- prevent changes to Children\n        // -- sends \"complete\" notification to their Observers\n        // -- revokes their Models if revocable\n        const _i = !_isArray ? Object.keys(this.model) : this.model;\n        _i.forEach((itm) => _freeze((!_isArray) ? _i[itm] : itm));\n\n        // creates new Proxied Model to operate on\n        const _p = new Proxy(Model.createRef(this, _o), this.handler);\n        _object.set(this, _p);\n\n        // marks this model as back in sync with tree\n        makeClean(this);\n\n        // sends notification of model change\n        _oBuilders.get(this.rxvo).next(this);\n\n        return this;\n    }\n\n    /**\n     * Raw value of this Model\n     * @returns {*}\n     */\n    valueOf() {\n        return _object.get(this);\n    }\n\n    /**\n     * Provides JSON object representation of Model\n     */\n    toJSON() {\n        let _derive = (itm) => {\n            // uses toJSON impl if defined\n            if (itm.hasOwnProperty(\"toJSON\") &&\n                (typeof this.toJSON) === \"function\") {\n                return itm.toJSON();\n            }\n\n            // builds new JSON tree if value is object\n            if (typeof itm === \"object\") {\n                const _o = !Array.isArray(itm) ? {} : [];\n                for (let k in itm) {\n\n                    // we validate for property to avoid warnings\n                    if (itm.hasOwnProperty(k)) {\n\n                        // applies property to tree\n                        _o[k] = _derive(itm[k]);\n                    }\n                }\n\n                // returns new JSON tree\n                return _o;\n            }\n            // hands back itm if value wasn't usable\n            return itm;\n        };\n\n        // uses closure for evaluation\n        return _derive(this.valueOf());\n    }\n\n    /**\n     * Provides JSON String representation of Model\n     * @returns {string}\n     */\n    toString() {\n        return JSON.stringify(this.toJSON());\n    }\n\n    /**\n     * Applies Object.freeze to model and triggers complete notification\n     * -- unlike Object.freeze, this prevents modification\n     * -- to all children in Model hierarchy\n     * @returns {Model}\n     */\n    freeze() {\n        Object.freeze(_object.get(this));\n        _oBuilders.get(this.rxvo).complete(this);\n        return this;\n    }\n\n    /**\n     *\n     * @return {object}\n     */\n    get handler() {\n        return {\n            setPrototypeOf: () => false,\n            isExtensible: (t) => Object.isExtensible(t),\n            preventExtensions: (t) => Object.preventExtensions(t),\n            getOwnPropertyDescriptor: (t, key) => Object.getOwnPropertyDescriptor(t, key),\n            defineProperty: (t, key, desc) => Object.defineProperty(t, key, desc),\n            has: (t, key) => key in t,\n            ownKeys: (t) => Reflect.ownKeys(t),\n            apply: () => false,\n        };\n    }\n\n    /**\n     * stub for model getter, overridden by Model sub-class\n     * @return {object|array|null}\n     */\n    get model() {\n        return null;\n    }\n\n    /**\n     * Getter for Model's Unique Object ID\n     * @returns {string} Object ID for Model\n     */\n    get objectID() {\n        return _mdRef.get(this)._id;\n    }\n\n    /**\n     * Getter for root element of Model hierarchy\n     * @returns {Model}\n     */\n    get root() {\n        return _mdRef.get(this).root || this;\n    }\n\n    /**\n     * Getter for `path` to current Element\n     * @returns {string}\n     */\n    get path() {\n        return _mdRef.get(this).path || \"\";\n    }\n\n    /**\n     * Getter for path to JSON Object for Model\n     * @returns {string}\n     */\n    get jsonPath() {\n        return this.path.replace(/\\/?(properties|items)+\\/?/g, \".\").replace(/^\\./, \"\");\n    }\n\n    /**\n     * Getter for Model's parent\n     * @returns {Model}\n     */\n    get parent() {\n        // attempts to get parent\n        return _mdRef.get(this).parent || null;\n    }\n\n    /**\n     * Getter for Model validation status for hierarchy\n     * @return {boolean}\n     */\n    get isDirty() {\n        let _res = _dirtyModels.get(this.rxvo)[this.path] || false;\n        return _res || ((this.parent === null) ? false : this.parent.isDirty);\n    }\n\n    /**\n     * Getter for model's RxVO owner object\n     * @returns {RxVO}\n     */\n    get rxvo() {\n        return _mdRef.get(this).rxvo;\n    }\n\n    /**\n     * Get options (if any) for this model's schema\n     * todo: review for possible removal\n     * @return {any}\n     */\n    get options() {\n        return _schemaOptions.get(this);\n    }\n\n    /**\n     * Getter for Object.isFrozen status of this node and it's ancestors\n     * @returns {boolean}\n     */\n    get isFrozen() {\n        let _res = Object.isFrozen(_object.get(this));\n        return !_res ? ((this.parent === null) ? false : this.parent.isFrozen) : _res;\n    }\n\n    /**\n     * Provides formatted string for json-schema lookup\n     * @return {string}\n     */\n    get validationPath() {\n        return this.path === \"\" ? \"/\" : `${this.path}`;\n    }\n\n    /**\n     * todo: add tests\n     * @returns {*}\n     */\n    get schema() {\n        return this.rxvo.getSchemaForPath(this.path);\n    }\n\n    /**\n     * creates owner Model reference on Proxied data object\n     * @param ref\n     * @param obj\n     * @returns {*}\n     */\n    static createRef(ref, obj) {\n        Object.defineProperty(obj, \"$model\", {\n            value: ref,\n            writable: false\n        });\n        return obj;\n    };\n\n    /**\n     * returns `pipe` segment for process chaining\n     * @param func\n     * @param schema\n     * @returns {Pipe}\n     */\n    pipe(schema, func) {\n        return new Pipe(this, schema, func);\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/model.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 139,
    "kind": "function",
    "name": "createMetaDataRef",
    "memberof": "src/classes/model.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/model.js~createMetaDataRef",
    "access": "public",
    "export": false,
    "importPath": "rxvo/src/classes/model.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "ref",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "metaRef",
        "description": ""
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 140,
    "kind": "class",
    "name": "Model",
    "memberof": "src/classes/model.js",
    "static": true,
    "longname": "src/classes/model.js~Model",
    "access": "public",
    "export": true,
    "importPath": "rxvo/src/classes/model.js",
    "importStyle": "{Model}",
    "description": "",
    "lineNumber": 69,
    "interface": false
  },
  {
    "__docId__": 141,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "subscribe",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#subscribe",
    "access": "public",
    "description": "Subscribes handler method to observer for model",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "subscribeTo",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#subscribeTo",
    "access": "public",
    "description": "Subscribes handler method to property observer for path",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "validate",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#validate",
    "access": "public",
    "description": "Tests value for validation without setting value to Model",
    "lineNumber": 135,
    "params": [
      {
        "nullable": null,
        "types": [
          "json"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "JSON value to validate for validity"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "reset",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#reset",
    "access": "public",
    "description": "resets Model to empty value",
    "lineNumber": 151,
    "return": {
      "nullable": null,
      "types": [
        "Model"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "valueOf",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#valueOf",
    "access": "public",
    "description": "Raw value of this Model",
    "lineNumber": 195,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "toJSON",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#toJSON",
    "access": "public",
    "description": "Provides JSON object representation of Model",
    "lineNumber": 202,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "method",
    "name": "toString",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#toString",
    "access": "public",
    "description": "Provides JSON String representation of Model",
    "lineNumber": 238,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "freeze",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#freeze",
    "access": "public",
    "description": "Applies Object.freeze to model and triggers complete notification\n-- unlike Object.freeze, this prevents modification\n-- to all children in Model hierarchy",
    "lineNumber": 248,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Model}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Model"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 150,
    "kind": "get",
    "name": "handler",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#handler",
    "access": "public",
    "description": "",
    "lineNumber": 258,
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "{\"setPrototypeOf\": *, \"isExtensible\": *, \"preventExtensions\": *, \"getOwnPropertyDescriptor\": *, \"defineProperty\": *, \"has\": *, \"ownKeys\": *, \"apply\": *}"
      ]
    }
  },
  {
    "__docId__": 151,
    "kind": "get",
    "name": "model",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#model",
    "access": "public",
    "description": "stub for model getter, overridden by Model sub-class",
    "lineNumber": 275,
    "return": {
      "nullable": null,
      "types": [
        "object",
        "array",
        "null"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "get",
    "name": "objectID",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#objectID",
    "access": "public",
    "description": "Getter for Model's Unique Object ID",
    "lineNumber": 283,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} Object ID for Model"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Object ID for Model"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "get",
    "name": "root",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#root",
    "access": "public",
    "description": "Getter for root element of Model hierarchy",
    "lineNumber": 291,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Model}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Model"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "get",
    "name": "path",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#path",
    "access": "public",
    "description": "Getter for `path` to current Element",
    "lineNumber": 299,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 155,
    "kind": "get",
    "name": "jsonPath",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#jsonPath",
    "access": "public",
    "description": "Getter for path to JSON Object for Model",
    "lineNumber": 307,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "get",
    "name": "parent",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#parent",
    "access": "public",
    "description": "Getter for Model's parent",
    "lineNumber": 315,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Model}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Model"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 157,
    "kind": "get",
    "name": "isDirty",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#isDirty",
    "access": "public",
    "description": "Getter for Model validation status for hierarchy",
    "lineNumber": 324,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "get",
    "name": "rxvo",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#rxvo",
    "access": "public",
    "description": "Getter for model's RxVO owner object",
    "lineNumber": 333,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RxVO}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RxVO"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "get",
    "name": "options",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#options",
    "access": "public",
    "description": "Get options (if any) for this model's schema\ntodo: review for possible removal",
    "lineNumber": 342,
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "get",
    "name": "isFrozen",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#isFrozen",
    "access": "public",
    "description": "Getter for Object.isFrozen status of this node and it's ancestors",
    "lineNumber": 350,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 161,
    "kind": "get",
    "name": "validationPath",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#validationPath",
    "access": "public",
    "description": "Provides formatted string for json-schema lookup",
    "lineNumber": 359,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "get",
    "name": "schema",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#schema",
    "access": "public",
    "description": "todo: add tests",
    "lineNumber": 367,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "method",
    "name": "createRef",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/model.js~Model.createRef",
    "access": "public",
    "description": "creates owner Model reference on Proxied data object",
    "lineNumber": 377,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "ref",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 164,
    "kind": "method",
    "name": "pipe",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#pipe",
    "access": "public",
    "description": "returns `pipe` segment for process chaining",
    "lineNumber": 391,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Pipe}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "schema",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Pipe"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 165,
    "kind": "file",
    "name": "src/classes/model.test.js",
    "content": "import {basicModel} from \"../../fixtures/PropertiesModel.schemas\";\nimport {RxVO} from \"./rxvo\";\n\ndescribe(\"Model Class Tests\", () => {\n    describe(\"Test Method\", () => {\n        let _rxvo;\n        const _d = {\n            name: \"Ed Testy\",\n            age: 99,\n            active: true,\n        };\n\n        beforeEach(() => {\n            _rxvo = new RxVO({schemas: [basicModel]});\n            _d.active = true;\n        });\n\n        it(\"should validate models against schema\", () => {\n\n\n            expect(_rxvo.model.$model.validate(_d)).toBe(true);\n\n            _d.active = \"1234\";\n\n            expect(_rxvo.model.$model.validate(_d)).toBe(\"data/active should be boolean\");\n        });\n\n        it(\"should support subscription callbacks object\", (done) => {\n            _rxvo.subscribe({\n                next: () => done(),\n                error: done,\n            });\n            _rxvo.model = _d;\n        });\n\n        it(\"should support next callback\", (done) => {\n            _rxvo.subscribe(() => done());\n            _rxvo.model = _d;\n        })\n    });\n})\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/model.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 166,
    "kind": "file",
    "name": "src/classes/pipe.js",
    "content": "/* ############################################################################\nThe MIT License (MIT)\n\nCopyright (c) 2016 - 2019 Van Schroeder\nCopyright (c) 2017-2019 Webfreshener, LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n############################################################################ */\nimport {RxVO} from \"./rxvo\";\n\nconst _pipes = new WeakMap();\nconst _cache = new WeakMap();\n\n/**\n * Fills callbacks array to enforce 2 callback minimum\n * @param callbacks\n * @returns {*}\n * @private\n */\nconst _fillCallback = (callbacks) => {\n    if (callbacks.length < 2) {\n        callbacks = callbacks.concat([...Array(2 - callbacks.length)\n            .fill((d) => d, 0)])\n    }\n    return callbacks;\n};\n\n/**\n * Pipe Class\n */\nexport class Pipe {\n    constructor(vo, ...pipesOrSchemas) {\n        if (!pipesOrSchemas.length) {\n            throw \"Pipe requires at least one schema or pipe element\";\n        }\n\n        if (Array.isArray(pipesOrSchemas[0])) {\n            pipesOrSchemas = pipesOrSchemas[0];\n        }\n\n        _cache.set(this, []);\n        const _sub = vo.subscribe({\n            next: (data) => {\n                // remove rxvo wrappings from object\n                data = data.toJSON ? data.toJSON() : data;\n\n                if (_pipes.get(this).tO) {\n                    _cache.get(this).splice(0, 0, () => _pipes.get(this).cb(data));\n                    return;\n                }\n\n                if (_pipes.get(this).ivl !== 0) {\n                    if ((++_pipes.get(this).ivlVal) !== _pipes.get(this).ivl) {\n                        return;\n                    } else {\n                        _pipes.get(this).ivlVal = 0;\n                    }\n                }\n\n                // capture output of callback\n                const _t = _pipes.get(this).cb(data);\n\n                if ((typeof _t) === \"object\" && !_pipes.get(this).out.isFrozen) {\n                    if (_pipes.get(this).once) {\n                        _pipes.get(this).once = false;\n                        this.close();\n                    }\n                    _pipes.get(this).out.model = _t.toJSON ? _t.toJSON() : _t;\n                }\n            },\n            complete: this.close,\n        });\n\n        const _s = pipesOrSchemas.map((_) => _.schema || _).pop();\n\n        // enforces 2 callback minimum for `reduce`\n        const _callbacks = _fillCallback(\n            pipesOrSchemas.map(\n                (_p) => _p.exec ? _p.exec : (_p.callback || ((d) => d))\n            ),\n        );\n\n        _pipes.set(this, {\n            vo: vo,\n            ivl: 0,\n            ivlVal: 0,\n            rate: 1,\n            schema: _s,\n            out: new RxVO({\n                schemas: Array.isArray(_s) ? _s : [_s],\n            }),\n            once: false,\n            listener: [_sub],\n            links: new WeakMap(),\n            // initializes callback handler\n            cb: (_res) => {\n                _callbacks.forEach((_cb) => {\n                    _res = _cb(_res);\n                });\n                return _res;\n            },\n        });\n    }\n\n    /**\n     * Creates new `pipe` segment\n     * @param pipesOrSchemas\n     * @returns {Pipe}\n     */\n    pipe(...pipesOrSchemas) {\n        if (Array.isArray(pipesOrSchemas[0])) {\n            pipesOrSchemas = pipesOrSchemas[0];\n        }\n\n        // fixes scoping issue for inlining callbacks from external pipes\n        pipesOrSchemas = pipesOrSchemas.map((pS) => {\n            if (pS instanceof Pipe) {\n                return {\n                    schema: pS.schema,\n                    exec: (d)=> pS.exec.apply(pS, [d]),\n                };\n            }\n            return pS;\n        });\n\n        return new Pipe(_pipes.get(this).out, pipesOrSchemas);\n    }\n\n    /**\n     * links pipe segment to direct output to target pipe\n     * @param target\n     * @param callbacks function[]\n     * @returns {Pipe}\n     */\n    link(target, ...callbacks) {\n        if (!(target instanceof Pipe)) {\n            throw `item for \"target\" was not a Pipe`;\n        }\n\n        // allow for array literal in place of inline assignment\n        if (Array.isArray(callbacks[0])) {\n            callbacks = callbacks[0];\n        }\n\n        callbacks = _fillCallback(callbacks);\n\n        // creates observer and stores it to links map for `pipe`\n        const _sub = this.subscribe({\n            next: (data) => {\n                let _res = data.toJSON();\n                // applies all callbacks and writes to target `pipe`\n                target.write(callbacks.reduce((_cb) => _res = _cb(_res)));\n            },\n            // handles unlink & cleanup on complete\n            complete: () => this.unlink(target)\n        });\n\n        _pipes.get(this).links.set(target, _sub);\n        return this;\n    }\n\n    /**\n     * Returns validation errors\n     * @returns {*}\n     */\n    get errors() {\n        return _pipes.get(this).vo.errors;\n    }\n\n    /**\n     * Returns JSON-SCHEMA for `pipe` output\n     * @returns {object}\n     */\n    get schema() {\n        return Object.assign({}, _pipes.get(this).schema);\n    }\n\n    /**\n     * Creates array of new `pipe` segments that run in parallel\n     * @param mappings\n     * @returns {*}\n     */\n    split(mappings) {\n        return mappings.map((o) => this.pipe([o]));\n    }\n\n    /**\n     * Merges multiple pipes into single output\n     * @param pipeOrPipes\n     * @param schema\n     * @returns {Pipe}\n     */\n    merge(pipeOrPipes, schema) {\n        const _out = this.pipe(schema);\n        (Array.isArray(pipeOrPipes) ? pipeOrPipes : [pipeOrPipes])\n            .forEach((_p) => {\n                _pipes.get(this).listener.push(\n                    _p.subscribe({\n                        next: (d) => {\n                            _out.write(d.toJSON ? d.toJSON() : d)\n                        }\n                    })\n                );\n            });\n\n        return _out;\n    }\n\n    /**\n     * Writes data to pipe segment\n     * @param data\n     * @returns {Pipe}\n     */\n    write(data) {\n        _pipes.get(this).vo.model = data;\n        return this;\n    }\n\n    /**\n     * Directly executes callback without effecting `pipe` observable\n     * @param data\n     */\n    exec(data) {\n        return _pipes.get(this).cb(data);\n    }\n\n    /**\n     * Creates clone of current `pipe` segment\n     * @returns {Pipe}\n     */\n    clone() {\n        const {vo, schema, cb} = _pipes.get(this);\n        return new Pipe(vo, {schema: schema, callback: cb});\n    }\n\n    /**\n     * Unlink pipe segment from target pipe\n     * @param target\n     * @returns {Pipe}\n     */\n    unlink(target) {\n        if (!(target instanceof Pipe)) {\n            throw `item for \"target\" was not a Pipe`;\n        }\n\n        const _sub = _pipes.get(this).links.get(target);\n        if (_sub) {\n            _sub.unsubscribe();\n            _pipes.get(this).links.delete(target);\n        }\n        return this;\n    }\n\n    /**\n     * Terminates input on `pipe` segment. This is irrevocable\n     * @returns {Pipe}\n     */\n    close() {\n        // unsubscribe all observers\n        _pipes.get(this).listener.forEach((_l) => _l.unsubscribe());\n        setTimeout(() => {\n            _pipes.get(this).out.freeze();\n        }, 1);\n\n        return this;\n    }\n\n    /**\n     * Returns write status of `pipe`\n     * @returns {boolean}\n     */\n    get isWritable() {\n        return _pipes.get(this).out.isFrozen;\n    }\n\n    /**\n     * Informs `pipe` to close after first notification\n     * @returns {Pipe}\n     */\n    once() {\n        _pipes.get(this).once = true;\n        return this;\n    }\n\n    /**\n     * Informs `pipe` to rate limit notifications based on time interval\n     * @param rate\n     * @returns {Pipe}\n     */\n    throttle(rate) {\n        const _intvl = _pipes.get(this).tO;\n\n        if (_intvl) {\n            _intvl.clearInterval();\n        }\n\n        _pipes.get(this).tO = setInterval(() => {\n            if (_cache.get(this).length) {\n                const _func = _cache.get(this).pop();\n                if ((typeof _func) === \"function\") {\n                    _pipes.get(this).out.model = _func();\n                }\n            }\n        }, rate);\n\n        return this;\n    }\n\n    /**\n     * Returns product of Nth occurrence of `pipe` execution\n     * @param nth\n     * @returns {Pipe}\n     */\n    sample(nth) {\n        _pipes.get(this).ivl = nth;\n        return this;\n    }\n\n    /**\n     * Subscribes to `pipe` output notifications\n     * @param handler\n     * @returns {Observable}\n     */\n    subscribe(handler) {\n        if (!(typeof handler).match(/^(function|object)$/)) {\n            throw \"handler required for Pipe::subscribe\";\n        }\n\n        return _pipes.get(this).out.subscribe(handler);\n    }\n\n    /**\n     * Provides current state of `pipe` output. alias for toJSON\n     * @returns {Object|Array}\n     */\n    tap() {\n        return this.toJSON();\n    }\n\n    /**\n     * Overrides Object's toString method\n     * @override\n     * @returns {String}\n     */\n    toString() {\n        return JSON.stringify(this.toJSON());\n    }\n\n    /**\n     * Provides current state of `pipe` output.\n     * @override\n     * @returns {Object|Array}\n     */\n    toJSON() {\n        return _pipes.get(this).out.model.$model.toJSON();\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/pipe.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 167,
    "kind": "variable",
    "name": "_pipes",
    "memberof": "src/classes/pipe.js",
    "static": true,
    "longname": "src/classes/pipe.js~_pipes",
    "access": "private",
    "export": false,
    "importPath": "rxvo/src/classes/pipe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 168,
    "kind": "variable",
    "name": "_cache",
    "memberof": "src/classes/pipe.js",
    "static": true,
    "longname": "src/classes/pipe.js~_cache",
    "access": "private",
    "export": false,
    "importPath": "rxvo/src/classes/pipe.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 169,
    "kind": "function",
    "name": "_fillCallback",
    "memberof": "src/classes/pipe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/pipe.js~_fillCallback",
    "access": "private",
    "export": false,
    "importPath": "rxvo/src/classes/pipe.js",
    "importStyle": null,
    "description": "Fills callbacks array to enforce 2 callback minimum",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "callbacks",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 170,
    "kind": "class",
    "name": "Pipe",
    "memberof": "src/classes/pipe.js",
    "static": true,
    "longname": "src/classes/pipe.js~Pipe",
    "access": "public",
    "export": true,
    "importPath": "rxvo/src/classes/pipe.js",
    "importStyle": "{Pipe}",
    "description": "Pipe Class",
    "lineNumber": 48,
    "interface": false
  },
  {
    "__docId__": 171,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/pipe.js~Pipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/pipe.js~Pipe#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "pipe",
    "memberof": "src/classes/pipe.js~Pipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/pipe.js~Pipe#pipe",
    "access": "public",
    "description": "Creates new `pipe` segment",
    "lineNumber": 127,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Pipe}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pipesOrSchemas",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Pipe"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 173,
    "kind": "method",
    "name": "link",
    "memberof": "src/classes/pipe.js~Pipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/pipe.js~Pipe#link",
    "access": "public",
    "description": "links pipe segment to direct output to target pipe",
    "lineNumber": 152,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Pipe}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "callbacks",
        "description": "function[]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Pipe"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 174,
    "kind": "get",
    "name": "errors",
    "memberof": "src/classes/pipe.js~Pipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/pipe.js~Pipe#errors",
    "access": "public",
    "description": "Returns validation errors",
    "lineNumber": 183,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "get",
    "name": "schema",
    "memberof": "src/classes/pipe.js~Pipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/pipe.js~Pipe#schema",
    "access": "public",
    "description": "Returns JSON-SCHEMA for `pipe` output",
    "lineNumber": 191,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "split",
    "memberof": "src/classes/pipe.js~Pipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/pipe.js~Pipe#split",
    "access": "public",
    "description": "Creates array of new `pipe` segments that run in parallel",
    "lineNumber": 200,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "mappings",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "merge",
    "memberof": "src/classes/pipe.js~Pipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/pipe.js~Pipe#merge",
    "access": "public",
    "description": "Merges multiple pipes into single output",
    "lineNumber": 210,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Pipe}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pipeOrPipes",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "schema",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Pipe"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "write",
    "memberof": "src/classes/pipe.js~Pipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/pipe.js~Pipe#write",
    "access": "public",
    "description": "Writes data to pipe segment",
    "lineNumber": 231,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Pipe}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Pipe"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 179,
    "kind": "method",
    "name": "exec",
    "memberof": "src/classes/pipe.js~Pipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/pipe.js~Pipe#exec",
    "access": "public",
    "description": "Directly executes callback without effecting `pipe` observable",
    "lineNumber": 240,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "clone",
    "memberof": "src/classes/pipe.js~Pipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/pipe.js~Pipe#clone",
    "access": "public",
    "description": "Creates clone of current `pipe` segment",
    "lineNumber": 248,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Pipe}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Pipe"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 181,
    "kind": "method",
    "name": "unlink",
    "memberof": "src/classes/pipe.js~Pipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/pipe.js~Pipe#unlink",
    "access": "public",
    "description": "Unlink pipe segment from target pipe",
    "lineNumber": 258,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Pipe}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Pipe"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "close",
    "memberof": "src/classes/pipe.js~Pipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/pipe.js~Pipe#close",
    "access": "public",
    "description": "Terminates input on `pipe` segment. This is irrevocable",
    "lineNumber": 275,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Pipe}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Pipe"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 183,
    "kind": "get",
    "name": "isWritable",
    "memberof": "src/classes/pipe.js~Pipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/pipe.js~Pipe#isWritable",
    "access": "public",
    "description": "Returns write status of `pipe`",
    "lineNumber": 289,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 184,
    "kind": "method",
    "name": "once",
    "memberof": "src/classes/pipe.js~Pipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/pipe.js~Pipe#once",
    "access": "public",
    "description": "Informs `pipe` to close after first notification",
    "lineNumber": 297,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Pipe}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Pipe"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 185,
    "kind": "method",
    "name": "throttle",
    "memberof": "src/classes/pipe.js~Pipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/pipe.js~Pipe#throttle",
    "access": "public",
    "description": "Informs `pipe` to rate limit notifications based on time interval",
    "lineNumber": 307,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Pipe}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "rate",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Pipe"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 186,
    "kind": "method",
    "name": "sample",
    "memberof": "src/classes/pipe.js~Pipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/pipe.js~Pipe#sample",
    "access": "public",
    "description": "Returns product of Nth occurrence of `pipe` execution",
    "lineNumber": 331,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Pipe}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "nth",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Pipe"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 187,
    "kind": "method",
    "name": "subscribe",
    "memberof": "src/classes/pipe.js~Pipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/pipe.js~Pipe#subscribe",
    "access": "public",
    "description": "Subscribes to `pipe` output notifications",
    "lineNumber": 341,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Observable}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Observable"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 188,
    "kind": "method",
    "name": "tap",
    "memberof": "src/classes/pipe.js~Pipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/pipe.js~Pipe#tap",
    "access": "public",
    "description": "Provides current state of `pipe` output. alias for toJSON",
    "lineNumber": 353,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object|Array}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 189,
    "kind": "method",
    "name": "toString",
    "memberof": "src/classes/pipe.js~Pipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/pipe.js~Pipe#toString",
    "access": "public",
    "description": "Overrides Object's toString method",
    "lineNumber": 362,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": ""
    },
    "override": true,
    "params": []
  },
  {
    "__docId__": 190,
    "kind": "method",
    "name": "toJSON",
    "memberof": "src/classes/pipe.js~Pipe",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/pipe.js~Pipe#toJSON",
    "access": "public",
    "description": "Provides current state of `pipe` output.",
    "lineNumber": 371,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object|Array}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "override": true,
    "params": []
  },
  {
    "__docId__": 191,
    "kind": "file",
    "name": "src/classes/pipe.test.js",
    "content": "import {RxVO} from \"./rxvo\";\nimport {Pipe} from \"./pipe\";\nimport {basicCollection} from \"../../fixtures/PropertiesModel.schemas\";\nimport {default as data} from \"../../fixtures/pipes-test.data\";\nimport {pipe} from \"rxjs\";\n\njest.useFakeTimers();\n\ndescribe(\"Pipes tests\", () => {\n    let _p;\n    let _vo;\n\n    beforeEach(() => {\n        _vo = new RxVO({schemas: [basicCollection]});\n        _p = new Pipe(_vo, [{\n            schema: basicCollection,\n            callback: (d) => d.filter((itm) => itm.active),\n        }]);\n    });\n\n    it(\"should provide a schema\", () => {\n        expect(JSON.stringify(_p.schema)).toEqual(JSON.stringify(basicCollection));\n    });\n\n    it(\"should intake and output data\", (done) => {\n        const _sub = _p.subscribe({\n            next: (d) => {\n                _sub.unsubscribe();\n                expect(`${d}`).toEqual(JSON.stringify(_p.tap()));\n                expect(`${d}`).toEqual(JSON.stringify(_p.toJSON()));\n                expect(`${d}`).toEqual(_p.toString());\n                done();\n            },\n            error: (e) => {\n                _sub.unsubscribe();\n                done(e);\n            },\n        });\n\n        _p.write(data);\n    });\n\n    it(\"should transform data with callback\", (done) => {\n        const _sub = _p.subscribe({\n            next: (d) => {\n                _sub.unsubscribe();\n                expect(d.model.length).toEqual(3);\n                expect(_p.tap().length).toEqual(3);\n                done();\n            },\n            error: (e) => {\n                _sub.unsubscribe();\n                done(e);\n            }\n        });\n\n        _p.write(data);\n    });\n\n    it(\"should split pipe\", () => {\n        const _config = [\n            {\n                schema: _vo.schema,\n                callback: (d) => d.map((m) => Object.assign(m, {name: `${m.name} RENAMED`})),\n            },\n            {\n                schema: _vo.schema,\n                callback: (d) => d.map((m) => Object.assign(m, {age: 99})),\n            },\n        ];\n\n        const _cb = jest.fn();\n\n        const _split = _p.split(_config);\n        _split.forEach((pipe) => {\n            pipe.subscribe(_cb);\n        });\n\n        _p.write(data);\n\n        jest.advanceTimersByTime(100);\n        expect(_cb).toHaveBeenCalledTimes(2);\n        expect(_split[0].tap()[0].name.match(/.*\\sRENAMED+$/)).toBeTruthy();\n        expect(_split[1].tap()[0].age).toEqual(99);\n    });\n\n    it(\"should exec multiple pipes inline\", () => {\n        const _p1 = new Pipe(\n            new RxVO({schemas: [_vo.schema]}),\n            [{\n                schema: Object.assign({}, _vo.schema),\n                callback: (d) => d.map((m) => Object.assign(m, {name: `${m.name} RENAMED`})),\n            }]);\n\n        const _p2 = new Pipe(\n            new RxVO({schemas: [_vo.schema]}),\n            [{\n                schema: Object.assign({}, _vo.schema),\n                callback: (d) => d.map((m) => Object.assign(m, {age: 99})),\n            }]);\n\n        const _inline = _p.pipe(_p1, _p2);\n\n        _inline.write(data);\n\n        console.log(_inline.tap());\n        expect(JSON.stringify(_inline.schema)).toEqual(JSON.stringify(_vo.schema));\n        expect(_inline.tap().length).toEqual(data.length);\n        expect(_inline.tap()[0].name.match(/.*\\sRENAMED+$/)).toBeTruthy();\n        expect(_inline.tap()[0].age).toEqual(99);\n        expect(_inline.tap()[data.length - 1].name.match(/.*\\sRENAMED+$/)).toBeTruthy();\n        expect(_inline.tap()[data.length - 1].age).toEqual(99);\n\n    });\n\n    it(\"should merge multiple pipes into a single output\", () => {\n        const _p1 = new Pipe(\n            new RxVO({schemas: [_vo.schema]}), {\n                schema: _vo.schema,\n                callback: (d) => d.map((m) => Object.assign(m, {name: `${m.name} RENAMED`})),\n            });\n\n        const _p2 = new Pipe(\n            new RxVO({schemas: [_vo.schema]}), {\n                schema: _vo.schema,\n                callback: (d) => d.map((m) => Object.assign(m, {age: 99}))\n            }\n        );\n\n        const _merged = _p.merge([_p1, _p2], _vo.schema, (d) => {\n            return d.map((m) => Object.assign(m, {active: false}));\n        });\n\n        const _cb = jest.fn();\n        _merged.subscribe(_cb);\n\n        _p1.write(data);\n\n        jest.advanceTimersByTime(100);\n        expect(_cb).toHaveBeenCalledTimes(1);\n\n        expect(_merged.tap()[0].name.match(/.*\\sRENAMED+$/)).toBeTruthy();\n        expect(_merged.tap()[data.length - 1].name.match(/.*\\sRENAMED+$/)).toBeTruthy();\n\n        _p2.write(data);\n\n        jest.advanceTimersByTime(100);\n        expect(_cb).toHaveBeenCalledTimes(2);\n\n        expect(_merged.tap().length).toEqual(data.length);\n        expect(_merged.tap()[0].age).toEqual(99);\n        expect(_merged.tap()[data.length - 1].age).toEqual(99);\n    });\n\n    it(\"should close\", () => {\n        const _sub = _p.subscribe({\n            next: () => {\n                // will close on first invocation\n                _p.close();\n            },\n        });\n\n        data.forEach((d) => {\n            _vo.model.push(d);\n        });\n\n        expect(_p.tap().length).toEqual(1);\n        expect(_p.isWritable).toBe(false);\n    });\n\n    it(\"should exec and not modify contents\", () => {\n        expect(_p.exec(data).length).toEqual(3);\n        expect(_p.tap().length).toEqual(0);\n    });\n\n\n    it(\"should limit occurrences of callback to single instance\", () => {\n        const _cb = jest.fn();\n        let _cnt = 0;\n        const _sub = _p.once().subscribe({\n            next: (d) => {\n                _cnt++;\n                _cb();\n\n                if (_cnt === 1) {\n                    _vo.model = data;\n                }\n\n                expect(d.model.length).toEqual(3);\n            },\n            error: (e) => {\n                _sub.unsubscribe();\n                done(e);\n            }\n        });\n\n        _vo.model = data;\n\n        jest.advanceTimersByTime(100);\n        expect(_cb).toHaveBeenCalledTimes(1);\n    });\n\n    it(\"should throttle notifications based on time interval\", () => {\n        let _cnt = 0;\n        const _sub = _p.throttle(150).subscribe({\n            next: (d) => {\n                if ((++_cnt) <= 3) {\n                    _vo.model.push({\n                        name: `New Item ${_cnt}`,\n                        active: true,\n                        age: _cnt,\n                    });\n                }\n            },\n        });\n\n        _vo.model = data;\n\n        jest.advanceTimersByTime(200);\n        expect(_cnt).toEqual(1);\n        jest.advanceTimersByTime(200);\n        expect(_cnt).toEqual(2);\n        jest.advanceTimersByTime(200);\n        expect(_cnt).toEqual(4);\n        console.log(_p.tap());\n        expect(_p.tap().length).toEqual(6);\n        _sub.unsubscribe();\n    });\n\n    it(\"should sample pipe data\", () => {\n        let _cnt = 0;\n        _p.sample(3).subscribe({\n            next: () => {\n                _cnt++;\n            },\n            error: console.log,\n        });\n\n        _p.write(data);\n        _p.write(data);\n        _p.write(data);\n        jest.advanceTimersByTime(200);\n        expect(_cnt).toEqual(1);\n    });\n\n    it(\"should clone existing `pipe`\", () => {\n        let _cnt = 0;\n\n        const _h = () => _cnt++;\n\n        _p.subscribe(_h);\n        _p.clone().subscribe(_h);\n\n        _vo.model = data;\n\n        jest.advanceTimersByTime(200);\n        expect(_cnt).toEqual(2);\n    });\n\n    it(\"should link and unlink pipes\", () => {\n        const _cb = jest.fn();\n        const _rxvo = new RxVO({schemas: [basicCollection]});\n        const _link = new Pipe(_rxvo, basicCollection);\n\n        _p.link(_link, [(d) => {\n            (() => _cb())();\n            return d;\n        }]);\n\n        jest.advanceTimersByTime(100);\n\n        _vo.model = data;\n\n        expect(_cb).toHaveBeenCalledTimes(1);\n\n\n        jest.advanceTimersByTime(100);\n\n        // we capture state for comparison\n        const _state = `${_p}`;\n\n        expect(`${_link}`).toEqual(`${_state}`);\n        expect(`${_link}` === `${_p}`).toBe(true);\n\n        _p.unlink(_link);\n\n        // this will add an item to _p but not to _link\n        _vo.model.push({\n            name: \"Added Item\",\n            active: true,\n            age: 100,\n        });\n\n        // we expect to discover no further executions and the state to be unchanged\n        expect(_cb).toHaveBeenCalledTimes(1);\n        expect(`${_link}`).toEqual(`${_state}`);\n        expect(`${_link}` === `${_p}`).toBe(false);\n    });\n});\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/pipe.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 192,
    "kind": "file",
    "name": "src/classes/propertiesModel.js",
    "content": "/* ############################################################################\nThe MIT License (MIT)\n\nCopyright (c) 2016 - 2019 Van Schroeder\nCopyright (c) 2017-2019 Webfreshener, LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n############################################################################ */\nimport {\n    _object, _schemaHelpers,\n} from \"./_references\";\nimport {\n    makeClean, makeDirty,\n    refAtKeyValidation, refValidation,\n} from \"./utils\";\nimport {SchemaHelpers} from \"./_schemaHelpers\";\nimport {Model} from \"./model\";\nimport Notifiers from \"./_branchNotifier\";\n\n/**\n * @class PropertiesModel\n */\nexport class PropertiesModel extends Model {\n    /**\n     *\n     */\n    constructor() {\n        super(arguments[0]);\n\n        // stores SchemaHelpers reference for use\n        _schemaHelpers.set(this, new SchemaHelpers(this));\n\n        // sets Proxy Model reference on map\n        _object.set(this, new Proxy(Model.createRef(this, {}), this.handler));\n    }\n\n    /**\n     * Handler for Object Proxy Evaluation\n     * @returns {{get: function, set: function}}\n     */\n    get handler() {\n        return Object.assign(super.handler, {\n            get: (t, key) => {\n                return key === \"$model\" ? this : t[key];\n            },\n            set: (t, key, value) => {\n                return setHandler(this, t, key, value);\n            },\n            deleteProperty: (t, key) => {\n                return deleteHandler(this, t, key);\n            }\n        });\n    }\n\n    /**\n     * getter for object model\n     */\n    get model() {\n        return _object.get(this);\n    }\n\n    /**\n     * setter for object model\n     * @param value\n     */\n    set model(value) {\n        // fails on attempts to set scalar value\n        // or if this node is locked or fails validation\n        if ((typeof value) !== \"object\" || this.isFrozen) {\n            return false;\n        }\n\n        if (refValidation(this, value) !== true) {\n            Notifiers.get(this.rxvo).sendError(this.jsonPath, this.rxvo.errors);\n            return false;\n        }\n\n        if (!this.isDirty) {\n            // marks model as dirty to prevent cascading validation calls\n            makeDirty(this);\n        }\n\n        // defines new Proxy Object for data modeling\n        // todo: replace proxy with Object Delegation\n        _object.set(this,\n            new Proxy(Model.createRef(this, {}), this.handler));\n        Object.keys(value).forEach((k) => {\n            // -- added try/catch to avoid error in JSFiddle\n            try {\n                this.model[k] = value[k];\n            } catch (e) {\n                // marks model as clean\n                makeClean(this);\n\n                // sends notifications\n                Notifiers.get(this.rxvo).sendError(this.jsonPath, e.message);\n                return false;\n            }\n        });\n\n        // marks model as in sync with tree\n        makeClean(this);\n\n        // // calls next's observable to update subscribers\n        if (!this.isDirty) {\n            Notifiers.get(this.rxvo).sendNext(this.jsonPath);\n        }\n\n        return true;\n    }\n\n    /**\n     * @param {string} key\n     * @returns {any}\n     */\n    get(key) {\n        return this.model[key];\n    }\n\n    /**\n     * sets value to schema key\n     * @param {string|object} key\n     * @param {any} value\n     */\n    set(key, value) {\n        // attempts validation of value against schema\n        if (!refAtKeyValidation(this, key, value)) {\n            return false;\n        }\n\n        if (!this.isDirty) {\n            // marks model as dirty to prevent cascading validation calls\n            makeDirty(this);\n        }\n\n        // applies validated value to model\n        this.model[key] = value;\n\n        // updates observers\n        Notifiers.get(this.rxvo).sendNext(this.jsonPath);\n\n        // removes dirtiness\n        makeClean(this);\n\n        return this;\n    }\n}\n\n/**\n * Negotiates Key values that are Objects\n * @param model\n * @param key\n * @returns {boolean}\n */\nconst handleObjectKey = (model, key) => {\n    const _sH = _schemaHelpers.get(model);\n    const e = _sH.setObject(key);\n    if (typeof e === \"string\") {\n        makeClean(model);\n        Notifiers.get(model.rxvo).sendError(model.jsonPath, e);\n        return false;\n    }\n\n    return true;\n};\n\n/**\n * Creates Model Child to set up Proxy Object\n * @param model\n * @param key\n * @param value\n * @returns {*}\n */\nconst createModelChild = (model, key, value) => {\n    const _sH = _schemaHelpers.get(model);\n    // calls validate with either full path if in PropertiesModel or key if nested in ItemsModel\n    value = _sH.setChildObject(key, value);\n    if ((typeof value) === \"string\") {\n        // marks model as clean\n        makeClean(model);\n        // sends notifications\n        Notifiers.get(model.rxvo).sendError(model.jsonPath, value);\n        return false;\n    }\n    return value;\n};\n\n/**\n * Parameter Set trap for Proxy\n * @param model\n * @param t\n * @param key\n * @param value\n * @returns {boolean}\n */\nconst setHandler = (model, t, key, value) => {\n    if (key in Object.prototype) {\n        // do nothing against proto props\n        return true;\n    }\n\n    // -- ensures we aren't in a frozen hierarchy branch\n    if (model.isFrozen) {\n        return false;\n    }\n\n    // checks for branch update status\n    if (!model.isDirty) {\n        let _o = Object.assign({}, t);\n        _o[key] = value;\n        // attempts validation of value update\n        if (refValidation(model, _o) !== true) {\n            makeClean(model);\n            Notifiers.get(model.rxvo).sendError(model.jsonPath, model.rxvo.errors);\n            return false;\n        }\n    }\n\n    // if key is type 'object', we will set directly\n    if (typeof key === \"object\") {\n        return handleObjectKey(model, key);\n    }\n\n    if ((typeof value) === \"object\") {\n        if ((value = createModelChild(model, key, value)) === false) {\n            return false\n        }\n    }\n\n    // performs the operation on Model\n    t[key] = value;\n    return true;\n};\n\n\n/**\n * Parameter Delete trap for Proxy\n * @param model\n * @param t\n * @param key\n * @returns {boolean}\n */\nconst deleteHandler = (model, t, key) => {\n    // creates mock of future model state for evaluation\n    let _o = Object.assign({}, model.model);\n    delete _o[key];\n    const _res = model.validate(_o);\n\n    // validates model with value removed\n    if (_res !== true) {\n        Notifiers.get(model.rxvo).sendError(model.jsonPath, _res);\n        return false;\n    }\n\n    // performs delete operation on model\n    delete t[key];\n    return true;\n};\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/propertiesModel.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 193,
    "kind": "class",
    "name": "PropertiesModel",
    "memberof": "src/classes/propertiesModel.js",
    "static": true,
    "longname": "src/classes/propertiesModel.js~PropertiesModel",
    "access": "public",
    "export": true,
    "importPath": "rxvo/src/classes/propertiesModel.js",
    "importStyle": "{PropertiesModel}",
    "description": "",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "PropertiesModel"
      }
    ],
    "interface": false,
    "extends": [
      "src/classes/model.js~Model"
    ]
  },
  {
    "__docId__": 194,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/propertiesModel.js~PropertiesModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/propertiesModel.js~PropertiesModel#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 44
  },
  {
    "__docId__": 195,
    "kind": "get",
    "name": "handler",
    "memberof": "src/classes/propertiesModel.js~PropertiesModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/propertiesModel.js~PropertiesModel#handler",
    "access": "public",
    "description": "Handler for Object Proxy Evaluation",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{get: function, set: function}}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{get: function, set: function}"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 196,
    "kind": "get",
    "name": "model",
    "memberof": "src/classes/propertiesModel.js~PropertiesModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/propertiesModel.js~PropertiesModel#model",
    "access": "public",
    "description": "getter for object model",
    "lineNumber": 75,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 197,
    "kind": "set",
    "name": "model",
    "memberof": "src/classes/propertiesModel.js~PropertiesModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/propertiesModel.js~PropertiesModel#model",
    "access": "public",
    "description": "setter for object model",
    "lineNumber": 83,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 198,
    "kind": "method",
    "name": "get",
    "memberof": "src/classes/propertiesModel.js~PropertiesModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/propertiesModel.js~PropertiesModel#get",
    "access": "public",
    "description": "",
    "lineNumber": 133,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 199,
    "kind": "method",
    "name": "set",
    "memberof": "src/classes/propertiesModel.js~PropertiesModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/propertiesModel.js~PropertiesModel#set",
    "access": "public",
    "description": "sets value to schema key",
    "lineNumber": 142,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 200,
    "kind": "function",
    "name": "handleObjectKey",
    "memberof": "src/classes/propertiesModel.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/propertiesModel.js~handleObjectKey",
    "access": "public",
    "export": false,
    "importPath": "rxvo/src/classes/propertiesModel.js",
    "importStyle": null,
    "description": "Negotiates Key values that are Objects",
    "lineNumber": 172,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 201,
    "kind": "function",
    "name": "createModelChild",
    "memberof": "src/classes/propertiesModel.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/propertiesModel.js~createModelChild",
    "access": "public",
    "export": false,
    "importPath": "rxvo/src/classes/propertiesModel.js",
    "importStyle": null,
    "description": "Creates Model Child to set up Proxy Object",
    "lineNumber": 191,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 202,
    "kind": "function",
    "name": "setHandler",
    "memberof": "src/classes/propertiesModel.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/propertiesModel.js~setHandler",
    "access": "public",
    "export": false,
    "importPath": "rxvo/src/classes/propertiesModel.js",
    "importStyle": null,
    "description": "Parameter Set trap for Proxy",
    "lineNumber": 213,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 203,
    "kind": "function",
    "name": "deleteHandler",
    "memberof": "src/classes/propertiesModel.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/propertiesModel.js~deleteHandler",
    "access": "public",
    "export": false,
    "importPath": "rxvo/src/classes/propertiesModel.js",
    "importStyle": null,
    "description": "Parameter Delete trap for Proxy",
    "lineNumber": 260,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 204,
    "kind": "file",
    "name": "src/classes/propertiesModel.test.js",
    "content": "import {PropertiesModel} from \"./propertiesModel\";\nimport {RxVO} from \"./rxvo\";\nimport {default as deepEqual} from \"deep-equal\";\nimport {\n    basicModel, nestedModel, nestedModelDefault, nestedPatternModel, patternModel\n} from \"../../fixtures/PropertiesModel.schemas\";\n\ndescribe(\"PropertiesModel Class Suite\", function () {\n\n    describe(\"Simple PropertiesModel Tests\", () => {\n        beforeEach(() => {\n            this.rxvo = new RxVO({schemas: [basicModel]});\n        });\n\n        describe(\"LifeCycle: Instantiation\", () => {\n            it(\"should initialize a schema and a schema object\", () => {\n                expect(this.rxvo.model.$model).toBeDefined();\n                expect(this.rxvo.model.$model instanceof PropertiesModel).toBe(true);\n                expect(this.rxvo.model.$model).toBeDefined();\n                expect(this.rxvo.model.$model instanceof PropertiesModel).toBe(true);\n            });\n\n            it(\"should not initialize a invalid schema and schema object\", () => {\n                let badSchema = Object.assign({}, basicModel, {\n                    properties: {\n                        \"bad thing\": {\n                            type: \"INVALID\",\n                        },\n                    },\n                });\n                expect(() => new RxVO({schemas: [badSchema]})).toThrow();\n            });\n        });\n\n        describe(\"LifeCycle: Creation\", () => {\n\n            let _d;\n\n            it(\"should populate with valid data and make that data accessible\", () => {\n                _d = {\n                    name: \"Ed Testy\",\n                    age: 99,\n                    active: true,\n                };\n\n                this.rxvo.model = _d;\n                expect(deepEqual(this.rxvo.model, _d)).toBe(true);\n            });\n\n            it(\"should reject invalid data and leave model pristine\", () => {\n                _d = {\n                    name: \"Ed Testy\",\n                    age: 99,\n                    active: \"123\",\n                };\n\n                this.rxvo.model = _d;\n                expect(deepEqual(this.rxvo.model, {})).toBe(true);\n            });\n        });\n\n        describe(\"LifeCycle: Update\", () => {\n            const _d = {\n                name: \"Ed Testy\",\n                age: 99,\n                active: true,\n            };\n\n            beforeEach(() => {\n                this.rxvo.model = _d;\n            });\n\n            it(\"should update with valid data\", () => {\n                this.rxvo.model.active = false;\n                expect(deepEqual(this.rxvo.model, _d)).toBe(false);\n            });\n\n            it(\"should reject invalid data update\", () => {\n                this.rxvo.model.active = \"false\";\n                expect(deepEqual(this.rxvo.model, _d)).toBe(true);\n            });\n        });\n    });\n\n    describe(\"Nested PropertiesModel Tests\", () => {\n        let _rxvo;\n        beforeEach(() => {\n            _rxvo = new RxVO({schemas: [nestedModel]});\n        });\n\n        describe(\"LifeCycle: Instantiation\", () => {\n            it(\"should initialize a valid schema and a schema object\", () => {\n                expect(_rxvo.model.$model).toBeDefined();\n                expect(_rxvo.model.$model instanceof PropertiesModel).toBe(true);\n                expect(_rxvo.model.$model).toBeDefined();\n                expect(_rxvo.model.$model instanceof PropertiesModel).toBe(true);\n            });\n        });\n\n        describe(\"LifeCycle: Create\", () => {\n\n            let _d;\n\n            it(\"should populate with valid data and make that data accessible\", () => {\n                _d = {\n                    aObject: {\n                        bObject: {\n                            bValue: 1234,\n                        },\n                    },\n                };\n\n                _rxvo.model = _d;\n                expect(deepEqual(_rxvo.model, _d)).toBe(true);\n                expect(_rxvo.model.aObject.bObject.$model).toBeDefined();\n                expect(_rxvo.model.aObject.bObject.$model instanceof PropertiesModel).toBe(true)\n            });\n\n            it(\"should reject invalid data and leave model pristine\", () => {\n                _d = {\n                    aObject: {\n                        bObject: {\n                            bValue: \"1234\",\n                        },\n                    },\n                };\n\n                _rxvo.model = _d;\n                expect(deepEqual(_rxvo.model, {})).toBe(true);\n            });\n        });\n\n        describe(\"LifeCycle: Update\", () => {\n\n            let _d;\n\n            it(\"should updated nested property models with valid data and pass validation\", () => {\n                _d = {\n                    aObject: {\n                        bObject: {\n                            bValue: 1234,\n                        },\n                    },\n                };\n\n                _rxvo.model = _d;\n\n                _d = {\n                    bValue: 4321,\n                };\n\n                _rxvo.model.aObject.bObject = _d;\n                expect(_rxvo.errors).toBe(null);\n                expect(deepEqual(_rxvo.model.aObject.bObject, _d)).toBe(true);\n            });\n        });\n\n        describe(\"LifeCycle: Delete\", () => {\n\n            let _d = {\n                aObject: {\n                    bObject: {\n                        bValue: 1234,\n                    },\n                },\n                extraObject: {\n                    someValue: \"test\",\n                },\n            };\n\n            it(\"should allow deletion of nested properties that are not required\", () => {\n                _rxvo.model = _d;\n                expect(_rxvo.model.extraObject.someValue).toBe(\"test\");\n                delete _rxvo.model.extraObject.someValue;\n                expect(_rxvo.errors).toBe(null);\n                expect(_rxvo.model.extraObject.someValue).toBe(void(0));\n            });\n\n            it(\"should prevent deletion of nested properties that are required\", () => {\n                _rxvo.model = _d;\n                expect(_rxvo.model.aObject.bObject.bValue).toBe(1234);\n                delete _rxvo.model.aObject.bObject.bValue;\n                expect(typeof _rxvo.errors).toBe(\"object\");\n                expect(_rxvo.model.aObject.bObject.bValue).toBe(1234);\n            });\n        });\n    });\n\n    describe(\"Nested Defaults PropertiesModel Tests\", () => {\n        let _rxvo;\n        beforeEach(() => {\n            _rxvo = new RxVO({schemas: [nestedModelDefault]}, {ajvOptions: {useDefaults: true}});\n        });\n\n        it(\"should populate default values\", () => {\n            const _d = {\n                aObject: {\n                    bObject: {},\n                },\n            };\n\n            _rxvo.model = _d;\n            expect(_rxvo.model.aObject.bObject.bValue).toBe(123);\n        });\n    });\n\n    describe(\"Pattern Properties\", () => {\n        let _rxvo;\n        beforeEach(() => {\n            _rxvo = new RxVO({schemas: [patternModel]}, {ajvOptions: {useDefaults: true}});\n        });\n\n        it(\"should allow pattern properties\", () => {\n            _rxvo.model[\"test\"] = \"foo\";\n            expect(`${_rxvo}`).toEqual(\"{}\");\n            _rxvo.model[\"name\"] = \"foo\";\n            expect(`${_rxvo}`).toEqual(\"{\\\"name\\\":\\\"foo\\\"}\");\n        });\n\n        it(\"should accept multiple uses of patternProperty\", () => {\n            _rxvo.model[\"name\"] = \"foo\";\n            expect(`${_rxvo}`).toEqual(\"{\\\"name\\\":\\\"foo\\\"}\");\n            _rxvo.model[\"name\"] = \"bar\";\n            expect(`${_rxvo}`).toEqual(\"{\\\"name\\\":\\\"bar\\\"}\");\n        });\n\n    });\n\n    describe(\"Nested Pattern Properties\", () => {\n        let _rxvo;\n        beforeEach(() => {\n            _rxvo = new RxVO({schemas: [nestedPatternModel]}, {ajvOptions: {useDefaults: true}});\n        });\n\n        it(\"should allow nested pattern properties\", () => {\n            _rxvo.model = {name: \"test\", nested: {test1: {foo: \"bar\"}}};\n            expect(`${_rxvo.model.nested.$model}`).toEqual(\"{\\\"test1\\\":{\\\"foo\\\":\\\"bar\\\"}}\");\n        });\n\n        it(\"should accept multiple uses of patternProperty\", () => {\n            _rxvo.model = {name: \"test\", nested: {test1: {foo1: \"bar1\"}}};\n            expect(`${_rxvo.model.nested.$model}`).toEqual(\"{\\\"test1\\\":{\\\"foo1\\\":\\\"bar1\\\"}}\");\n            _rxvo.model.nested[\"test2\"] = {foo2: \"bar2\"};\n            expect(`${_rxvo.model.nested.$model}`).toEqual(\"{\\\"test1\\\":{\\\"foo1\\\":\\\"bar1\\\"},\\\"test2\\\":{\\\"foo2\\\":\\\"bar2\\\"}}\");\n        });\n\n        it(\"should reject subsequent invalid uses of patternProperty\", () => {\n            _rxvo.model = {name: \"test\", nested: {test1: {foo1: \"bar1\"}}};\n            _rxvo.model.nested[\"test1\"] = false;\n            expect(_rxvo.errors === null).toBe(false);\n            expect(`${_rxvo.errors[0].dataPath}`).toEqual(\"/test1\");\n            expect(`${_rxvo.errors[0].message}`).toEqual(\"should be object\");\n        });\n\n    });\n});\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/propertiesModel.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 205,
    "kind": "file",
    "name": "src/classes/rxvo.js",
    "content": "/* ############################################################################\nThe MIT License (MIT)\n\nCopyright (c) 2016 - 2019 Van Schroeder\nCopyright (c) 2017-2019 Webfreshener, LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n############################################################################ */\nimport {\n    _oBuilders, _validators, _dirtyModels, _schemaSignatures\n} from \"./_references\";\nimport {ObserverBuilder} from \"./_observerBuilder\";\nimport {PropertiesModel} from \"./propertiesModel\";\nimport {ItemsModel} from \"./itemsModel\";\nimport {AjvWrapper} from \"./_ajvWrapper\";\nimport Notifiers from \"./_branchNotifier\";\nimport {walkObject} from \"./utils\";\n\nconst _documents = new WeakMap();\n/**\n * returns Items or Properties model class based on type of expected property\n * @param el\n * @returns {ItemsModel|PropertiesModel}\n * @private\n */\nconst _getModelClass = (el) => {\n    let _class = PropertiesModel;\n\n    if ((el.hasOwnProperty(\"type\") && el[\"type\"] === \"array\") ||\n        (el.hasOwnProperty(\"items\") && Array.isArray(el[\"items\"]))) {\n        _class = ItemsModel;\n    }\n\n    return _class;\n};\n\n/**\n * RxVo Model Entry-point\n * @public\n */\nexport class RxVO {\n    /**\n     * @constructor\n     * @param {json} schemas\n     * @param {object} options\n     */\n    constructor(schemas, options = {}) {\n        // attempts to get user passes Avj options\n        let ajvOptions = options.hasOwnProperty(\"ajvOptions\") ?\n            options[\"ajvOptions\"] : null;\n\n        // defines AjvWrapper instance for this Document and it's Schemas\n        const _ajv = new AjvWrapper(this, schemas, ajvOptions);\n\n        // sets AjvWrapper instance on map for use\n        _validators.set(this, _ajv);\n\n        // throws error if error message returned\n        if (!_ajv.$ajv.validateSchema({schemas: schemas[\"schemas\"]}, false)) {\n            throw _ajv.$ajv.errors;\n        }\n\n        _schemaSignatures.set(this, schemas);\n        _oBuilders.set(this, new ObserverBuilder());\n\n        let _doc;\n\n        if (schemas.hasOwnProperty(\"schemas\")) {\n            // if value of type is \"array\" or an array of items is defined,\n            // we handle as Array\n            _doc = new (_getModelClass(schemas.schemas[schemas.schemas.length - 1]))(this);\n        } else {\n            _doc = new (_getModelClass(schemas))(this);\n        }\n\n        // creates holder for dirty model flags in this scope\n        _dirtyModels.set(this, {});\n\n        // applies Subject Handlers to root document\n        _oBuilders.get(this).create(_doc);\n\n        // sets document to this scope\n        _documents.set(this, _doc);\n\n        // creates RxJS Notification Delegate\n        Notifiers.create(this);\n    }\n\n    /**\n     * Adds Schema to Validator instance\n     * @param schema\n     * @returns {boolean}\n     */\n    addSchema(schema) {\n        _validators.get(this).$ajv.addSchema(schema);\n        return (_validators.get(this).$ajv.errors === null);\n    }\n\n    /**\n     * Selects schema to validate against (advanced option, use wisely)\n     * @param id\n     */\n    useSchema(id) {\n        _validators.get(this).$ajv.getSchema(id);\n    }\n\n    /**\n     * Getter for root Model\n     * @returns {object|array}\n     */\n    get model() {\n        return _documents.get(this).model;\n    }\n\n    /**\n     * Setter for root Model value\n     * @param {object|array} value\n     */\n    set model(value) {\n        _documents.get(this).model = value;\n    }\n\n    /**\n     * Getter for document's JSON-Schema\n     * @return {any}\n     */\n    get schema() {\n        const _id = _validators.get(this).path;\n        return this.getSchemaForKey(_id);\n    }\n\n    /**\n     * Freezes document object\n     * @returns {RxVO}\n     */\n    freeze() {\n        this.model.$model.freeze();\n        return this;\n    }\n\n    /**\n     * Returns true if object is frozen\n     * @returns {boolean}\n     */\n    get isFrozen() {\n        return this.model.$model.isFrozen;\n    }\n\n    /**\n     * returns schema with given id\n     * @param id\n     * @returns {*}\n     */\n    getSchemaForKey(id) {\n        let _schema = null;\n        const _schemas = _schemaSignatures.get(this);\n        _schemas.schemas.some((schema) => {\n            if (schema.hasOwnProperty(\"$id\")) {\n                if (schema.$id === id) {\n                    _schema = schema;\n                    return true;\n                }\n            } else if (schema.hasOwnProperty(\"id\")) {\n                if (schema.id === id) {\n                    _schema = schema;\n                    return true;\n                }\n            }\n            return false;\n        });\n        return _schema;\n    }\n\n    /**\n     * Retrieves JSON-Schema element for given Path\n     * @param path\n     * @returns {any}\n     */\n    getSchemaForPath(path) {\n        let _id;\n        if (path.indexOf(\"#\") > -1) {\n            const _sp = path.split(\"#\");\n            _id = _sp[0];\n            path = _sp[1];\n        } else {\n            _id = _validators.get(this).path;\n        }\n\n        const _schema = this.getSchemaForKey(_id);\n\n        return walkObject(path, _schema);\n    }\n\n    /**\n     * Validates data against named schema\n     * @param path\n     * @param value\n     * @return {*|void|RegExpExecArray}\n     */\n    validate(path, value) {\n        return _validators.get(this).exec(path, value);\n    }\n\n    /**\n     * Getter for Ajv validation error messages\n     * @return {error[] | null}\n     */\n    get errors() {\n        return _validators.get(this).$ajv.errors || null;\n    }\n\n    /**\n     *\n     * @param to\n     * @returns {Object|Array}\n     */\n    getPath(to) {\n        let _ref = this.model;\n        to = to.replace(/\\/?(properties|items)+\\//g, \".\").replace(/^\\./, \"\");\n        (to.split(\".\")).forEach((step) => {\n            if (_ref[step]) {\n                _ref = _ref[step];\n            }\n        });\n\n        return _ref;\n    }\n\n    /**\n     * Retrieves all Models at given path\n     * @param to\n     * @returns {Array[]|Object[]}\n     */\n    getModelsInPath(to) {\n        const _steps = [this.model];\n        let _ref = this.model;\n        to = to.replace(/\\/?(properties|items)+\\/?/g, \".\");\n        (to.split(\".\")\n            .filter((itm, idx, arr) => arr.indexOf(itm) > -1))\n            .forEach((step) => {\n                if (_ref[step]) {\n                    _ref = _ref[step];\n                    _steps.push(_ref);\n                }\n            });\n        return _steps;\n    }\n\n    /**\n     * Subscribes observer to root Model\n     * @param observer\n     * @returns {Observable}\n     */\n    subscribe(observer) {\n        return _documents.get(this).subscribe(observer);\n    }\n\n    /**\n     * Subscribes observer to Model at path\n     * @param path\n     * @param observer\n     * @returns {Observable}\n     */\n    subscribeTo(path, observer) {\n        return _documents.get(this).subscribeTo(path, observer);\n    }\n\n    /**\n     * Implements toString\n     * @return {string}\n     */\n    toString() {\n        return `${this.model.$model}`;\n    }\n\n    /**\n     * Implements toJSON\n     * @return {*}\n     */\n    toJSON() {\n        return this.model.$model.toJSON();\n    }\n\n    /**\n     * Creates new PropertiesModel from JSON data\n     * @param {string|json} json -- JSON Object or String\n     * @param {object} options - RxVO options object\n     * @returns {RxVO}\n     */\n    static fromJSON(json, options) {\n        // quick peek at json param to ensure it looks ok\n        const __ = (typeof json).match(/^(string|object)+$/);\n\n        if (__) {\n            // attempts to create RxVO from JSON or JSON string\n            return new RxVO((__[1] === \"string\") ?\n                JSON.parse(json) : json, options);\n        }\n\n        // throws error if something didn't look right with the json param\n        throw new Error(\"json must be either JSON formatted string or object\");\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/rxvo.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 206,
    "kind": "variable",
    "name": "_documents",
    "memberof": "src/classes/rxvo.js",
    "static": true,
    "longname": "src/classes/rxvo.js~_documents",
    "access": "private",
    "export": false,
    "importPath": "rxvo/src/classes/rxvo.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 207,
    "kind": "function",
    "name": "_getModelClass",
    "memberof": "src/classes/rxvo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/rxvo.js~_getModelClass",
    "access": "private",
    "export": false,
    "importPath": "rxvo/src/classes/rxvo.js",
    "importStyle": null,
    "description": "returns Items or Properties model class based on type of expected property",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ItemsModel|PropertiesModel}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "el",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ItemsModel",
        "PropertiesModel"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 208,
    "kind": "class",
    "name": "RxVO",
    "memberof": "src/classes/rxvo.js",
    "static": true,
    "longname": "src/classes/rxvo.js~RxVO",
    "access": "public",
    "export": true,
    "importPath": "rxvo/src/classes/rxvo.js",
    "importStyle": "{RxVO}",
    "description": "RxVo Model Entry-point",
    "lineNumber": 58,
    "interface": false
  },
  {
    "__docId__": 209,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/rxvo.js~RxVO",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/rxvo.js~RxVO#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "json"
        ],
        "spread": false,
        "optional": false,
        "name": "schemas",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 210,
    "kind": "method",
    "name": "addSchema",
    "memberof": "src/classes/rxvo.js~RxVO",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/rxvo.js~RxVO#addSchema",
    "access": "public",
    "description": "Adds Schema to Validator instance",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "schema",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 211,
    "kind": "method",
    "name": "useSchema",
    "memberof": "src/classes/rxvo.js~RxVO",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/rxvo.js~RxVO#useSchema",
    "access": "public",
    "description": "Selects schema to validate against (advanced option, use wisely)",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 212,
    "kind": "get",
    "name": "model",
    "memberof": "src/classes/rxvo.js~RxVO",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/rxvo.js~RxVO#model",
    "access": "public",
    "description": "Getter for root Model",
    "lineNumber": 128,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object|array}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object",
        "array"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 213,
    "kind": "set",
    "name": "model",
    "memberof": "src/classes/rxvo.js~RxVO",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/rxvo.js~RxVO#model",
    "access": "public",
    "description": "Setter for root Model value",
    "lineNumber": 136,
    "params": [
      {
        "nullable": null,
        "types": [
          "object",
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 214,
    "kind": "get",
    "name": "schema",
    "memberof": "src/classes/rxvo.js~RxVO",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/rxvo.js~RxVO#schema",
    "access": "public",
    "description": "Getter for document's JSON-Schema",
    "lineNumber": 144,
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 215,
    "kind": "method",
    "name": "freeze",
    "memberof": "src/classes/rxvo.js~RxVO",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/rxvo.js~RxVO#freeze",
    "access": "public",
    "description": "Freezes document object",
    "lineNumber": 153,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RxVO}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RxVO"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 216,
    "kind": "get",
    "name": "isFrozen",
    "memberof": "src/classes/rxvo.js~RxVO",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/rxvo.js~RxVO#isFrozen",
    "access": "public",
    "description": "Returns true if object is frozen",
    "lineNumber": 162,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 217,
    "kind": "method",
    "name": "getSchemaForKey",
    "memberof": "src/classes/rxvo.js~RxVO",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/rxvo.js~RxVO#getSchemaForKey",
    "access": "public",
    "description": "returns schema with given id",
    "lineNumber": 171,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 218,
    "kind": "method",
    "name": "getSchemaForPath",
    "memberof": "src/classes/rxvo.js~RxVO",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/rxvo.js~RxVO#getSchemaForPath",
    "access": "public",
    "description": "Retrieves JSON-Schema element for given Path",
    "lineNumber": 196,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "validate",
    "memberof": "src/classes/rxvo.js~RxVO",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/rxvo.js~RxVO#validate",
    "access": "public",
    "description": "Validates data against named schema",
    "lineNumber": 217,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*",
        "void",
        "RegExpExecArray"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 220,
    "kind": "get",
    "name": "errors",
    "memberof": "src/classes/rxvo.js~RxVO",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/rxvo.js~RxVO#errors",
    "access": "public",
    "description": "Getter for Ajv validation error messages",
    "lineNumber": 225,
    "return": {
      "nullable": null,
      "types": [
        "error[] ",
        " null"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 221,
    "kind": "method",
    "name": "getPath",
    "memberof": "src/classes/rxvo.js~RxVO",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/rxvo.js~RxVO#getPath",
    "access": "public",
    "description": "",
    "lineNumber": 234,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object|Array}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "to",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 222,
    "kind": "method",
    "name": "getModelsInPath",
    "memberof": "src/classes/rxvo.js~RxVO",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/rxvo.js~RxVO#getModelsInPath",
    "access": "public",
    "description": "Retrieves all Models at given path",
    "lineNumber": 251,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array[]|Object[]}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "to",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array[]",
        "Object[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 223,
    "kind": "method",
    "name": "subscribe",
    "memberof": "src/classes/rxvo.js~RxVO",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/rxvo.js~RxVO#subscribe",
    "access": "public",
    "description": "Subscribes observer to root Model",
    "lineNumber": 271,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Observable}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "observer",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Observable"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 224,
    "kind": "method",
    "name": "subscribeTo",
    "memberof": "src/classes/rxvo.js~RxVO",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/rxvo.js~RxVO#subscribeTo",
    "access": "public",
    "description": "Subscribes observer to Model at path",
    "lineNumber": 281,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Observable}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "observer",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Observable"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 225,
    "kind": "method",
    "name": "toString",
    "memberof": "src/classes/rxvo.js~RxVO",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/rxvo.js~RxVO#toString",
    "access": "public",
    "description": "Implements toString",
    "lineNumber": 289,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "toJSON",
    "memberof": "src/classes/rxvo.js~RxVO",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/rxvo.js~RxVO#toJSON",
    "access": "public",
    "description": "Implements toJSON",
    "lineNumber": 297,
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 227,
    "kind": "method",
    "name": "fromJSON",
    "memberof": "src/classes/rxvo.js~RxVO",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/rxvo.js~RxVO.fromJSON",
    "access": "public",
    "description": "Creates new PropertiesModel from JSON data",
    "lineNumber": 307,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{RxVO}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "json"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "- JSON Object or String"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "RxVO options object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RxVO"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 228,
    "kind": "file",
    "name": "src/classes/rxvo.test.js",
    "content": "import {RxVO} from \"./rxvo\"\nimport {basicModel} from \"../../fixtures/PropertiesModel.schemas\";\nimport {default as basicRefs} from \"../../fixtures/basic-refs.schema\";\nimport {default as refsData} from \"../../fixtures/basic-refs.data\";\n\ndescribe(\"RxVO Instance Test\", () => {\n    let _rxvo;\n\n    beforeEach(() => {\n        _rxvo = new RxVO({schemas: [basicModel]});\n    });\n\n    it(\"expects a valid RxVO instance\", () => {\n        expect(_rxvo instanceof RxVO).toBe(true);\n    });\n\n    it(\"should get it's schema\", () => {\n        expect(_rxvo.schema).toEqual(basicModel);\n    });\n\n    it(\"should get path elements\", () => {\n        expect(_rxvo.getSchemaForPath(\"properties/name\")).toEqual({type: \"string\"});\n    });\n\n    it(\"expects RxVO Instances to create a valid RxVO Document\", () => {\n        _rxvo.model = {\n            \"name\": \"test\",\n        };\n\n        expect(`${_rxvo.model.name}`).toEqual(\"test\");\n    });\n\n    it(\"runs schema validator\", () => {\n        const _rxvo = new RxVO({\n            properties:\n                {\n                    id: {type: 'integer'},\n                    name: {type: 'string'},\n                    value: {type: 'integer'},\n                    createdOn: {type: 'string'}\n                },\n        });\n\n        expect(_rxvo.errors).toBe(null);\n    });\n\n    describe(\"Mixed schemas\", () => {\n        it(\"should allow mixed schemas to be selected and used\", () => {\n            const _rxvo = new RxVO({schemas: [basicRefs]});\n            _rxvo.subscribe({\n                error: (e) => console.log(JSON.stringify(e)),\n            });\n            _rxvo.model = refsData;\n            expect(_rxvo.errors).toBe(null);\n            _rxvo.model.aReference.valueA = \"A String Value\";\n            expect(_rxvo.errors).toBe(null);\n            expect(_rxvo.model).toEqual(refsData);\n        });\n    });\n});\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/rxvo.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 229,
    "kind": "file",
    "name": "src/classes/utils.js",
    "content": "/* ############################################################################\nThe MIT License (MIT)\n\nCopyright (c) 2016 - 2019 Van Schroeder\nCopyright (c) 2017-2019 Webfreshener, LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n############################################################################ */\nimport {_dirtyModels, _validators} from \"./_references\";\nimport merge from \"lodash.merge\";\n\n/**\n * flags `model` node as being out of sync with tree\n * @param {Model} model\n */\nexport const makeDirty = (model) => {\n    _dirtyModels.get(model.rxvo)[model.path] = true;\n};\n\n/**\n * flags `model` node as being in sync with tree\n * @param {Model} model\n */\nexport const makeClean = (model) => {\n    if (model.isDirty && _dirtyModels.get(model.rxvo)[model.path]) {\n        delete _dirtyModels.get(model.rxvo)[model.path];\n    }\n};\n\n/**\n * Performs model data validation against json-schema\n * @private\n * @param {Model} model\n * @param {json|array|boolean|number|string} value\n * @return {boolean|string|object[]}\n */\nexport const refValidation = (model, value) => {\n    return refAtKeyValidation(model, \"\", value);\n};\n\n/**\n * Performs model data validation at KEY against json-schema\n * @param model\n * @param key\n * @param value\n * @return {boolean|string|string[]}\n */\nexport const refAtKeyValidation = (model, key, value) => {\n    // we don't validate if model is dirty\n    if (model.isDirty) {\n        return true;\n    }\n\n    // obtains preliminary model path\n    let path = `${model.validationPath}`;\n\n    // appends key to path if set\n    if (key && key.length) {\n        path = `${path}/${key}`;\n    }\n\n    const _res = validate(model, path, value);\n\n    // tests our results for failure\n    if (_res !== true) {\n        return _res;\n    }\n\n    return true;\n};\n\n/**\n *\n * @param model\n * @param path\n * @param value\n * @returns {*}\n */\nexport const validate = (model, path, value) => {\n    // obtains validator reference\n    const _v = _validators.get(model.rxvo);\n    const _res = _v.exec(path, value);\n    // runs validation and returns\n    if (_res !== true) {\n        return _v.$ajv.errorsText(_res.errors) || \"unknown validation error\";\n    }\n\n    return true;\n};\n\n/**\n *\n * @param obj\n */\nconst getDefaultsForElement = (obj) => {\n    let _o = {};\n    const _propObj = {};\n\n    if (obj.hasOwnProperty(\"default\")) {\n        merge(_o, obj.default);\n    }\n\n    if (obj.hasOwnProperty(\"type\")) {\n        let _m = obj.type.match(/^(object|array)+$/);\n        if (_m !== null) {\n            let _key = _m[1] === \"object\" ? \"properties\" : \"items\";\n            if (obj.hasOwnProperty(_key)) {\n                return merge(_o, getDefaultsForElement(obj[_key]));\n            }\n        }\n    }\n\n    Object.keys(obj).forEach((prop) => {\n        if (obj[prop].hasOwnProperty(\"default\")) {\n            _o[prop] = obj[prop].default;\n        }\n\n        if ((obj[prop].hasOwnProperty(\"type\"))) {\n            if (obj[prop].type.match(/^(object|array)+$/) !== null) {\n\n                if (obj[prop].hasOwnProperty(\"properties\")) {\n                    _propObj[prop] = getDefaultsForElement(obj[prop].properties)\n                }\n\n                if (obj[prop].hasOwnProperty(\"items\")) {\n                    _propObj[prop] = getDefaultsForElement(obj[prop].items)\n                }\n            }\n        }\n    });\n\n    _o = merge(_o, _propObj);\n\n    delete _o[\"items\"];\n    return Object.keys(_o).length ? _o : null;\n};\n\n/**\n *\n * @param schema\n * @returns {object|null}\n */\nexport const getDefaults = (schema) => {\n    const _o = {};\n\n    if (schema.hasOwnProperty(\"default\")) {\n        merge(_o, schema.default);\n    }\n\n    if (schema.hasOwnProperty(\"properties\")) {\n        merge(_o, getDefaultsForElement(schema.properties));\n    }\n\n    if (schema.hasOwnProperty(\"items\")) {\n        merge(_o, getDefaultsForElement(schema.items));\n    }\n\n    delete _o[\"items\"];\n\n    return Object.keys(_o).length ? _o : null;\n};\n\n/**\n *\n * @param schema\n * @returns {*}\n */\nexport const getPatternPropertyDefaults = (schema) => {\n    let _o = {};\n\n    if (schema === null || schema === void(0)) {\n        return null;\n    }\n\n    if (schema.hasOwnProperty(\"patternProperties\")) {\n        let _propObj = {};\n        Object.keys(schema.patternProperties).forEach((prop) => {\n            merge(_o, getDefaultsForElement(schema.patternProperties));\n        });\n        merge(_o, _propObj);\n    }\n\n    return  Object.keys(_o).length ? _o : null;\n};\n\n/**\n * Navigates given object by path\n * @param path\n * @param toWalk\n * @param delimiter\n * @returns {{} & any}\n */\nexport const walkObject = (path, toWalk, delimiter = \"/\") => {\n    let _s = Object.assign({}, toWalk);\n    path.split(delimiter).forEach((part) => {\n        if (part !== \"\") {\n            _s = _s[part];\n        }\n    });\n    return _s;\n};\n\n/**\n * retrieves ID attribute from schema\n * @param schema\n * @returns {string}\n */\nexport const getSchemaID = (schema) => {\n    const id = [\"$id\", \"id\"].filter((id) => schema.hasOwnProperty(id));\n    return id.length ? schema[id[0]] : \"root#\";\n};\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 230,
    "kind": "function",
    "name": "makeDirty",
    "memberof": "src/classes/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/utils.js~makeDirty",
    "access": "public",
    "export": true,
    "importPath": "rxvo/src/classes/utils.js",
    "importStyle": "{makeDirty}",
    "description": "flags `model` node as being out of sync with tree",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "Model"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 231,
    "kind": "function",
    "name": "makeClean",
    "memberof": "src/classes/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/utils.js~makeClean",
    "access": "public",
    "export": true,
    "importPath": "rxvo/src/classes/utils.js",
    "importStyle": "{makeClean}",
    "description": "flags `model` node as being in sync with tree",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "Model"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 232,
    "kind": "function",
    "name": "refValidation",
    "memberof": "src/classes/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/utils.js~refValidation",
    "access": "private",
    "export": true,
    "importPath": "rxvo/src/classes/utils.js",
    "importStyle": "{refValidation}",
    "description": "Performs model data validation against json-schema",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "Model"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "json",
          "array",
          "boolean",
          "number",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean",
        "string",
        "object[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 233,
    "kind": "function",
    "name": "refAtKeyValidation",
    "memberof": "src/classes/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/utils.js~refAtKeyValidation",
    "access": "public",
    "export": true,
    "importPath": "rxvo/src/classes/utils.js",
    "importStyle": "{refAtKeyValidation}",
    "description": "Performs model data validation at KEY against json-schema",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean",
        "string",
        "string[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 234,
    "kind": "function",
    "name": "validate",
    "memberof": "src/classes/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/utils.js~validate",
    "access": "public",
    "export": true,
    "importPath": "rxvo/src/classes/utils.js",
    "importStyle": "{validate}",
    "description": "",
    "lineNumber": 96,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 235,
    "kind": "function",
    "name": "getDefaultsForElement",
    "memberof": "src/classes/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/utils.js~getDefaultsForElement",
    "access": "public",
    "export": false,
    "importPath": "rxvo/src/classes/utils.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 112,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 236,
    "kind": "function",
    "name": "getDefaults",
    "memberof": "src/classes/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/utils.js~getDefaults",
    "access": "public",
    "export": true,
    "importPath": "rxvo/src/classes/utils.js",
    "importStyle": "{getDefaults}",
    "description": "",
    "lineNumber": 160,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object|null}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "schema",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object",
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 237,
    "kind": "function",
    "name": "getPatternPropertyDefaults",
    "memberof": "src/classes/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/utils.js~getPatternPropertyDefaults",
    "access": "public",
    "export": true,
    "importPath": "rxvo/src/classes/utils.js",
    "importStyle": "{getPatternPropertyDefaults}",
    "description": "",
    "lineNumber": 185,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "schema",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 238,
    "kind": "function",
    "name": "walkObject",
    "memberof": "src/classes/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/utils.js~walkObject",
    "access": "public",
    "export": true,
    "importPath": "rxvo/src/classes/utils.js",
    "importStyle": "{walkObject}",
    "description": "Navigates given object by path",
    "lineNumber": 210,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{} & any}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "toWalk",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "delimiter",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{"
      ],
      "spread": false,
      "description": "& any}"
    }
  },
  {
    "__docId__": 239,
    "kind": "function",
    "name": "getSchemaID",
    "memberof": "src/classes/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/utils.js~getSchemaID",
    "access": "public",
    "export": true,
    "importPath": "rxvo/src/classes/utils.js",
    "importStyle": "{getSchemaID}",
    "description": "retrieves ID attribute from schema",
    "lineNumber": 225,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "schema",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 240,
    "kind": "file",
    "name": "src/classes/utils.test.js",
    "content": "import {\n    makeClean, makeDirty, getDefaults,\n    getPatternPropertyDefaults, validate,\n    refValidation, refAtKeyValidation, walkObject, getSchemaID\n} from \"./utils\";\n\nimport {\n    basicModel, nestedModel,\n    patternModel, nestedPatternModel\n} from \"../../fixtures/PropertiesModel.schemas\";\n\nimport {RxVO} from \"./rxvo\";\n\ndescribe(\"Utils tests\", () => {\n    describe(\"make dirty and make clean\", () => {\n        describe(\"basic PropertiesModel dirtiness\", () => {\n            const _rxvo = new RxVO(basicModel);\n            it(\"should make model dirty\", () => {\n                makeDirty(_rxvo.model.$model);\n                expect(_rxvo.model.$model.isDirty).toBe(true);\n            });\n\n            it(\"should make model clean\", () => {\n                makeClean(_rxvo.model.$model);\n                expect(_rxvo.model.$model.isDirty).toBe(false);\n            });\n        });\n\n        describe(\"nested PropertiesModel dirtiness\", () => {\n            const _rxvo = new RxVO({schemas: [nestedModel]});\n            _rxvo.model = {\n                aObject: {\n                    bObject: {\n                        bValue: 123,\n                    },\n                },\n            };\n            it(\"should make model dirty\", () => {\n                makeDirty(_rxvo.model.aObject.bObject.$model);\n                expect(_rxvo.model.aObject.$model.isDirty).toBe(false);\n                expect(_rxvo.model.aObject.bObject.$model.isDirty).toBe(true);\n            });\n\n            it(\"should make model clean\", () => {\n                makeClean(_rxvo.model.aObject.bObject.$model);\n                expect(_rxvo.model.aObject.bObject.$model.isDirty).toBe(false);\n            });\n        });\n    });\n\n    describe(\"Validation Methods\", () => {\n        describe(\"refValidation tests\", () => {\n            const _rxvo = new RxVO({schemas: [basicModel]});\n\n            it(\"should pass validation against refValidation\", () => {\n                const _res = refValidation(_rxvo.model.$model,\n                    {name: \"test\", age: 99, active: true});\n                expect(_res).toBe(true);\n            });\n\n            it(\"should fail validation against refValidation\", () => {\n                const _res = refValidation(_rxvo.model.$model,\n                    {name: \"test\", age: \"99\", active: true});\n                expect(_res).toBe(\"data/age should be number\");\n            });\n        });\n\n        describe(\"refAtKeyValidation tests\", () => {\n            const _rxvo = new RxVO({schemas: [nestedModel]});\n            const _data = {\n                aObject: {\n                    bObject: {\n                        bValue: 123,\n                    },\n                },\n            };\n            _rxvo.model = _data;\n            it(\"should pass validation against refValidation\", () => {\n                const _res = refAtKeyValidation(_rxvo.model.aObject.$model,\n                    \"properties/bObject\", _data.aObject.bObject);\n                expect(_res).toBe(true);\n            });\n\n            it(\"should fail validation against refValidation\", () => {\n                _data.aObject.bObject.bValue = \"123\";\n                const _res = refAtKeyValidation(_rxvo.model.aObject.$model,\n                    \"properties/bObject\", _data.aObject.bObject);\n                expect(_res).toBe(\"data/bValue should be integer\");\n            });\n        });\n\n        describe(\"validate method\", () => {\n            const _rxvo = new RxVO({schemas: [basicModel]});\n            const _data = {name: \"test\", age: 99, active: true};\n            it(\"should pass validation against refValidation\", () => {\n                const _res = validate(_rxvo.model.$model, \"\", _data);\n                expect(_res).toBe(true);\n            });\n\n            it(\"should fail validation against refValidation\", () => {\n                _data.age = \"99\"\n                const _res = validate(_rxvo.model.$model, \"\", _data);\n                expect(_res).toBe(\"data/age should be number\");\n            });\n        });\n    });\n\n    describe(\"getDefaults tests\", () => {\n        it(\"should getDefaults from schema\", () => {\n            const _schema = {\n                type: \"object\",\n                properties: {\n                    name: {\n                        type: \"string\",\n                        default: \"a name\",\n                    },\n                },\n            };\n            expect(getDefaults(_schema)).toEqual({name: \"a name\"});\n        });\n\n        it(\"should getDefaults from PatternProperty schema\", () => {\n            const _schema = {\n                type: \"object\",\n                patternProperties: {\n                    \".*\": {\n                        type: \"object\",\n                        default: {\n                            value: \"abcd\",\n                        },\n                    },\n                },\n            };\n            expect(getDefaults(nestedPatternModel)).toEqual(null);\n        });\n    });\n\n    describe(\"getPatternPropertyDefaults tests\", () => {\n        it(\"should get pattern properties for basic Properties element\", () => {\n            expect(getPatternPropertyDefaults(patternModel))\n                .toEqual({\"[^name]\": {\"value\": \"default value\"}});\n        });\n\n        it(\"should get pattern properties for Nested Properties element\", () => {\n            expect(getPatternPropertyDefaults(nestedPatternModel)).toEqual(null);\n            expect(getPatternPropertyDefaults(nestedPatternModel.properties.nested))\n                .toEqual({\".*\": {\"value\": \"default value\"}});\n        })\n    });\n\n    describe(\"walkObject test\", () => {\n        it(\"should walk object\", () => {\n            const _obj = {a: {b: {c: {val: \"string\"}}}};\n            expect(walkObject(\"a/b/c\", _obj)).toEqual({val: \"string\"});\n            // with delimiter\n            expect(walkObject(\"a.b.c\", _obj, \".\")).toEqual({val: \"string\"});\n        });\n    });\n    describe(\"getSchemaId test\", () => {\n        it(\"should get schema id\", () => {\n            expect(getSchemaID({id: \"schema1#\"})).toEqual(\"schema1#\");\n            expect(getSchemaID({$id: \"schema2#\"})).toEqual(\"schema2#\");\n            expect(getSchemaID({})).toEqual(\"root#\");\n        });\n    });\n});\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/classes/utils.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 241,
    "kind": "file",
    "name": "src/complex-schema.test.js",
    "content": "import {default as Schema} from \"../fixtures/basic-refs.schema\";\nimport {default as Data} from \"../fixtures/basic-refs.data\";\nimport {default as OpenAPIv2} from \"../fixtures/OpenAPIv2\";\nimport {default as JSONSchema4} from \"../fixtures/json-schema-draft04.schema\";\nimport {default as basicAPI} from \"../fixtures/petstore.v2\"\nimport {RxVO} from \"./classes/rxvo\";\n\ndescribe(\"Basic Refs\", () => {\n    describe(\"ref handling\", () => {\n        it(\"should validate schema containing $refs and definitions\", (done) => {\n            const _rxvo = new RxVO({schemas: [Schema]});\n            _rxvo.subscribe({\n                next: (model) => {\n                    expect(_rxvo.errors).toBe(null);\n                    expect(model.toJSON()).toEqual(Data);\n                    done();\n                },\n                error: (e) => {\n                    done(`${e}`);\n                }\n            });\n            _rxvo.model = Data;\n        });\n    });\n\n    describe(\"OPenAPI Tests\", () => {\n        it(\"should load and validate OpenAPIv2 Schema\", () => {\n            const _rxvo = new RxVO({\n                meta: [JSONSchema4],\n                schemas: [OpenAPIv2],\n                use: \"http://swagger.io/v2/schema.json#\"\n            });\n                _rxvo.model = basicAPI;\n            // test to ensure no errors were logged\n            expect(_rxvo.errors).toBe(null);\n            // test for completeness\n            expect(_rxvo.toJSON()).toEqual(basicAPI);\n        })\n            ;\n        })\n    });",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/complex-schema.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 242,
    "kind": "file",
    "name": "src/dist.test.js",
    "content": "describe(\"node commonjs require\", () => {\n    it(\"should import RxVO and create document\", ()=> {\n        let RxVO = require(\"../index\").RxVO;\n        let rxvo = new RxVO({schemas: [{id: \"root#\", type: \"object\", properties: {foo: {type: \"string\"}}}]});\n        rxvo.model = {\n            foo: \"bar\"\n        };\n        expect(rxvo.model.foo).toBe(\"bar\");\n    });\n});\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/dist.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 243,
    "kind": "file",
    "name": "src/index.js",
    "content": "/* ############################################################################\nThe MIT License (MIT)\n\nCopyright (c) 2016 - 2019 Van Schroeder\nCopyright (c) 2017-2019 Webfreshener, LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n############################################################################ */\n//== Polyfills Object.assign\nif (typeof Object.assign !== \"function\") {\n    Object.assign = require('object.assign/polyfill')();\n}\nexport {RxVO} from './classes/rxvo';\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 244,
    "kind": "file",
    "name": "src/index.test.js",
    "content": "import {RxVO} from './index';\nimport {RxVO as RxVOPackaged} from '../dist/rxvo'\n\ndescribe(\"Index\", () => {\n    describe(\"Package Validation Tests\", () => {\n        it(\"should import from ES6 Source\", function () {\n            expect(typeof RxVO).toEqual('function');\n        });\n\n        it(\"should import from WebPacked Lib\", function () {\n            expect(typeof RxVOPackaged).toEqual('function');\n        });\n\n        it(\"should import from ES5 `require`\", () => {\n            expect(typeof (require('../index').RxVO)).toEqual('function');\n        });\n    });\n\n    describe(\"Polyfill\", () => {\n        // this test is strictly for the sake of jest coverage\n        // todo: put browser testing on this, node has Object.assign\n        // todo: review browser support requirements\n        it(\"tests the polyfill for Object.assign\", () => {\n            expect(Object.hasOwnProperty(\"assign\")).toBe(true);\n            expect(typeof Object.assign).toEqual(\"function\");\n        })\n    });\n\n});\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/index.test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 245,
    "kind": "file",
    "name": "src/schemas/pipe-keys.schema.js",
    "content": "export default {\n    $id: \"https://schemas.webfreshener.com/rxvo/pipe-keys#\",\n    type: \"array\",\n    items: {\n        $ref: \"#/definitions/PipeObject\",\n    },\n    definitions: {\n        name: {\n            type: \"string\",\n        },\n        value: {\n            oneOf: [\n                {\n                    $ref: \"#/definitions/PipeObject\",\n                },\n                {\n                    type: \"string\",\n                },\n                {\n                    type: \"number\",\n                },\n                {\n                    type: \"boolean\",\n                },\n            ],\n        },\n        PipeObject: {\n            type: \"object\",\n            require: [\"name\", \"value\"],\n            properties: {\n                name: {\n                    $ref: \"#/definitions/name\",\n                },\n                value: {\n                    $ref: \"#/definitions/value\",\n                },\n            },\n        },\n    },\n};\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/schemas/pipe-keys.schema.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 246,
    "kind": "file",
    "name": "src/schemas/rxvo.schema.js",
    "content": "export default {\n    id: \"https://schemas.webfreshener.com/rxvo#\",\n    schema: {\n        oneOf: [\n            {\n                $ref: \"#definitions/Schema\",\n            },\n            {\n                $ref: \"#definitions/Pipe\",\n            },\n        ],\n    },\n    definitions: {\n        PipeConfig: {\n\n        },\n        Tags: {\n            type: \"array\",\n            items: {\n                type: \"string\",\n            }\n        },\n        Schema: {\n            oneOf: [\n                {\n                    $ref: \"http://json-schema.org/draft-04/schema#\",\n                },\n                {\n                    $ref: \"http://json-schema.org/draft-06/schema#\",\n                },\n            ],\n        },\n        Link: {\n            type: \"object\",\n            required: [\"pipe\"],\n            properties: {\n                pipe: {\n\n                },\n                callback: {\n                },\n            },\n        },\n        Pipe: {\n            type: \"object\",\n            required: [\"schema\"],\n            properties: {\n                tags: {\n                    $ref: \"#/definitions/Tags\",\n                },\n                values: {\n                    $ref: \"https://schemas.webfreshener.com/rxvo/pipe-keys#\",\n                },\n                schema: {\n                    $ref: \"#definitions/Schema\",\n                },\n                callback: {\n                },\n            },\n        },\n    },\n};\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/RxVO/src/schemas/rxvo.schema.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "kind": "index",
    "content": "RxVO\n=============\n**Reactive Validating Object**<br/>\nRxJS + JSON-Schema (Ajv) Based Observable Data Models\n\n[![Build Status](https://travis-ci.org/Webfreshener/RxVO.svg?branch=master)](https://travis-ci.org/Webfreshener/RxVO)\n[![Dependency Status](https://david-dm.org/webfreshener/RxVO/status.svg)](https://david-dm.org/webfreshener/RxVO)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/c665c70dfeb144319bc5bbd58695eb90)](https://www.codacy.com/app/vanschroeder/RxVO?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Webfreshener/RxVO&amp;utm_campaign=Badge_Grade)\n[![Codacy Badge](https://api.codacy.com/project/badge/Coverage/c665c70dfeb144319bc5bbd58695eb90)](https://www.codacy.com/app/vanschroeder/RxVO?utm_source=github.com&utm_medium=referral&utm_content=Webfreshener/RxVO&utm_campaign=Badge_Coverage)\n[![Maintainability](https://api.codeclimate.com/v1/badges/625326e1880421ccc809/maintainability)](https://codeclimate.com/github/Webfreshener/RxVO/maintainability)\n\n[Online Developer Documentation](https://webfreshener.github.io/RxVO/)\n\n### Goals \n * Provide a means to quickly and easily validate complex data-sets\n * Look and feel like a standard JS Object for ease of use and adaptability\n * Automate creation of RxJS Update and Error notifications \n\n### Table of Contents\n\n**[Installation Instructions](#installation-instructions)**\n\n**[Usage Examples](#usage-examples)**\n   * [Basic Usage](#basic-usage)\n   * [Flow Control](#flow-control)\n\n**[Developer Guide](#developer-guide)**\n  * [RxVO Class](#rxvo-class)\n    * [Schemas Config](#rxvo-schemas-config)\n    * [Model Proxy Object](#model-proxy-object)\n    * [model vs $model](#model-vs-model)\n  * [ItemsModel](#itemsmodel)\n  * [PropertiesModel](#propertiesmodel)\n  * [Model Class](#model-class)\n  * [Pipe Class](#pipe-class)\n\n#### Installation Instructions\n```\n$ npm i rxvo\n```\n\n#### Usage Example \n\nThe example below defines a Model that expects a `name` value and \nlist of `topScores` items\n\n```\n// JSON-SCHEMA for Scores Collection\nconst schema = {\n    \"id\": \"root#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\",\n        },\n        \"topScores\": {\n            \"type\": \"array\",\n            \"minItems\": 1,\n            \"maxItems\": 3,\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"score\": {\n                        \"type\": \"integer\",\n                        \"default\": 0\n                    }\n                },\n                \"required\": [\"name\"]\n            }\n        }\n    },\n    required: [\"name\", \"topScores\"],\n};\n\n\n// instantiate our Model\nconst obj = new RxVO({schemas: [schema]});\n\n// subscribes an observer to the Model\nobj.subscribe({\n    next: function (ref) {\n        console.log(\"\\t>> update succeeded!\\n\\t%s\\n\\t%s\\n\\n\",\n            \"current object state:\", \"\" + JSON.stringify(ref));\n    },\n    complete: function (ref) {\n        console.log(\"\\t>> %s\",\n            \"object is frozen and no longer editable\");\n    },\n    error: function (e) {\n        console.log(\"\\t>> update FAILED with error:\\n\\t%s\\n\",\n            JSON.stringify(e));\n        console.log(\"\\tcurrent object state:\\n\\t%s\\n\", obj);\n    },\n});\n\n// populate the RxVO with data\n// -- this will trigger the \"next\" notification\nobj.model = {\n    name: \"JSONville\",\n    topScores: [{\n        name: \"Player 1\",\n        score: 12300000,\n    }, {\n        name: \"Player 2\",\n        score: 45600000,\n    }, {\n        name: \"Player 3\",\n        score: 78900000,\n    }]\n};\n\n// update the rxVO\n// this will trigger the next notification\nobj.model.topScores[0].score++;\n\n// invalid attempt update the rxVO\n// this will trigger the error notification\n// reason: \"topScores/items/score\" is type is integer \nobj.model.topScores[0].score = \"1234\";\n\n// invalid attempt update the rxVO\n// this will trigger the error notification\n// reason: \"topScores\" is marked as required\ndelete obj.model.topScores;\n\n```\nRefer to the examples demo in `./examples/basic-usage` for more usage examples\n\n#### Flow Control ####\n```\n\n```\n\n## Developer Guide\n\n#### RxVO Class ####\nThis class represents the Document entry point\n\n| Method        | Arguments | Description  |\n|:--------------|:----------|:-------|\n| constructor   | [schemas config](#rxvo-schemas-config) (object), [options (object)] | creates new RxVO instance |\n| errors [getter]   | | retrieves errors (if any) from last json-schema validation |\n| model [getter/setter]   | | retrieves root [model proxy object](#model-proxy-object) for operation |\n| getModelsInPath   | to (string) | retrieves models at given path |\n| getSchemaForKey   | key (string) | retrieves json-schema with given key as ID |\n| getSchemaForPath   | path (string) | retrieves json-schema for model at given path |\n| schema [getter]   | | retrieves json-schema for root model |\n| subscribe   |  observers (object) | Subscribes Observers to the RxVO Model Root |\n| subscribeTo   |  path (string), observers (object) | Subscribes Observers to the Model at path \n| toString   | | retrieves root model as JSON String |\n| toJSON   | | retrieves root model as JSON Object |\n| validate   | path (string), value (object) | validates data at given ath against JSON-Schema |\n| *static* fromJSON   | json (string &#124; object) | creates new RxVO from static method |\n\n##### RxVO Schemas Config\n| Property        | Type | Description  |\n|:--------------|:----------|:-------|\n| meta | array | Array of MetaSchema references to validate Schemas against\n| schemas | array | Array of Schema references to validate data against \n| use | string | key/id of schema to use for data validation\n\n##### Model Proxy Object \n\nThis is the Data Model most usage will be based around.\nIt is a Proxy Object that has traps for all operations that alter the state of the given Array or Object\n\n| Property        | Type | Description  |\n|:--------------|:----------|:-------|\n| $model | (PropertiesModel &#124; ItemsModel) | references Proxy Object owner class\n\n##### model vs $model \n\nIn usage, `model` always references the Proxied Data Model for validation and operation where `$model` references the owner Model Class\n\n*example:*\n```\n const _rxvo = new RxVO({schemas: [schema]});\n \n // access the root model:\n console.log(`JSON.stringify(_rxvo.model)`);\n \n // access the model's owner Model Class:\n const owner = _rxvo.model.$model;\n console.log(`is frozen: ${owner.isFrozen}`);\n \n // call toString on Owner\n console.log(`stringified: ${owner}`);\n \n // obtain model from  it's Owner\n  console.log(`stringified: ${JSON.stringify(owner.model)}`);\n \n```\n\n#### ItemsModel ####\n###### subclass of [Model Class](#model-class)\n\nRepresents an Items (Array) entry in the given schema\nNote: the `model` param presents a Proxied Array, with all `Array.prototype` methods trapped and validatable\n\n| Method        | Arguments | Description  |\n|:--------------|:----------|:-------|\n| model [getter/setter]   | | setter/getter for [model proxy object](#model-proxy-object) for operation |\n\n#### PropertiesModel ####\n###### subclass of [Model Class](#model-class)\n\nRepresents an Properties (Object} entry in the given schema\n\n| Method        | Arguments | Description  |\n|:--------------|:----------|:-------|\n| get | key (string) | applies Object.freeze to model hierarchy |\n| model [getter/setter]   | | setter/getter for [model proxy object](#model-proxy-object) for operation |\n| set | key (string), value (any) | applies Object.freeze to model hierarchy |\n\n\n#### Model Class ####\n| Method        | Arguments | Description  |\n|:--------------|:----------|:-------|\n| freeze | | applies Object.freeze to model hierarchy |\n| isDirty [getter]   | | returns dirtyness of model heirarchy (is dirty if operation in progress) |\n| isFrozen [getter]   | | returns Object.freeze status of Model hierarchy |\n| jsonPath [getter]   | | retrieves json path string for Model instance. eg: \"this.is.my.path\" |\n| objectID [getter]   | | retrieves Unique ObjectID of Model instance |\n| options [getter]   | | retrieves options passed to Model instance |\n| path [getter]   | | retrieves json-schema path string for Model instance. eg: \"#/this/is/my/path\" |\n| parent [getter]   | | retrieves Model's parent Model instance |\n| pipe | callback (function), schema (json-schema)| returns pipe segment for process chaining |\n| reset | | resets model to initial state if operation is valid |\n| root [getter]   | | retrieves root Model instance |\n| rxvo [getter]   | | retrieves Model's RxVO document instance |\n| subscribe   |  observers (object) | Subscribes Observers to the RxVO Model Root |\n| subscribeTo   |  path (string), observers (object) | Subscribes Observers to the Model at path |\n| toString   | | retrieves root model as JSON String |\n| toJSON   | | retrieves root model as JSON Object |\n| validate   | path (string), value (object) | validates data at given ath against JSON-Schema |\n| validationPath [getter] | | retrieves json-schema path string for Model validation |\n\n#### Pipe Class ####\n| Method        | Arguments | Description  |\n|:--------------|:----------|:-------|\n| constructor | vo (Model), callback (function), schema (json-schema) | class constructor method |\n| clone | | returns clone of current `pipe` segment |\n| close | | terminates input on `pipe` segment |\n| exec | data (object/array)| executes pipe's callback with data without writing to `pipe` |\n| inline | target (Pipe), callback (function)| executes target pipes in single transaction block |\n| isWritable [getter] | | Returns write status of `pipe` |\n| link | target (Pipe), callback (function) | links `pipe` segment to direct output to target `pipe` |\n| merge | pipeOrPipes (Pipe|Pipe[]), schema (json-schema), callback (function) | merges multiple pipes into single output |\n| once | | informs `pipe` to close after first notification |\n| pipe | schema/pipe (json-schema / Pipe), callback (function) | returns new chained `pipe` segment |\n| sample | nth | Returns product of Nth occurrence of `pipe` execution |\n| split | mappings, callback (function) | creates array of new `pipe` segments that run in parallel |\n| subscribe | handler (object / function)| subscribes to `pipe` output notifications |\n| tap | | Provides current state of `pipe` output. alias for `toJSON` |\n| throttle | rate (number) | Limit notifications to rate based on time interval |\n| toString | | Provides current state of `pipe` output as JSON string |\n| toJSON | | Provides current state of `pipe` output as JSON |\n| unlink | target (Pipe)| unlinks `pipe` segment from target `pipe` |\n| write | data (object/array)| writes data to `pipe` |\n\n",
    "longname": "/Users/van/IdeaProjects/RxVO/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"author\": \"Van Schroeder <van@webfreshener.com>\",\n  \"name\": \"rxvo\",\n  \"description\": \"RxJS + JSON-Schema Based Observable Data Models\",\n  \"keywords\": [\n    \"rxjs\",\n    \"json-schema\",\n    \"validation\",\n    \"validatable\",\n    \"observable\",\n    \"proxy\",\n    \"model\",\n    \"json\",\n    \"data\",\n    \"object\",\n    \"array\",\n    \"hash\",\n    \"map\",\n    \"dictionary\"\n  ],\n  \"version\": \"1.0.2\",\n  \"main\": \"./index.js\",\n  \"licenses\": [\n    {\n      \"type\": \"MIT\",\n      \"url\": \"http://www.opensource.org/licenses/MIT\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/Webfreshener/RxVO.git\"\n  },\n  \"dependencies\": {\n    \"rxjs\": \"^6.4.0\",\n    \"rxjs-compat\": \"^6.4.0\"\n  },\n  \"devDependencies\": {\n    \"ajv\": \"^6.10.0\",\n    \"babel\": \"^6.23.0\",\n    \"babel-core\": \"^6.26.3\",\n    \"babel-loader\": \"^7.1.5\",\n    \"babel-plugin-transform-remove-strict-mode\": \"0.0.2\",\n    \"babel-preset-env\": \"^1.7.0\",\n    \"babel-register\": \"^6.26.0\",\n    \"chai\": \"^4.2.0\",\n    \"codacy-coverage\": \"^3.0.0\",\n    \"deep-equal\": \"^1.0.1\",\n    \"es6-weak-map\": \"^2.0.2\",\n    \"esdoc\": \"^1.0.4\",\n    \"esdoc-accessor-plugin\": \"^1.0.0\",\n    \"esdoc-exclude-source-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"jest\": \"^23.6.0\",\n    \"jest-babel-istanbul\": \"^0.1.0\",\n    \"jest-each\": \"^23.6.0\",\n    \"jshint\": \"^2.9.4\",\n    \"jsonpath\": \"^1.0.0\",\n    \"lodash.merge\": \"^4.6.1\",\n    \"mocha\": \"^6.0.2\",\n    \"mocha-lcov-reporter\": \"^1.3.0\",\n    \"object.assign\": \"^4.1.0\",\n    \"ofs-utils\": \"^1.0.0\",\n    \"weakmap\": \"0.0.6\",\n    \"webpack\": \"^4.29.6\",\n    \"webpack-cli\": \"^3.2.3\",\n    \"webpack-rxjs-externals\": \"^2.0.0\"\n  },\n  \"homepage\": \"https://webfreshener.github.io/RxVO/\",\n  \"scripts\": {\n    \"test\": \"jest\",\n    \"cover\": \"jest --coverage && cat ./coverage/lcov.info | codacy-coverage --token \\\"$CODACY_ID\\\"\",\n    \"build-test\": \"webpack --mode development; npm test\",\n    \"build\": \"webpack --mode production\",\n    \"docs\": \"./node_modules/.bin/esdoc\"\n  },\n  \"jest\": {\n    \"collectCoverage\": true,\n    \"coveragePathIgnorePatterns\": [\n      \"/node_modules/\",\n      \"/dist/\"\n    ]\n  }\n}\n",
    "longname": "/Users/van/IdeaProjects/RxVO/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]