[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/classes/_metaData.js",
    "content": "import {wf, _mdRef} from \"./_references\";\nimport {Schema} from \"./schema\";\nimport {Set} from \"./set\";\nconst _mData = new WeakMap();\n/**\n * @private\n */\nexport class MetaData {\n    /**\n     * @constructor\n     * @param {Schema|Set} _oRef -- Object Reference to item being described\n     * @param {object} _data -- Initial Data {parent:Schema|Set}\n     */\n    constructor(_oRef, _data = {}) {\n        let _cName = wf.Fun.getConstructorName(_oRef);\n\n        if (!(_oRef instanceof Schema) && !(_oRef instanceof Set)) {\n            throw `new MetaData() argument 1 requires subclass Schema or Set. Was subclass of '<${_cName}>'`;\n        }\n\n        if (this._createID == null) {\n            let _id = 0;\n            MetaData.prototype._createID = function () {\n                if (this.__objID == null) {\n                    _id = _id + 1;\n                    this.__objID = `${_cName}${_id}`;\n                }\n                return this.__objID;\n            };\n        }\n\n        // ensures existance of writeLock param\n        if (!_data.hasOwnProperty(\"_writeLock\") || _data._writeLock === void(0)) {\n            _data._writeLock = false;\n        }\n\n        _data = Object.assign({}, _data, {\n            _id: this._createID(),\n            _className: _cName,\n            _created: Date.now()\n        });\n\n        _mData.set(this, _data);\n        _mdRef.set(this, this);\n    }\n\n    /**\n     * @param {string} key\n     */\n    get(key) {\n        let __ = _mData.get(this);\n        return __.hasOwnProperty(key) ? __[key] : null;\n    }\n\n    /**\n     * not implemented\n     */\n    set() {\n        return this;\n    }\n\n    /**\n     * UUID of element\n     * @returns {string} Unique ObjectID\n     */\n    get objectID() {\n        return this.get(\"_id\");\n    }\n\n    /**\n     * Root Schema element\n     * @returns {Schema|Set}\n     */\n    get root() {\n        return this.get(\"_root\");\n    }\n\n    /**\n     * Path to element\n     * @returns {string}\n     */\n    get path() {\n        return this.get(\"_path\");\n    }\n\n    /**\n     * Owner JSD document\n     * @returns {JSD}\n     */\n    get jsd() {\n        return this.get(\"_jsd\");\n    }\n\n    /**\n     * @returns {string} path to Element\n     */\n    get parent() {\n        let _ = this.path || \"\";\n        var _p = _.split(\".\");\n        _p = (_p.length > 1) ? _p.slice(0, _p.length - 2).join(\".\") : _p[0];\n        return _p.length ? this.root.get(_p) : this.root;\n    }\n\n    /**\n     *\n     * @returns {*}\n     */\n    get writeLock() {\n        return this.get(\"_writeLock\");\n    }\n\n    toString() {\n        return JSON.stringify(_mData.get(this));\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/_metaData.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "_mData",
    "memberof": "src/classes/_metaData.js",
    "static": true,
    "longname": "src/classes/_metaData.js~_mData",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/_metaData.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "class",
    "name": "MetaData",
    "memberof": "src/classes/_metaData.js",
    "static": true,
    "longname": "src/classes/_metaData.js~MetaData",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_metaData.js",
    "importStyle": "{MetaData}",
    "description": "",
    "lineNumber": 8,
    "interface": false
  },
  {
    "__docId__": 51,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Schema",
          "Set"
        ],
        "spread": false,
        "optional": false,
        "name": "_oRef",
        "description": "- Object Reference to item being described"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "_data",
        "description": "- Initial Data {parent:Schema|Set}"
      }
    ]
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "__objID",
    "memberof": "src/classes/_metaData.js~MetaData",
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#__objID",
    "access": "private",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "method",
    "name": "get",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#get",
    "access": "public",
    "description": "",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "method",
    "name": "set",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#set",
    "access": "public",
    "description": "not implemented",
    "lineNumber": 58,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "get",
    "name": "objectID",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#objectID",
    "access": "public",
    "description": "UUID of element",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} Unique ObjectID"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Unique ObjectID"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "get",
    "name": "root",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#root",
    "access": "public",
    "description": "Root Schema element",
    "lineNumber": 74,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Schema|Set}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Schema",
        "Set"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "get",
    "name": "path",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#path",
    "access": "public",
    "description": "Path to element",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "get",
    "name": "jsd",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#jsd",
    "access": "public",
    "description": "Owner JSD document",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{JSD}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "JSD"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "get",
    "name": "parent",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#parent",
    "access": "public",
    "description": "",
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} path to Element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "path to Element"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "get",
    "name": "writeLock",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#writeLock",
    "access": "public",
    "description": "",
    "lineNumber": 108,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "toString",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#toString",
    "access": "public",
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "file",
    "name": "src/classes/_observerBuilder.js",
    "content": "import {_exists, _observers} from \"./_references\";\nimport {Set} from \"./set\";\nimport {Schema} from \"./schema\";\nimport {BehaviorSubject} from \"rxjs/Rx\";\n\nexport class ObserverBuilder {\n    /**\n     * @constructor\n     */\n    constructor() {\n        _observers.set(this, {});\n    }\n\n    /**\n     * @returns list of validation paths\n     */\n    list() {\n        let _v = _observers.get(this);\n        return Object.keys(_v);\n    }\n\n    /**\n     * @param path\n     * @returns item at path reference\n     */\n    get(path) {\n        let _o = _observers.get(this);\n        return _exists(_o[path]) ? _o[path] : null;\n    }\n\n    /**\n     *\n     * @param forPath\n     * @param oRef\n     */\n    create(forPath, oRef) {\n        if (!(oRef instanceof Schema || oRef instanceof Set)) {\n            throw \"oRef must be instance of Schema or Set\";\n        }\n        let _o = _observers.get(this);\n        _o[forPath] = {\n            onNext: new BehaviorSubject().skip(1),\n            onError: new BehaviorSubject().skip(1),\n            onComplete: new BehaviorSubject().skip(1),\n        }\n    }\n\n    /**\n     * calls next on Next Subject\n     * @param path\n     * @param value\n     */\n    next(path, value) {\n        let _o = this.get(path);\n        if (_o) {\n            _o.onNext.next(value);\n        }\n    }\n\n    /**\n     * calls next on Complete Subject\n     * @param path\n     * @param value\n     */\n    complete(path, value) {\n        let _o = this.get(path);\n        if (_o) {\n            _o.onComplete.next(value);\n        }\n    }\n\n    /**\n     * calls next on Error Subject\n     * @param path\n     * @param value\n     */\n    error(path, value) {\n        let _o = this.get(path);\n        if (_o) {\n            _o.onError.next(value);\n        }\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/_observerBuilder.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 63,
    "kind": "class",
    "name": "ObserverBuilder",
    "memberof": "src/classes/_observerBuilder.js",
    "static": true,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/_observerBuilder.js",
    "importStyle": "{ObserverBuilder}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 64,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "list",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#list",
    "access": "public",
    "description": "",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "list of validation paths"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "list of validation paths"
    },
    "params": []
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "get",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#get",
    "access": "public",
    "description": "",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "item at path reference"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "item at path reference"
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "create",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#create",
    "access": "public",
    "description": "",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "forPath",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "oRef",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "next",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#next",
    "access": "public",
    "description": "calls next on Next Subject",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "complete",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#complete",
    "access": "public",
    "description": "calls next on Complete Subject",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "error",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#error",
    "access": "public",
    "description": "calls next on Error Subject",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "src/classes/_references.js",
    "content": "/**\n * @private Weakmap Refs\n */\nimport {exists, Fun, Obj, Str} from \"jsd-utils\";\nexport const _exists = exists;\nexport const wf = {\n    Fun:Fun,\n    Obj: Obj,\n    Str: Str\n};\n/**\n * Holder for registered JS Object references\n *\n * @type {WeakMap}\n * @private\n */\nexport const _kinds = new WeakMap();\n/**\n * Holder for Schema and Set instance references\n *\n * @type {WeakMap}\n * @private\n */\nexport const _object = new WeakMap();\n/**\n * Holder for MetaData references\n * @type {WeakMap}\n * @private\n */\nexport const _mdRef = new WeakMap();\n/**\n * Holder for lists of required elements for each Schema Node\n *\n * @type {WeakMap}\n * @private\n */\nexport const _required_elements = new WeakMap();\n/**\n * Holder for Schema Validators\n * @type {WeakMap}\n * @private\n */\nexport const _validators = new WeakMap();\n/**\n * Holder for Singleton instance references\n *\n * @type {WeakMap}\n * @private\n */\nexport const _singletons = new WeakMap();\n/**\n * Holder for `Set` element types\n *\n * @type {WeakMap}\n * @private\n */\nexport const _vectorTypes = new WeakMap();\n/**\n * Holder for Schema options refeerences\n *\n * @type {WeakMap}\n * @private\n */\nexport const _schemaOptions = new WeakMap();\n/**\n * Holder for Schema Helpers references\n *\n * @type {WeakMap}\n * @private\n */\nexport const _schemaHelpers = new WeakMap();\n/**\n * Holder for Schema Signatures references\n *\n * @type {WeakMap}\n * @private\n */\nexport const _schemaSignatures = new WeakMap();\n/**\n * Holder for RXJS Observer references\n * @type {WeakMap}\n * @private\n */\nexport const _observers = new WeakMap();\n/**\n * Holder for Validation path references\n * @type {WeakMap}\n * @private\n */\nexport const _validPaths = new WeakMap();\n/**\n * Holder for Observer Builders\n * @type {WeakMap}\n * @private\n */\nexport const _oBuilders = new WeakMap();\n/**\n * Holder for Validator Builders\n * @type {WeakMap}\n * @private\n */\nexport const _vBuilders = new WeakMap();\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/_references.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "variable",
    "name": "_exists",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_exists",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_exists}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "variable",
    "name": "wf",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~wf",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{wf}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "{\"Fun\": *, \"Obj\": *, \"Str\": *}"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "variable",
    "name": "_kinds",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_kinds",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_kinds}",
    "description": "Holder for registered JS Object references",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 75,
    "kind": "variable",
    "name": "_object",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_object",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_object}",
    "description": "Holder for Schema and Set instance references",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 76,
    "kind": "variable",
    "name": "_mdRef",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_mdRef",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_mdRef}",
    "description": "Holder for MetaData references",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 77,
    "kind": "variable",
    "name": "_required_elements",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_required_elements",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_required_elements}",
    "description": "Holder for lists of required elements for each Schema Node",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 78,
    "kind": "variable",
    "name": "_validators",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_validators",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_validators}",
    "description": "Holder for Schema Validators",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 79,
    "kind": "variable",
    "name": "_singletons",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_singletons",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_singletons}",
    "description": "Holder for Singleton instance references",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "name": "_vectorTypes",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_vectorTypes",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_vectorTypes}",
    "description": "Holder for `Set` element types",
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 81,
    "kind": "variable",
    "name": "_schemaOptions",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_schemaOptions",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_schemaOptions}",
    "description": "Holder for Schema options refeerences",
    "lineNumber": 64,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "name": "_schemaHelpers",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_schemaHelpers",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_schemaHelpers}",
    "description": "Holder for Schema Helpers references",
    "lineNumber": 71,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "name": "_schemaSignatures",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_schemaSignatures",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_schemaSignatures}",
    "description": "Holder for Schema Signatures references",
    "lineNumber": 78,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 84,
    "kind": "variable",
    "name": "_observers",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_observers",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_observers}",
    "description": "Holder for RXJS Observer references",
    "lineNumber": 84,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 85,
    "kind": "variable",
    "name": "_validPaths",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_validPaths",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_validPaths}",
    "description": "Holder for Validation path references",
    "lineNumber": 90,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "name": "_oBuilders",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_oBuilders",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_oBuilders}",
    "description": "Holder for Observer Builders",
    "lineNumber": 96,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 87,
    "kind": "variable",
    "name": "_vBuilders",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_vBuilders",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_vBuilders}",
    "description": "Holder for Validator Builders",
    "lineNumber": 102,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 88,
    "kind": "file",
    "name": "src/classes/_schemaHelpers.js",
    "content": "import {_exists, _mdRef, _validPaths, _schemaOptions} from \"./_references\";\nimport {ensureRequiredFields, remapPolypath} from \"./utils\";\nimport {MetaData} from \"./_metaData\";\nimport {Schema} from \"./schema\";\nimport {Set} from \"./set\";\n\n/**\n * @private\n */\nexport class SchemaHelpers {\n    /**\n     * @constructor\n     */\n    constructor(_ref) {\n        if (!_exists(_ref) || (typeof _ref) !== \"object\") {\n            throw new Error(\"arguments[0] must be an object\");\n        }\n\n        this._ref = _ref;\n        Object.seal(this);\n    }\n\n    /**\n     * Sets Object key/vals upon Schema Reference\n     * @param obj\n     * @returns {*}\n     */\n    setObject(obj) {\n        obj = ensureRequiredFields(this._ref, obj);\n        if (typeof obj === \"string\") {\n            return obj;\n        }\n        // calls set with nested key value pair\n        Object.keys(obj).forEach((k) => {\n            let eMsg = this._ref.set(k, obj[k]);\n            if (typeof eMsg === \"string\") {\n                throw new Error(eMsg);\n            }\n        });\n        return this._ref;\n    }\n\n    /**\n     *\n     * @param key\n     * @param value\n     * @returns {*}\n     */\n    setChildObject(key, value) {\n        let _mdData = _mdRef.get(this._ref);\n        let _s = this.createSchemaChild(key, value, this._ref.options || {}, _mdData);\n        if (typeof _s === \"string\") {\n            return _s;\n        } else if (!_exists(_s) ||\n            typeof _s !== \"object\") {\n            return `'${key}' was invalid`;\n        }\n        _s.model = value;\n        return _s.model;\n    }\n\n    /**\n     *\n     * @param key\n     * @param value\n     * @param opts\n     * @param metaData\n     * @returns {Schema|Set|error string} - Schema, Set or error string\n     */\n    createSchemaChild(key, value, opts, metaData) {\n        let _s; // will be set with Schema | Set\n        let _d = Object.assign({\n            _path: key,\n            _root: this._ref.root,\n            _jsd: this._ref.jsd,\n        }, metaData || {});\n        let _md = new MetaData(this._ref, _d);\n        // tests for nested sub-elements with partial paths as keys\n        if (key.match(/.*\\.+.*/) !== null) {\n            key = key.split(\".\").pop();\n        }\n        // tests if value is not Array\n        let _kS = this._ref.schema[key];\n        if (!Array.isArray(_kS) && !Array.isArray(value)) {\n            let _schemaDef = this._ref.signature[key.split(\".\").pop()] ||\n                this._ref.signature[\"*\"] ||\n                this._ref.signature;\n            try {\n                _s = new Schema(_schemaDef, opts, _md);\n            } catch (e) {\n                return e.message;\n            }\n            return _s;\n        } else {\n            try {\n                let sig = this._ref.signature[key] ||\n                    this._ref.signature.elements ||\n                    this._ref.signature;\n                _s = new Set(sig, opts, _md);\n            } catch (e) {\n                return e;\n            }\n            return _s;\n        }\n        return \"unable to process value\";\n    }\n\n    createSetElement(idx, value) {\n        let _d = Object.assign({\n            _path: `${this._ref.path}.${idx}`,\n            _root: this._ref.root,\n            _jsd: this._ref.jsd,\n        }, _mdRef.get(this) || {});\n        // let _md = new MetaData(this._ref, _d);\n        let _opts = _schemaOptions.get(this._ref);\n        let _sig = Object.assign({}, this._ref.signature);\n        let _ref;\n\n        if (!Array.isArray(value)) {\n            // handles nested Objects\n            try {\n                _ref = new Schema(_sig, _opts, _d);\n            } catch (e) {\n                this._ref.observerBuilder.error(this._ref.path, e);\n                return false;\n            }\n        } else {\n            // handles nested Arrays\n            try {\n                _ref = new Set(_sig, _opts, _md);\n            } catch (e) {\n                this._ref.observerBuilder.error(this._ref.path, e);\n                return false;\n            }\n        }\n        try {\n            _ref.model = value;\n        } catch (e) {\n            return e;\n        }\n        return _ref.model;\n    }\n\n    /**\n     * Traverses Schema Elements and builds Validations for entries\n     *\n     * @param obj\n     * @param path\n     */\n    walkSchema(obj, path) {\n        let _elements = Array.isArray(obj) ? obj : Object.keys(obj);\n        _elements = _elements.filter((el) => {\n            if (typeof el !== \"string\") {\n                return false;\n            }\n\n            if (el === \"type\" && (typeof type) === \"string\") {\n                return false;\n            }\n\n            return el.match(/^(required|default|extensible|restrict)$/) === null;\n        });\n        for (let _i in _elements) {\n            let _k = _elements[_i];\n            let objPath = _exists(path) ?\n                (path.length ? `${path}.${_k}` : _k) : _k || \"\";\n            // let objPath = `${path}`;\n            objPath = remapPolypath(objPath);\n            // tests for standard schema object with elements\n            if ((typeof _k === \"object\") && _k.hasOwnProperty(\"elements\")) {\n                return this.walkSchema(_k.elements, objPath)\n            }\n            if (_k === \"polymorphic\") {\n                // tests for polymorphic element key rather than schema key\n                if (!Array.isArray(obj.polymorphic)) {\n                    // if is element key, create validator and continue to next steps\n                    this._ref.validatorBuilder.create(obj[_k], `${objPath}`, this._ref);\n                    // this is a bit of a kludge to allow polymorphic child elements\n                    this._ref.validatorBuilder.create(obj[_k], `${objPath}.0`, this._ref);\n                    continue;\n                }\n                let cnt = 0;\n                obj.polymorphic.forEach((polyItm) => {\n                    let polyPath = `${objPath}.${cnt++}`;\n                    this._ref.validatorBuilder.create(polyItm, polyPath, this._ref);\n                    if (polyItm.hasOwnProperty(\"elements\")) {\n                        this.walkSchema(polyItm.elements, polyPath);\n                    }\n                });\n            } else {\n                if (this._ref instanceof Set) {\n                    this._ref.validatorBuilder.create(obj, `${this._ref.path}`, this._ref);\n                } else {\n                    this._ref.validatorBuilder.create(obj[_k], objPath, this._ref);\n                }\n                // return;\n            }\n\n            // tests for nested elements\n            if (_exists(obj[_k]) &&\n                typeof obj[_k].elements === \"object\") {\n                this.walkSchema(obj[_k].elements, objPath);\n            }\n        }\n        // console.log(this._ref.validatorBuilder.list());\n    }\n\n\n    /**\n     *\n     * @param key\n     * @param value\n     * @returns {*}\n     */\n    validate(key, value) {\n        let _list = this._ref.validatorBuilder.list();\n        let _ref;\n        //-- attempts to validate\n        if (!key.length) {\n            return `invalid path \"${key}\"`;\n        }\n\n        if (0 <= _list.indexOf(key)) {\n            let _path = [];\n            let iterable = key.split(\".\");\n            var _p;\n            for (let _k of iterable) {\n                _path.push(_k);\n                _p = _path.join(\".\");\n            }\n            if (!(_ref = this._ref.validatorBuilder.get(_p))) {\n                if (!this._ref.options.extensible) {\n                    return `'${key}' is not a valid schema property`;\n                }\n            }\n            this._ref.validatorBuilder.set(key, _ref);\n        }\n        const msg = this._ref.validatorBuilder.exec(key, value);\n        if ((typeof msg) === \"string\") {\n            return msg;\n        }\n        return true;\n    }\n\n    /**\n     * utility method for testing values at given keys in schema path\n     * @param t\n     * @param _pathKeys\n     * @param _childSigs\n     * @param value\n     * @returns {boolean}\n     */\n    testPathkeys(t, _pathKeys, _childSigs, value) {\n        if ((typeof _pathKeys) === \"string\") {\n            _pathKeys = [_pathKeys];\n        }\n        for (let __ in _pathKeys) {\n            let k = _pathKeys[__];\n            let _schema;\n            // derives path for element\n            let _key = this._ref.path.length ? `${this._ref.path}.${k}` : k;\n            let kP = Schema.concatPathAddr(this._ref.path, _key);\n            if (_exists(_childSigs[`${k}`])) {\n                _schema = _childSigs[k];\n            }\n            else {\n                // attempts to find wildcard element name\n                if (_exists(_childSigs[\"*\"])) {\n                    // applies schema\n                    _schema = _childSigs[\"*\"];\n                    // creates Validator for path\n                    this._ref.validatorBuilder.create(_schema, _key, this._ref);\n                } else {\n                    if (_childSigs.hasOwnProperty(\"polymorphic\")) {\n                        const pKey = `${_key}`.split(\".\").shift();\n                        let _s = {};\n                        _s[pKey] = _childSigs.polymorphic;\n                        _schema = _s;\n                    }\n                    // rejects non-members of non-extensible schemas\n                    if (!_exists(_schema) && !this._ref.isExtensible) {\n                        const e = `element '${_key}' is not a valid element`;\n                        _validPaths.get(this._ref.jsd)[kP] = e;\n                        return false;\n                    }\n                }\n            }\n\n            // handles missing schema signatures\n            if (!_exists(_schema)) {\n                // attempts to resolve to current signature\n                if (this.testPathkeys(t, _key, _childSigs, value)) {\n                    return true;\n                }\n\n                // rejects non-members of non-extensible schemas\n                if (!this._ref.isExtensible) {\n                    const e = `element '${_key}' is not a valid element`;\n                    _validPaths.get(this._ref.jsd)[kP] = e;\n                    return false;\n                }\n                _schema = Schema.defaultSignature;\n            }\n\n            // handles child objects\n            if (typeof value === \"object\") {\n                value = this.setChildObject(_key, value);\n                if (typeof value === \"string\") {\n                    _validPaths.get(this._ref.jsd)[kP] = value;\n                    return false;\n                }\n                _validPaths.get(this._ref.jsd)[kP] = true;\n            }\n            // handles scalar values (strings, numbers, booleans...)\n            else {\n                let eMsg = this.validate(_key, value);\n                _validPaths.get(this._ref.jsd)[_key] = eMsg;\n                if (typeof eMsg === \"string\") {\n                    _validPaths.get(this._ref.jsd)[kP] = eMsg;\n                    this._ref.observerBuilder.error(kP, eMsg);\n                    return false;\n                }\n                return _validPaths.get(this._ref.jsd)[kP] = true;\n            }\n        }\n        return true;\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/_schemaHelpers.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 89,
    "kind": "class",
    "name": "SchemaHelpers",
    "memberof": "src/classes/_schemaHelpers.js",
    "static": true,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_schemaHelpers.js",
    "importStyle": "{SchemaHelpers}",
    "description": "",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 90,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 91,
    "kind": "member",
    "name": "_ref",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#_ref",
    "access": "private",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "setObject",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#setObject",
    "access": "public",
    "description": "Sets Object key/vals upon Schema Reference",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "setChildObject",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#setChildObject",
    "access": "public",
    "description": "",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "createSchemaChild",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#createSchemaChild",
    "access": "public",
    "description": "",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Schema|Set|error string} - Schema, Set or error string"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "metaData",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Schema",
        "Set",
        "error string"
      ],
      "spread": false,
      "description": "Schema, Set or error string"
    }
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "createSetElement",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#createSetElement",
    "access": "public",
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "params": [
      {
        "name": "idx",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "walkSchema",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#walkSchema",
    "access": "public",
    "description": "Traverses Schema Elements and builds Validations for entries",
    "lineNumber": 150,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "validate",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#validate",
    "access": "public",
    "description": "",
    "lineNumber": 215,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "testPathkeys",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#testPathkeys",
    "access": "public",
    "description": "utility method for testing values at given keys in schema path",
    "lineNumber": 253,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "_pathKeys",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "_childSigs",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 99,
    "kind": "file",
    "name": "src/classes/_schemaValidator.js",
    "content": "import {wf, _exists, _schemaOptions} from \"./_references\";\n\n/**\n * @private\n * @class\n */\nexport class SchemaValidator {\n    /**\n     * @constructor\n     * @param {object} schema\n     * @param {object} options\n     */\n    constructor(_schema = {}, opts = {extensible: false}) {\n        _schemaOptions.set(this, opts);\n        let _errorMsg = null;\n        this.isValid = () => _errorMsg || true;\n        // validates SCHEMA ENTRIES\n        _errorMsg = SchemaValidator.eval(_schema, this);\n    }\n\n    /**\n     *  @param {string} key\n     *  @param {string} _type\n     */\n    validateTypeString(key, _type) {\n        //- ignores special `default` object key\n        if (key.match(/\\.?default+$/)) {\n            return true;\n        }\n        //- handles restrictions defined in `restrict` object key\n        if (key.match(/\\.?restrict+$/)) {\n            if (typeof _type !== \"string\" || !_type.length) {\n                return \"restrict requires a Regular Expression String\";\n            }\n            try {\n                //- tests for valid RegExp string\n                \"text\".match(new RegExp(_type));\n            }\n            catch (e) {\n                return `Regular Expression provided for '${key}' was invalid. ${e}`;\n            }\n        }\n        //- tests for basic string type declaration {key: {type: \"String\"} }\n        else {\n            if (!_exists(this.jsd.getClass(wf.Str.capitalize(_type)))) {\n                return `type '<${_type}>' for schema element '${key}' was invalid`;\n            }\n        }\n        return true;\n    }\n\n    /**\n     *\n     * @param key\n     * @param params\n     * @returns {true|string}\n     */\n    validateUntypedMembers(key, params) {\n        if (Array.isArray(params)) {\n            for (let item of params) {\n                var _res;\n                if (typeof (_res = this.validateSchemaEntry(key, item)) === \"string\") {\n                    return _res;\n                }\n            }\n        }\n        else {\n            let _p;\n            let keyPath;\n            if ((_p = (keyPath = key.split(\".\")).pop()) !== \"elements\") {\n                if (_p === \"default\") {\n                    return true;\n                }\n                if (Array.isArray(params)) {\n                    params = {polymorphic: params};\n                }\n                if (params.hasOwnProperty(\"polymorphic\")) {\n                    return this.validateSchemaEntry(key, params.polymorphic);\n                }\n                return `value for schema element '${key}' was malformed. Property 'type' was missing`;\n            }\n            else {\n                for (let param of Object.keys(params)) {\n                    var _res;\n                    let _keys = [].concat(keyPath).concat(param);\n                    if (typeof (_res = this.validateSchemaEntry(`${_keys.join(\".\")}`, params[param])) === \"string\") {\n                        return _res;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     *\n     * @param key\n     * @param params\n     * @returns {true|string}\n     */\n    validateSchemaClass(key, params) {\n        if (!_exists(key)) {\n            throw \"key was undefined\";\n        }\n        if (typeof key !== \"string\") {\n            throw `string expected for argument 'key'. Type was '<${typeof key}>'`;\n        }\n        if (!_exists(params)) {\n            throw \"params was undefined\";\n        }\n        if (typeof params !== \"object\") {\n            throw `object expected for argument 'params'. Type was '<${typeof params}>'`;\n        }\n        if (params.type === \"*\") {\n            return true;\n        }\n        if (Object.keys(params).length === 0) {\n            return true;\n        }\n        if (typeof params.type === \"object\") {\n            return this.validateSchemaEntry(key, params.type);\n        }\n        if (key.split(\".\").pop() === \"default\") {\n            if (this._defaults == null) {\n                this._defaults = {};\n            }\n            this._defaults[key] = params;\n            return true;\n        }\n        return `value for schema element '${key}' has invalid type '<${params.type}>'`;\n    }\n\n    /**\n     * @param {string} key\n     * @param {string} sKey\n     * @param {object} params\n     */\n    validateSchemaParamString(key, sKey, params) {\n        let _kind = wf.Str.capitalize(params[sKey]);\n        let _schemaKeys = this.jsd.schemaRef;\n        let opts = _schemaOptions.get(this);\n        // handles special `restrict` key\n        if (sKey === \"restrict\") {\n            try {\n                new RegExp(params[sKey]);\n            }\n            catch (e) {\n                return e;\n            }\n            return true;\n        }\n        // rejects values for keys not found in Schema\n        if (sKey !== \"*\" && !_exists(_schemaKeys[sKey]) &&\n            opts.extensible === false) {\n            return `schema element '${key}.${sKey}' is not allowed`;\n        }\n        let eMsg = this.validateTypeString(`${key}.${sKey}`, params[sKey]);\n        if (typeof eMsg === \"string\") {\n            return eMsg;\n        }\n        return true;\n    }\n\n    /**\n     *\n     * @param key\n     * @param sKey\n     * @param _schemaKeys\n     * @param params\n     * @returns {true|string}\n     */\n    validateSchemaParam(key, sKey, _schemaKeys, params) {\n        var _type;\n        let eMsg;\n        // rejects unknown element if schema non-extensible\n        if (sKey !== \"*\" && !_exists(_schemaKeys[sKey]) &&\n            !_schemaOptions.get(this).extensible) {\n            return `schema element '${key}.${sKey}' is not allowed`;\n        }\n        // returns result of Params String Valdiation\n        if (typeof params[sKey] === \"string\") {\n            let eMsg = this.validateSchemaParamString(key, sKey, params);\n            if (typeof eMsg === \"string\") {\n                return eMsg;\n            }\n        }\n\n        // returns result of\n        if (typeof _schemaKeys[sKey] === \"object\") {\n            // handles `elements` object\n            if (sKey === \"elements\") {\n                let _iterate = Array.isArray(params.elements) ? params.elements : Object.keys(params.elements);\n                for (let xKey of _iterate) {\n                    if (typeof xKey === \"string\") {\n                        eMsg = this.validateSchemaEntry(`${key}.${xKey}`, params.elements[xKey]);\n                        if (typeof eMsg === \"string\") {\n                            return eMsg;\n                        }\n                    } else {\n                        eMsg = this.validateSchemaParam(key, xKey.type, _schemaKeys, params.elements);\n                        if (typeof eMsg === \"string\") {\n                            return eMsg;\n                        }\n                    }\n                }\n                return true;\n            }\n            // attempts to handle Native Types\n            else {\n                _type = _schemaKeys[sKey].type;\n                if (!_exists(_type)) {\n                    return `type attribute was not defined for ${key}`;\n                }\n                if (!Array.isArray(_type)) {\n                    _type = _type.type;\n                }\n\n                if (params.type === \"*\") {\n                    return true;\n                } else if (_type.indexOf(params.type) < 0 ) {\n                    return `type attribute was not defined for ${sKey}`;\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     *\n     * @param key\n     * @param params\n     * @param opts\n     * @returns {true|string}\n     */\n    validateSchemaEntry(key, params, opts) {\n        let _schemaKeys = this.jsd.schemaRef;\n        if (!_exists(opts)) {\n            opts = _schemaOptions.get(this);\n        }\n        if (!_exists(params)) {\n            return `${key} was null or undefined`;\n        }\n        if (typeof params === \"boolean\") {\n            return true;\n        }\n        if (typeof params === \"string\") {\n            return this.validateTypeString(`${key}`, params);\n        }\n        if (typeof params === \"object\") {\n            // handled Objects with no `type` element\n            if (!params.hasOwnProperty(\"type\")) {\n                return this.validateUntypedMembers(key, params);\n            }\n            // handles Classes/Functions\n            if ((this.jsd.getClass(params.type)) == null) {\n                return this.validateSchemaClass(key, params);\n            }\n            if (Array.isArray(params.elements)) {\n                params.polymorphic = Object.assign({}, params.elements);\n                delete params.elements;\n            }\n            // handles child elements\n            for (let sKey of Object.keys(params)) {\n                let __ = this.validateSchemaParam(key, sKey, _schemaKeys, params);\n                if (typeof __ === \"string\") {\n                    return __;\n                }\n            }\n            return true;\n        }\n        // handles non-object entries (Function, String, Number, Boolean, ...)\n        else {\n            let _t = typeof params;\n            if (_t !== \"function\") {\n                let _ = _schemaKeys[key.split(\".\").pop()];\n                // tests for everything that\"s not a string, _object or function\n                if (_ !== wf.Str.capitalize(_t)) {\n                    return `value for schema element '${key}' has invalid type :: \"<${_t}>\"`;\n                }\n            }\n            else {\n                let _ = wf.Fun.getConstructorName(params);\n                // tests for function\"s constructor name\n                if (_ !== _schemaKeys[key]) {\n                    return `value for schema element '${key}' has invalid class or method \"<${_}>\"`;\n                }\n            }\n            return true;\n        }\n        // should not have gotten here -- so flag it as error\n        return `unable to process schema element '${key}'`;\n    }\n\n    /**\n     *\n     * @returns {*|JSD|*|JSD}\n     */\n    get jsd() {\n        return _schemaOptions.get(this).jsd;\n    }\n\n    /**\n     *\n     * @param _schema\n     * @param caller\n     * @returns {boolean}\n     */\n    static eval(_schema, caller) {\n        let _errorMsg = true;\n        let _iterate = Array.isArray(_schema) ? _schema : Object.keys(_schema);\n        for (let _oKey of _iterate) {\n            if (_oKey && typeof _oKey === \"object\") {\n                let e = SchemaValidator.eval(_oKey, caller);\n                if (typeof e === \"string\") {\n                    _errorMsg = e;\n                    break;\n                }\n                break;\n            }\n            switch (typeof _schema[_oKey]) {\n                case \"string\":\n                    _errorMsg = caller.validateSchemaEntry(_oKey, _schema[_oKey]);\n                    break;\n                case \"object\":\n                    if (!Array.isArray(_schema[_oKey])) {\n                        if (_oKey !== \"elements\") {\n                            _errorMsg = caller.validateSchemaEntry(_oKey, _schema[_oKey]);\n                        }\n                        else {\n                            for (let _x of Object.keys(_schema[_oKey])) {\n                                if (typeof (_errorMsg = caller.validateSchemaEntry(_x, _schema[_oKey][_x])) === \"string\") {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        for (let _s of _schema[_oKey]) {\n                            if (typeof _schema[_oKey][_s] === \"string\") {\n                                _errorMsg = caller.validateTypeString(_oKey, _s);\n                            }\n                            else {\n                                _errorMsg = caller.validateSchemaEntry(_oKey, _s);\n                            }\n                        }\n                    }\n                    break;\n                case \"boolean\":\n                    _errorMsg = caller.validateSchemaEntry(_oKey, _schema[_oKey]);\n                    break;\n                default:\n                    _errorMsg = `value for schema element '${_oKey}' was invalid`;\n            }\n        }\n        return _errorMsg;\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/_schemaValidator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 100,
    "kind": "class",
    "name": "SchemaValidator",
    "memberof": "src/classes/_schemaValidator.js",
    "static": true,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_schemaValidator.js",
    "importStyle": "{SchemaValidator}",
    "description": "",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 101,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_schemaValidator.js~SchemaValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "schema",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 102,
    "kind": "member",
    "name": "isValid",
    "memberof": "src/classes/_schemaValidator.js~SchemaValidator",
    "static": false,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator#isValid",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "validateTypeString",
    "memberof": "src/classes/_schemaValidator.js~SchemaValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator#validateTypeString",
    "access": "public",
    "description": "",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "_type",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "validateUntypedMembers",
    "memberof": "src/classes/_schemaValidator.js~SchemaValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator#validateUntypedMembers",
    "access": "public",
    "description": "",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{true|string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "true",
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "validateSchemaClass",
    "memberof": "src/classes/_schemaValidator.js~SchemaValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator#validateSchemaClass",
    "access": "public",
    "description": "",
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{true|string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "true",
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 106,
    "kind": "member",
    "name": "_defaults",
    "memberof": "src/classes/_schemaValidator.js~SchemaValidator",
    "static": false,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator#_defaults",
    "access": "private",
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "validateSchemaParamString",
    "memberof": "src/classes/_schemaValidator.js~SchemaValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator#validateSchemaParamString",
    "access": "public",
    "description": "",
    "lineNumber": 138,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sKey",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "validateSchemaParam",
    "memberof": "src/classes/_schemaValidator.js~SchemaValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator#validateSchemaParam",
    "access": "public",
    "description": "",
    "lineNumber": 172,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{true|string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "sKey",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "_schemaKeys",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "true",
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "validateSchemaEntry",
    "memberof": "src/classes/_schemaValidator.js~SchemaValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator#validateSchemaEntry",
    "access": "public",
    "description": "",
    "lineNumber": 235,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{true|string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "true",
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 110,
    "kind": "get",
    "name": "jsd",
    "memberof": "src/classes/_schemaValidator.js~SchemaValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator#jsd",
    "access": "public",
    "description": "",
    "lineNumber": 298,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*|JSD|*|JSD}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*",
        "JSD",
        "*",
        "JSD"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "eval",
    "memberof": "src/classes/_schemaValidator.js~SchemaValidator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator.eval",
    "access": "public",
    "description": "",
    "lineNumber": 308,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "_schema",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "caller",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 112,
    "kind": "file",
    "name": "src/classes/_validatorBuilder.js",
    "content": "/**\n * @private\n */\nimport {_exists, _validators, _validPaths, wf} from \"./_references\";\nimport {remapPolypath} from \"./utils\";\nimport {Validator} from \"./_validators\"\n\n/**\n * @private\n */\nexport class ValidatorBuilder {\n    /**\n     * @constructor\n     */\n    constructor() {\n        _validators.set(this, {});\n    }\n\n    /**\n     * Returns list of validation paths\n     * @returns {array}\n     */\n    list() {\n        let _v = _validators.get(this);\n        return Object.keys(_v);\n    }\n\n    /**\n     * Gets Validator at `path` from Validator Hash\n     * @param path\n     * @returns item at path reference\n     */\n    get(path) {\n        let _v = _validators.get(this);\n        let r = (_v.hasOwnProperty(path)) ? _v[path] : null;\n        return r;\n    }\n\n    /**\n     * Sets Validator at `path` in Validator Hash\n     * @param path\n     * @param func\n     */\n    set(path, func) {\n        if (!_exists(func) || typeof func !== \"function\") {\n            return \"ValidatorBuilder set: expects a function at arguments[1]\";\n        }\n        _validators.get(this)[path] = func;\n        return this;\n    }\n\n\n    /**\n     * Creates new Validation for Schema/Set items\n     * @param ref - Schema Reference\n     * @param path - Path to Element in Tree\n     * @param elRef - Container Object Reference\n     * @returns {function}\n     */\n    create(ref, path, elRef) {\n        if (!_exists(ref)) {\n            throw \"ValidatorBuilder create: object reference required at arguments[0]\";\n        }\n        const formatSig = (sig) => {\n            return sig.hasOwnProperty(\"polymorphic\") ?\n                sig.polymorphic : (Array.isArray(sig) ? sig : [sig]);\n        };\n        let _signatures = formatSig(ref);\n        let _v = _validators.get(this);\n        let _functs = [];\n\n        const createFuncts = (_sigs) => {\n            _sigs = formatSig(_sigs);\n            _sigs.forEach(sig => {\n                if (typeof sig !== \"object\") {\n                    _functs.push(new Validator[\"Default\"](path, sig, elRef.jsd || elRef));\n                }\n                if (sig.hasOwnProperty(\"*\")) {\n                    createFuncts(sig[\"*\"].elements || sig[\"*\"].polymorphic || sig[\"*\"]);\n                    delete sig[\"*\"];\n                    if (Object.keys(sig) > 0) {\n                        createFuncts(sig.elements || sig.polymorphic || sig);\n                    }\n                    return;\n                }\n                if (sig.hasOwnProperty(\"type\")) {\n                    let _typeof = wf.Str.capitalize(sig.type);\n                    let _hasKey = (0 <= Object.keys(Validator).indexOf(_typeof));\n                    let _path = remapPolypath(path);\n                    _v = new Validator[_hasKey ? _typeof : \"Default\"](_path, sig, elRef.jsd || elRef);\n                    _functs.push(_v);\n                }\n            });\n        };\n\n        createFuncts(_signatures, path, elRef, []);\n        // evaluates all defined functions, returning true or last error message\n        const _f = (value) => {\n            let _result;\n            let e;\n            for (let idx in _f.$functs) {\n                _result = _f.$functs[idx].exec(value);\n                if ((typeof _result) === \"boolean\") {\n                    return _result\n                } else {\n                    e = _result;\n                }\n            }\n            return e || true;\n        };\n\n        this.set(remapPolypath(path), _f);\n        Object.defineProperty(_f, \"$functs\", {\n            get: () => _functs,\n            enumerable: false,\n        });\n        // returns closure to caller\n        return _f;\n    }\n\n    /**\n     * Executes validator `value` with validator at `path`\n     * @param path\n     * @param value\n     */\n    exec(path, value) {\n        let _v = _validators.get(this);\n        let validators;\n        if (!_v.hasOwnProperty(path)) {\n            const polyValidate = (validators) => {\n                let eMsg = true;\n                validators.some((vPath) => {\n                    eMsg = _v[vPath](value);\n                    if ((typeof eMsg) === \"boolean\") {\n                        return eMsg;\n                    }\n                });\n                return eMsg;\n            };\n\n            const findPolyPaths = (_pPath, _eName) => {\n                _pPath = wf.Str.regexEscape(_pPath);\n                const rxStr = `^(${_pPath}\\\\.${_eName}+|${_pPath}\\\\.\\\\d+\\\\.${_eName}|${_pPath}\\\\.\\\\d+\\.\\\\*)+`;\n                return Object.keys(_v).filter((v) => {\n                    return v.match(new RegExp(rxStr)) !== null;\n                });\n            };\n\n            const lookupPolyPath = (polyPath) => {\n                if (_v.hasOwnProperty(polyPath)) {\n                    let pathArr = `${polyPath}`.split(\".\");\n                    const elName = pathArr.pop();\n                    polyPath = pathArr.join(\".\");\n                    validators = findPolyPaths(polyPath, elName);\n                    if (validators.length) {\n                        const res = polyValidate(validators);\n                        return res;\n                    }\n                }\n                return false;\n            };\n\n            let polyPath = `${path}`.replace(/\\.+.*$/, \".polymorphic.0\");\n            let res = lookupPolyPath(polyPath);\n            if (res) {\n                return res;\n            }\n\n            // const _tPath = `${path}`.replace(/(.*)(\\.+.*)$/, \"$1.*\");\n            let _tPath = remapPolypath(path);\n            if (_v.hasOwnProperty(_tPath)) {\n                let rxStr = wf.Str.regexEscape(`${_tPath}.polymorphic`);\n                rxStr = `^(${rxStr}+\\\\.\\\\d?|${wf.Str.regexEscape(_tPath)})$`;\n                rxStr = new RegExp(rxStr);\n                validators = Object.keys(_v).filter((v) => {\n                    return v.match(rxStr) !== null;\n                });\n                if (validators.length) {\n                    const res = polyValidate(validators);\n                    return res;\n                }\n            }\n\n            let _nPath = _tPath.replace(/\\.\\d(.*)/, \".*.polymorphic.0$1\");\n            // console.log(`_nPath: ${_nPath}`);\n            if (_v.hasOwnProperty(_nPath)) {\n                rxStr = `${wf.Str.regexEscape(_nPath)}`.replace(/\\d/, \"\\\\d\");\n                // rxStr = ;\n                validators = Object.keys(_v).filter((v) => {\n                    // console.log(`wants to match ${v} against ${rxStr}`);\n                    return v.match(new RegExp(rxStr)) !== null;\n                });\n                // console.log(`validators: ${JSON.stringify(validators)}`);\n                if (validators.length) {\n                    const res = polyValidate(validators);\n                    return res;\n                }\n            }\n\n            _tPath = remapPolypath(`${_tPath}.polymorphic.0`);\n\n            if (_v.hasOwnProperty(_tPath)) {\n                let _eName = _tPath.split(\".\").pop();\n                const _pPath = `${wf.Str.regexEscape(_tPath)}`;\n                const rxStr = `^(${_pPath}(\\\\.\\\\d)?|${_pPath}\\\\.\\\\*?)$`;\n                validators = Object.keys(_v).filter((v) => {\n                    // console.log(`wants to match ${v} againt ${rxStr}`);\n                    return v.match(new RegExp(rxStr)) !== null;\n                });\n                // console.log(`validators: ${JSON.stringify(validators)}`);\n                if (validators.length) {\n                    const res = polyValidate(validators);\n                    return res;\n                }\n            }\n            return `validator for '${path}' does not exist`;\n        }\n        return _v[path](value);\n    }\n}",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/_validatorBuilder.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 113,
    "kind": "class",
    "name": "ValidatorBuilder",
    "memberof": "src/classes/_validatorBuilder.js",
    "static": true,
    "longname": "src/classes/_validatorBuilder.js~ValidatorBuilder",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_validatorBuilder.js",
    "importStyle": "{ValidatorBuilder}",
    "description": "",
    "lineNumber": 11,
    "interface": false
  },
  {
    "__docId__": 114,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_validatorBuilder.js~ValidatorBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validatorBuilder.js~ValidatorBuilder#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "list",
    "memberof": "src/classes/_validatorBuilder.js~ValidatorBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validatorBuilder.js~ValidatorBuilder#list",
    "access": "public",
    "description": "Returns list of validation paths",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "get",
    "memberof": "src/classes/_validatorBuilder.js~ValidatorBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validatorBuilder.js~ValidatorBuilder#get",
    "access": "public",
    "description": "Gets Validator at `path` from Validator Hash",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "item at path reference"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "item at path reference"
    }
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "set",
    "memberof": "src/classes/_validatorBuilder.js~ValidatorBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validatorBuilder.js~ValidatorBuilder#set",
    "access": "public",
    "description": "Sets Validator at `path` in Validator Hash",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "create",
    "memberof": "src/classes/_validatorBuilder.js~ValidatorBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validatorBuilder.js~ValidatorBuilder#create",
    "access": "public",
    "description": "Creates new Validation for Schema/Set items",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "ref",
        "description": "Schema Reference"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "Path to Element in Tree"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "elRef",
        "description": "Container Object Reference"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "exec",
    "memberof": "src/classes/_validatorBuilder.js~ValidatorBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validatorBuilder.js~ValidatorBuilder#exec",
    "access": "public",
    "description": "Executes validator `value` with validator at `path`",
    "lineNumber": 126,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "file",
    "name": "src/classes/_validators.js",
    "content": "import {_exists, wf, _validPaths, _vBuilders} from \"./_references\";\n\n/**\n * Holder for Validator Class References\n */\nexport const Validator = {};\n\n/**\n * @private\n */\nexport class BaseValidator {\n    /**\n     * @constructor\n     */\n    constructor(path, signature, jsd) {\n        if (!jsd) {\n            throw `JSD is required for '${path}'`;\n        }\n        this.path = path;\n        this._signature = JSON.stringify(signature);\n        this.jsd = jsd;\n        this.validations[path] = -1;\n        Object.seal(this);\n    }\n\n    get signature() {\n        return JSON.parse(this._signature);\n    }\n\n    /**\n     * invokes `exec` for validator on object child elements\n     * @param path\n     * @param value\n     * @returns {*}\n     */\n    call(path, value) {\n        // attempt to reference validator at path\n        let __ = _vBuilders.get(this.jsd).get(path);\n        // tests for existence of validator\n        if (_exists(__) && typeof __ === \"function\") {\n            const e = __(value);\n            // sets result of validation\n            this.validations[path] = ((typeof e) !== \"string\") || e;\n            return e;\n        }\n        // returns error message if unable to find validator for path\n        return `'${path}' has no validator defined`;\n    }\n\n    /**\n     * tests typeof value reference\n     *\n     * @param type\n     * @param value\n     * @returns {Boolean|String}\n     */\n    checkType(type, value) {\n        // evaluation closure to test typeof element\n        let _eval = (type, value) => {\n            let _x = (typeof type !== \"string\") ? this.jsd.getClass([type]) : type;\n            // tests for special '*' (wildcard) type\n            if (_x === \"*\") {\n                return true;\n            }\n            // tests for explicit type match\n            if (_x.match(new RegExp(`^${typeof value}$`, \"i\")) === null) {\n                return `'${this.path}' expected ${type}, type was '<${typeof value}>'`\n            }\n            return true;\n        };\n        // tests that param `type` exists\n        if (_exists(type)) {\n            // tests if `type` is Array\n            // -- NOTE: this should allow an Array of Types\n            // -- might want re-evaluate this\n            if (Array.isArray(type)) {\n                let _res;\n                // tests each `type` specified in Set until we find a true value\n                type.some((k) => {\n                    _res = _eval(k, value);\n                    return ((typeof _res) === \"boolean\");\n                });\n                return _res;\n            }\n            // performs eval on type against value\n            return _eval(type, value);\n        } else {\n            // returns error string if `type` was undefined\n            return `type '${type}' for ${this.path} was undefined`;\n        }\n    }\n\n    /**\n     * default exec method, must be overridden by subclass\n     *\n     * @param value\n     * @returns {string}\n     */\n    exec(value) {\n        return `${wf.utils.Fun.getClassName(this)} requires override of 'exec'`;\n    }\n\n    /**\n     * getter returns Hash of all validations defined for this document\n     *\n     * @returns {V}\n     */\n    get validations() {\n        return _validPaths.get(this.jsd);\n    }\n}\n\nValidator.Array = class Arr extends BaseValidator {\n    /**\n     * @constructor\n     * @param path\n     * @param signature\n     * @param jsd\n     */\n    constructor(path, signature, jsd) {\n        super(path, signature, jsd);\n    }\n\n    /**\n     * validates Object datatypes\n     *\n     * @param value\n     * @returns {*}\n     */\n    exec(value) {\n        if (!Array.isArray(value)) {\n            return `type of array was expected for '${this.path}'. type was '<${typeof value}>'`;\n        }\n        for (let __ in value) {\n            let e = this.call(this.path, value[__]);\n            if ((typeof e) === \"string\") {\n                return e;\n            }\n        }\n        return true;\n    }\n}\n/**\n * @private\n */\nValidator.Object = class Obj extends BaseValidator {\n    /**\n     * @constructor\n     * @param path\n     * @param signature\n     * @param jsd\n     */\n    constructor(path, signature, jsd) {\n        super(path, signature, jsd);\n    }\n\n    /**\n     * validates Object datatypes\n     *\n     * @param value\n     * @returns {*}\n     */\n    exec(value) {\n        let _iterate = (key, _val) => {\n            // replaces \".\" path with \"\"\n            let _p = `${this.path}.${key}`;\n            // obtains Validator Builder for this Document\n            let _v = _vBuilders.get(this.jsd);\n            // tests for Validator for path\n            if (!_v.get(_p)) {\n                // creates new Validator for path using signature for key\n                let _sig = this.signature.elements[key] || this.signature.elements[\"*\"];\n                _vBuilders.get(this.jsd).create(_sig, _p, this.jsd);\n            }\n            // calls the validator with path and value\n            let e = this.call(_p, _val);\n            if ((typeof e) === \"string\") {\n                return e;\n            }\n        };\n        if (typeof value === \"object\") {\n            if (!Array.isArray(value)) {\n                for (let _k in value) {\n                    let _res = _iterate(_k, value[_k]);\n                    if (typeof _res === \"string\") {\n                        return _res;\n                    }\n                }\n            }\n            else {\n                for (let __ in value) {\n                    let e = this.call(this.path, value[__]);\n                    if (typeof e === \"string\") {\n                        return e;\n                    }\n                }\n            }\n            return true;\n        }\n        else {\n            return `'${this.path}' expected value of type 'Object'. Type was '<${typeof value}>'`;\n        }\n    }\n};\n/**\n * @private\n */\nValidator.Boolean = class Bool extends BaseValidator {\n    /**\n     * @constructor\n     * @param path\n     * @param signature\n     * @param jsd\n     */\n    constructor(path, signature, jsd) {\n        super(path, signature, jsd);\n    }\n\n    /**\n     * validates Boolean datatypes\n     *\n     * @param value\n     * @returns {Boolean|String}\n     */\n    exec(value) {\n        return this.checkType(\"boolean\", value);\n    }\n};\n\n/**\n * @private\n */\nValidator.String = class Str extends BaseValidator {\n    /**\n     * @constructor\n     * @param path\n     * @param signature\n     * @param jsd\n     */\n    constructor(path, signature, jsd) {\n        super(path, signature, jsd);\n    }\n\n    /**\n     * validates String datatypes\n     *\n     * @param value\n     * @returns {*}\n     */\n    exec(value) {\n        let __ = this.checkType(\"string\", value);\n        if ((typeof __) === \"string\") {\n            return __;\n        }\n        if (_exists(this.signature.restrict)) {\n            let _rxStr;\n            let _rxFlags;\n            /*\n                Allow restrict to be Array or String\n                if Array, first element is rx string, second element is rx flags\n             */\n            if (Array.isArray(this.signature.restrict)) {\n                _rxStr = this.signature.restrict[0];\n                _rxFlags = this.signature.restrict.length > 1 ? this.signature.restrict[1] : \"\";\n            } else {\n                _rxStr = this.signature.restrict;\n                _rxFlags = \"\";\n            }\n\n            if (!_exists(new RegExp(_rxStr.replace(/[\\\\\\\\]{2,}/g, \"\\\\\"), _rxFlags).exec(value))) {\n                return `value '${value}' for ${this.path} did not match required expression`;\n            }\n        }\n        return true;\n    }\n};\n\n/**\n * @private\n */\nValidator.Number = class Num extends BaseValidator {\n    /**\n     * @constructor\n     * @param path\n     * @param signature\n     * @param jsd\n     */\n    constructor(path, signature, jsd) {\n        super(path, signature, jsd);\n    }\n\n    /**\n     * validates Number datatypes\n     *\n     * @param value\n     * @returns {*}\n     */\n    exec(value) {\n        let __ = this.checkType(\"number\", value);\n        if (typeof __ === \"string\") {\n            return __;\n        }\n        // attempts to cast to number\n        return !isNaN(Number(value)) ? true : `${this.path} was unable to process '${value}' as Number`;\n    }\n};\n\n/**\n * @private\n */\nValidator.Function = class Fun extends BaseValidator {\n    /**\n     * @constructor\n     * @param path\n     * @param signature\n     * @param jsd\n     */\n    constructor(path, signature, jsd) {\n        super(path, signature, jsd);\n    }\n\n    /**\n     * validates Function datatypes\n     *\n     * @param value\n     * @returns {*}\n     */\n    exec(value) {\n        let _x = typeof this.signature.type === \"string\" ?\n            this.signature.type :\n            wf.Fun.getConstructorName(this.signature.type);\n        let _fn = wf.Fun.getConstructorName(value);\n        return _x === _fn ? true :\n            `${this.path} requires '$_x' got '<${_fn}>' instead`;\n    }\n};\n\n/**\n * @private\n */\nValidator.Default = class Def extends BaseValidator {\n    /**\n     * @constructor\n     * @param path\n     * @param signature\n     * @param jsd\n     */\n    constructor(path, signature, jsd) {\n        super(path, signature, jsd);\n    }\n\n    /**\n     * validates unknown (default) datatypess\n     * @param value\n     * @returns {*}\n     */\n    exec(value) {\n        const _testValidator = (type, value) => {\n            if (type === \"*\") {\n                return true;\n            }\n            let _val = Validator[wf.Str.capitalize(type)];\n            if (!_exists(_val)) {\n                return `'${this.path}' was unable to obtain validator for type '<${type}>'`;\n            }\n            let _ = new _val(this.path, this.signature, this.jsd);\n            return _.exec(value);\n        };\n        let _x = typeof this.signature.type === \"string\"\n            ? this.jsd.getClass(this.signature.type)\n            : this.signature.type;\n        let _tR = this.checkType(_x, value);\n        if (typeof _tR === \"string\") {\n            return _tR;\n        }\n        if (Array.isArray(_x)) {\n            let _ = _x.map(itm => {\n                let _clazz = this.jsd.getClass(itm);\n                return _testValidator(_clazz, value);\n            });\n            return (0 <= _.indexOf(true)) ? true : _[_.length - 1];\n        }\n        return _testValidator(_x, value);\n    }\n};\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/_validators.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 121,
    "kind": "variable",
    "name": "Validator",
    "memberof": "src/classes/_validators.js",
    "static": true,
    "longname": "src/classes/_validators.js~Validator",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/_validators.js",
    "importStyle": "{Validator}",
    "description": "Holder for Validator Class References",
    "lineNumber": 6,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "class",
    "name": "BaseValidator",
    "memberof": "src/classes/_validators.js",
    "static": true,
    "longname": "src/classes/_validators.js~BaseValidator",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_validators.js",
    "importStyle": "{BaseValidator}",
    "description": "",
    "lineNumber": 11,
    "interface": false
  },
  {
    "__docId__": 123,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_validators.js~BaseValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~BaseValidator#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 124,
    "kind": "member",
    "name": "path",
    "memberof": "src/classes/_validators.js~BaseValidator",
    "static": false,
    "longname": "src/classes/_validators.js~BaseValidator#path",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 125,
    "kind": "member",
    "name": "_signature",
    "memberof": "src/classes/_validators.js~BaseValidator",
    "static": false,
    "longname": "src/classes/_validators.js~BaseValidator#_signature",
    "access": "private",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "member",
    "name": "jsd",
    "memberof": "src/classes/_validators.js~BaseValidator",
    "static": false,
    "longname": "src/classes/_validators.js~BaseValidator#jsd",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "get",
    "name": "signature",
    "memberof": "src/classes/_validators.js~BaseValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~BaseValidator#signature",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "call",
    "memberof": "src/classes/_validators.js~BaseValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~BaseValidator#call",
    "access": "public",
    "description": "invokes `exec` for validator on object child elements",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "checkType",
    "memberof": "src/classes/_validators.js~BaseValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~BaseValidator#checkType",
    "access": "public",
    "description": "tests typeof value reference",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean|String}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean",
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "exec",
    "memberof": "src/classes/_validators.js~BaseValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~BaseValidator#exec",
    "access": "public",
    "description": "default exec method, must be overridden by subclass",
    "lineNumber": 99,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 131,
    "kind": "get",
    "name": "validations",
    "memberof": "src/classes/_validators.js~BaseValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~BaseValidator#validations",
    "access": "public",
    "description": "getter returns Hash of all validations defined for this document",
    "lineNumber": 108,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{V}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "V"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "class",
    "name": "Array",
    "memberof": "src/classes/_validators.js",
    "static": true,
    "longname": "src/classes/_validators.js~Array",
    "access": "public",
    "export": false,
    "importPath": "jsd/src/classes/_validators.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseValidator"
    ],
    "ignore": true
  },
  {
    "__docId__": 133,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_validators.js~Array",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Array#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 120,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "signature",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "jsd",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "exec",
    "memberof": "src/classes/_validators.js~Array",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Array#exec",
    "access": "public",
    "description": "validates Object datatypes",
    "lineNumber": 130,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 135,
    "kind": "class",
    "name": "Object",
    "memberof": "src/classes/_validators.js",
    "static": true,
    "longname": "src/classes/_validators.js~Object",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/_validators.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 146,
    "interface": false,
    "extends": [
      "BaseValidator"
    ],
    "ignore": true
  },
  {
    "__docId__": 136,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_validators.js~Object",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Object#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 153,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "signature",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "jsd",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "exec",
    "memberof": "src/classes/_validators.js~Object",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Object#exec",
    "access": "public",
    "description": "validates Object datatypes",
    "lineNumber": 163,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 138,
    "kind": "class",
    "name": "Boolean",
    "memberof": "src/classes/_validators.js",
    "static": true,
    "longname": "src/classes/_validators.js~Boolean",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/_validators.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 208,
    "interface": false,
    "extends": [
      "BaseValidator"
    ],
    "ignore": true
  },
  {
    "__docId__": 139,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_validators.js~Boolean",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Boolean#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 215,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "signature",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "jsd",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "exec",
    "memberof": "src/classes/_validators.js~Boolean",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Boolean#exec",
    "access": "public",
    "description": "validates Boolean datatypes",
    "lineNumber": 225,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean|String}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean",
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 141,
    "kind": "class",
    "name": "String",
    "memberof": "src/classes/_validators.js",
    "static": true,
    "longname": "src/classes/_validators.js~String",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/_validators.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 233,
    "interface": false,
    "extends": [
      "BaseValidator"
    ],
    "ignore": true
  },
  {
    "__docId__": 142,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_validators.js~String",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~String#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 240,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "signature",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "jsd",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "exec",
    "memberof": "src/classes/_validators.js~String",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~String#exec",
    "access": "public",
    "description": "validates String datatypes",
    "lineNumber": 250,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 144,
    "kind": "class",
    "name": "Number",
    "memberof": "src/classes/_validators.js",
    "static": true,
    "longname": "src/classes/_validators.js~Number",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/_validators.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 281,
    "interface": false,
    "extends": [
      "BaseValidator"
    ],
    "ignore": true
  },
  {
    "__docId__": 145,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_validators.js~Number",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Number#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 288,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "signature",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "jsd",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "exec",
    "memberof": "src/classes/_validators.js~Number",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Number#exec",
    "access": "public",
    "description": "validates Number datatypes",
    "lineNumber": 298,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 147,
    "kind": "class",
    "name": "Function",
    "memberof": "src/classes/_validators.js",
    "static": true,
    "longname": "src/classes/_validators.js~Function",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/_validators.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 311,
    "interface": false,
    "extends": [
      "BaseValidator"
    ],
    "ignore": true
  },
  {
    "__docId__": 148,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_validators.js~Function",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Function#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 318,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "signature",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "jsd",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "exec",
    "memberof": "src/classes/_validators.js~Function",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Function#exec",
    "access": "public",
    "description": "validates Function datatypes",
    "lineNumber": 328,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 150,
    "kind": "class",
    "name": "Default",
    "memberof": "src/classes/_validators.js",
    "static": true,
    "longname": "src/classes/_validators.js~Default",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/_validators.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 341,
    "interface": false,
    "extends": [
      "BaseValidator"
    ],
    "ignore": true
  },
  {
    "__docId__": 151,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_validators.js~Default",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Default#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 348,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "signature",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "jsd",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 152,
    "kind": "method",
    "name": "exec",
    "memberof": "src/classes/_validators.js~Default",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Default#exec",
    "access": "public",
    "description": "validates unknown (default) datatypess",
    "lineNumber": 357,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 153,
    "kind": "file",
    "name": "src/classes/jsd.js",
    "content": "/**\n * Strict JS Objects and Collections created from JSON Schema Definitions\n * @class JSD\n * @example const _jsd = new JSD();\n * _jsd.document = {name: \"test\"};\n * console.log(`${jsd.document.name}`);\n * // -> \"test\"\n * console.log(`${jsd.document.get(\".\"}`);\n * // -> Schema\n */\nimport {wf, _kinds, _validPaths, _oBuilders, _vBuilders} from \"./_references\";\nimport {ObserverBuilder} from \"./_observerBuilder\";\nimport {ValidatorBuilder} from \"./_validatorBuilder\";\nimport {Schema} from \"./schema\";\nimport {Set} from \"./set\";\nconst _documents = new WeakMap();\n/**\n * JSD Document Entrypoint\n * @public\n */\nexport class JSD {\n    /**\n     * @constructor\n     * @param schema\n     * @param options\n     */\n    constructor(schema = JSD.defaults, options = {extensible: false, debug: false}) {\n        _kinds.set(this, {\n            \"Array\": Array,\n            \"ArrayBuffer\": ArrayBuffer,\n            \"Boolean\": Boolean,\n            \"Buffer\": ArrayBuffer,\n            \"Date\": Date,\n            \"Number\": Number,\n            \"Object\": Object,\n            \"String\": String,\n            \"Function\": Function,\n        });\n        const _ref = this;\n        _validPaths.set(this, {});\n        _oBuilders.set(this, new ObserverBuilder());\n        _vBuilders.set(this, new ValidatorBuilder());\n        let _s;\n        if (!Array.isArray(schema) && schema.type !== \"Array\") {\n            _s = new Schema(schema, options || null, this);\n        } else {\n            if (!Array.isArray(schema)) {\n                if (!schema.hasOwnProperty(\"elements\")) {\n                    schema.elements = [\"*\"];\n                }\n            } else {\n                schema = {elements: Array.isArray(schema) ? schema : [schema]};\n            }\n            _s = new Set(schema.elements, options || null, this);\n        }\n        _documents.set(this, _s);\n    }\n\n    /**\n     * @param key {String}\n     */\n    get(key) {\n        return _documents.get(this).get(key);\n    }\n\n    /**\n     *\n     * @returns {Schema}\n     */\n    get document() {\n        return _documents.get(this);\n    }\n\n    get isValid() {\n        const v = this._validPaths.get(this);\n        for (path of v) {\n            if (!path) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @param {string|function} classesOrNames\n     * @returns {function|string}\n     */\n    getClass(classesOrNames) {\n        let _k = _kinds.get(this);\n        if (!Array.isArray(classesOrNames)) {\n            classesOrNames = [classesOrNames];\n        }\n        // traverses arguments\n        for (let arg of classesOrNames) {\n            if ((typeof arg) === \"string\") {\n                if (arg === \"*\") {\n                    // handles special * type\n                    return \"*\";\n                }\n                return (0 <= Object.keys(_k).indexOf(arg)) ? arg.toLowerCase() : null;\n            }\n            // operates on object\n            if (typeof arg === \"object\") {\n                //- operates on arrays\n                if (Array.isArray(arg)) {\n                    //- holds the results set\n                    let _r = [];\n                    // traverses array elements\n                    for (let n of arg) {\n                        //- tests elements\n                        switch (typeof n) {\n                            //- operates on string\n                            case \"string\":\n                                // sets reference onto results\n                                _r.push(this.getClass(n));\n                                break;\n                            //-- operates on functions/classes\n                            case \"function\":\n                                //- sets function/class on results\n                                _r.push(n);\n                                break;\n                            default:\n                                //- handles nested arrays\n                                _r.push(Array.isArray(n) ? this.getClass.apply(this, n) : null);\n                        }\n                    } //- end for/switch\n                    return (0 <= _r.indexOf(null)) ? {_r: null} : undefined;\n                } //- ends array handling\n                return null;\n            } //- end typrof arg is object\n            if (typeof arg === \"function\") {\n                let _ = wf.Fun.getConstructorName(arg);\n                return this.getClass(_);\n            }\n        } //- end args in classesOrNames\n        return null;\n    }\n\n    /**\n     * @param {string} name\n     * @param {function} clazz\n     */\n    registerClass(name, clazz) {\n        this[name] = clazz;\n        return _kinds.get(this)[name] = clazz;\n    }\n\n    /**\n     * @param {string} name\n     */\n    unregisterClass(name) {\n        if (_kinds.hasOwnProperty(name)) {\n            return delete _kinds.get(this)[name];\n        }\n        return false\n    }\n\n    /**\n     * @return list of registered Class Names\n     */\n    listClasses() {\n        return Object.keys(_kinds.get(this));\n    }\n\n    /**\n     * creates new Schema from JSON data\n     * @param {string|object} json\n     * @returns Schema\n     */\n    fromJSON(json) {\n        let _;\n        if (_ = (typeof json).match(/^(string|object)+$/)) {\n            return new JSD((_[1] === \"string\") ? JSON.parse(json) : json);\n        }\n        throw new Error(\"json must be either JSON formatted string or object\");\n    }\n\n    /**\n     * @returns {object} base schema element signature\n     */\n    get schemaRef() {\n        let _keys = [].concat(Object.keys(_kinds.get(this)));\n        return {\n            type: {\n                type: _keys,\n                required: true\n            },\n            required: \"Boolean\",\n            extensible: \"Boolean\",\n            restrict: \"String\",\n            default: \"*\",\n            elements: [\"Object\", \"Array\"],\n            polymorphic: {\n                type: [\"Object\", \"Array\"],\n                required: false,\n                elements: {\n                    type: {\n                        type: this.listClasses(),\n                        required: true\n                    },\n                    extensible: \"Boolean\",\n                    restrict: \"String\",\n                    validate: \"Function\",\n                    default: \"*\",\n                    elements: [\"Object\", \"Array\"]\n                }\n            }\n        };\n    }\n\n    /**\n     * @getter\n     * @returns {object} base schema element settings\n     * @example let schema = Object.assign({}, {extensible: true}, JSD.defaults);\n     * console.log( JSON.stringify( schema ) );\n     * // -> `{ \"myElement\": { \"type\": \"*\", \"required\": false, \"extensible\": true } }`\n     *\n     */\n    static get defaults() {\n        return {\n            type: \"Object\",\n            required: false,\n            extensible: true,\n            writeLock: false,\n            elements: {\n                \"*\": {\n                    type: \"*\",\n                    required: false,\n                    extensible: true\n                }\n            }\n        };\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/jsd.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 154,
    "kind": "variable",
    "name": "_documents",
    "memberof": "src/classes/jsd.js",
    "static": true,
    "longname": "src/classes/jsd.js~_documents",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/jsd.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 155,
    "kind": "class",
    "name": "JSD",
    "memberof": "src/classes/jsd.js",
    "static": true,
    "longname": "src/classes/jsd.js~JSD",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/jsd.js",
    "importStyle": "{JSD}",
    "description": "JSD Document Entrypoint",
    "lineNumber": 21,
    "interface": false
  },
  {
    "__docId__": 156,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "schema",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "get",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#get",
    "access": "public",
    "description": "",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "{String}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "get",
    "name": "document",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#document",
    "access": "public",
    "description": "",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Schema}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Schema"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "get",
    "name": "isValid",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#isValid",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "method",
    "name": "getClass",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#getClass",
    "access": "public",
    "description": "",
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function|string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "classesOrNames",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function",
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 161,
    "kind": "method",
    "name": "registerClass",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#registerClass",
    "access": "public",
    "description": "",
    "lineNumber": 143,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "clazz",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "member",
    "name": "[name]",
    "memberof": "src/classes/jsd.js~JSD",
    "static": false,
    "longname": "src/classes/jsd.js~JSD#[name]",
    "access": "public",
    "description": null,
    "lineNumber": 144,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "method",
    "name": "unregisterClass",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#unregisterClass",
    "access": "public",
    "description": "",
    "lineNumber": 151,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 164,
    "kind": "method",
    "name": "listClasses",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#listClasses",
    "access": "public",
    "description": "",
    "lineNumber": 161,
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "list of registered Class Names"
    },
    "params": []
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "fromJSON",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#fromJSON",
    "access": "public",
    "description": "creates new Schema from JSON data",
    "lineNumber": 170,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "Schema"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "Schema"
    }
  },
  {
    "__docId__": 166,
    "kind": "get",
    "name": "schemaRef",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#schemaRef",
    "access": "public",
    "description": "",
    "lineNumber": 181,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} base schema element signature"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "base schema element signature"
    },
    "type": {
      "types": [
        "{\"type\": *, \"required\": string, \"extensible\": string, \"restrict\": string, \"default\": string, \"elements\": *, \"polymorphic\": *}"
      ]
    }
  },
  {
    "__docId__": 167,
    "kind": "get",
    "name": "defaults",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/jsd.js~JSD.defaults",
    "access": "public",
    "description": "",
    "examples": [
      "let schema = Object.assign({}, {extensible: true}, JSD.defaults);\nconsole.log( JSON.stringify( schema ) );\n// -> `{ \"myElement\": { \"type\": \"*\", \"required\": false, \"extensible\": true } }`"
    ],
    "lineNumber": 219,
    "unknown": [
      {
        "tagName": "@getter",
        "tagValue": ""
      },
      {
        "tagName": "@returns",
        "tagValue": "{object} base schema element settings"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "base schema element settings"
    },
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"extensible\": boolean, \"writeLock\": *, \"elements\": *}"
      ]
    }
  },
  {
    "__docId__": 168,
    "kind": "file",
    "name": "src/classes/model.js",
    "content": "import {_mdRef, _oBuilders, _vBuilders, _exists, _validPaths, _object, _schemaSignatures} from \"./_references\";\nimport {Schema} from \"./schema\";\nimport {Set} from \"./set\";\nimport {JSD} from \"./jsd\";\nimport {Observable} from \"rxjs/Rx\";\nimport {remapPolypath} from \"./utils\";\nexport class Model {\n    constructor() {\n        _object.set(this, new Proxy(Model.createRef(this), this.handler));\n    }\n    /**\n     * subscribes handler method to observer for model\n     * @param func\n     * @returns {Observable}\n     */\n    subscribe(func) {\n        return this.subscribeTo(this.path, func);\n    }\n\n    /**\n     * subscribes handler method to property observer for path\n     * @param path\n     * @param func\n     * @returns {Observable}\n     */\n    subscribeTo(path, func) {\n        // throws if argument is not an object or function\n        if ((typeof func).match(/^(function|object)$/) === null) {\n            throw new Error(\"subscribeTo requires function\");\n        }\n\n        // creates an extensible object to hold our unsubscribe method\n        const _subs = class {};\n\n        // references the ObserverBuilder for the path\n        let _o = this.observerBuilder.get(path);\n\n        if (!_o || _o === null) {\n            this.observerBuilder.create(path, this);\n            _o = this.observerBuilder.get(path);\n        }\n\n        // adds onNext handler if `next` prop is defined\n        if (func.hasOwnProperty(\"next\")) {\n            _o.onNext.subscribe({next: func.next});\n        }\n\n        // adds onError handler if `error` prop is defined\n        if (func.hasOwnProperty(\"error\")) {\n            _o.onError.subscribe({next: func.error});\n        }\n\n        // adds onComplete handler if `complete` prop is defined\n        if (func.hasOwnProperty(\"complete\")) {\n            _o.onComplete.subscribe({next: func.complete});\n        }\n\n        // adds unsubscribe to the Proto object\n        _subs.prototype.unsubscribe = () => {\n            _o.onNext.unsubscribe();\n            _o.onError.unsubscribe();\n            _o.onComplete.unsubscribe();\n        };\n        return new _subs();\n    }\n\n    /**\n     * @returns {true|string} returns error string or true\n     */\n    validate() {\n        const paths = _validPaths.get(this.jsd);\n        try {\n            Object.keys(paths).forEach((k) => {\n                const _t = typeof paths[k];\n                if (_t === \"string\") {\n                    throw paths[k];\n                }\n            });\n        } catch (e) {\n            return e;\n        }\n        return true;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    get isValid() {\n        return (typeof this.validate() !== \"string\");\n    }\n\n    /**\n     * gets raw value of this model\n     */\n    valueOf() {\n        return this.model;\n    }\n\n    /**\n     * JSONifies Schema Model\n     */\n    toJSON() {\n        let _derive = (itm) => {\n            if (itm instanceof Schema) {\n                return itm.toJSON();\n            }\n            if (itm instanceof Set) {\n                return itm.toJSON();\n            }\n            if (typeof itm === \"object\") {\n                const _o = !Array.isArray(itm) ? {} : [];\n                for (let k in itm) {\n                    _o[k] = _derive(itm[k]);\n                }\n                return _o;\n            }\n            return itm;\n        };\n        return _derive(this.valueOf());\n    }\n\n    /**\n     * JSON stringifies primitive value\n     * @param pretty - `prettifies` JSON output for readability\n     */\n    toString(pretty = false) {\n        return JSON.stringify(this.toJSON(), null, (pretty ? 2 : void(0)));\n    }\n\n    /**\n     * @returns {string} Object ID for Schema\n     */\n    get objectID() {\n        return _mdRef.get(this)._id;\n    }\n\n    /**\n     * getter for document root element\n     * @returns {Schema|Set}\n     */\n    get root() {\n        return _mdRef.get(this).root || this;\n    }\n\n    /**\n     * getter for `path` to current Element\n     * @returns {string}\n     */\n    get path() {\n        let __ = _mdRef.get(this).path;\n        return _exists(__) ? __ : \"\";\n    }\n\n    /**\n     * getter for models parent Schema or Set element\n     * @returns {Schema|Set}\n     */\n    get parent() {\n        let __ = _mdRef.get(this).root;\n        return _exists(__) ? __ : this;\n    }\n\n    /**\n     * getter for model\"s JSD owner object\n     * @returns {JSD}\n     */\n    get jsd() {\n        return _mdRef.get(this).jsd;\n    }\n\n    /**\n     * getter for ValidatorBuilder reference\n     * @returns {ValidatorBuilder}\n     */\n    get validatorBuilder() {\n        return _vBuilders.get(this.jsd);\n    }\n\n    /**\n     * getter for ObserverBuilder reference\n     * @returns {ObserverBuilder}\n     */\n    get observerBuilder() {\n        return _oBuilders.get(this.jsd);\n    }\n\n    /**\n     * applies Object.freeze to model and triggers complete notification\n     * @returns {Model}\n     */\n    lock() {\n        Object.freeze(_object.get(this));\n        const _self = this;\n        setTimeout(()=> {\n            _self.observerBuilder.complete(_self.path, _self);\n        }, 0);\n        return this;\n    }\n\n    /**\n     *\n     * @returns {boolean}\n     */\n    get isLocked() {\n        return Object.isFrozen(_object.get(this));\n    }\n\n\n    get validationPath() {\n        let _p = remapPolypath(this.path);\n        if (Object.keys(this.schema).indexOf(\"polymorphic\") >= 0) {\n            _p = _p.replace(/(\\.\\d\\.(?!polymorphic))+/, \".*.polymorphic.\");\n            // _schemaSignatures.set(this, _schemaSignatures.get(this).polymorphic);\n        }\n        return _p;\n    }\n\n    /**\n     *\n     * @returns {*}\n     */\n    get schema() {\n        return JSON.parse(_schemaSignatures.get(this));\n    }\n\n    /**\n     * TODO: remove and standardize around `schema`\n     * @returns {*}\n     */\n    get signature() {\n        return this.schema;\n    }\n\n    /**\n     *\n     * @param ref\n     * @returns {{}}\n     */\n    static createRef(ref) {\n        let _o = ref instanceof Set ? [] : {};\n        Object.defineProperty(_o, \"$ref\", {\n            value: ref,\n            writable: false\n        });\n        return _o;\n    };\n}",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/model.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 169,
    "kind": "class",
    "name": "Model",
    "memberof": "src/classes/model.js",
    "static": true,
    "longname": "src/classes/model.js~Model",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/model.js",
    "importStyle": "{Model}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 170,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "subscribe",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#subscribe",
    "access": "public",
    "description": "subscribes handler method to observer for model",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Observable}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Observable"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "subscribeTo",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#subscribeTo",
    "access": "public",
    "description": "subscribes handler method to property observer for path",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Observable}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Observable"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 173,
    "kind": "method",
    "name": "validate",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#validate",
    "access": "public",
    "description": "",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{true|string} returns error string or true"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "true",
        "string"
      ],
      "spread": false,
      "description": "returns error string or true"
    },
    "params": []
  },
  {
    "__docId__": 174,
    "kind": "get",
    "name": "isValid",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#isValid",
    "access": "public",
    "description": "",
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "valueOf",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#valueOf",
    "access": "public",
    "description": "gets raw value of this model",
    "lineNumber": 95,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "toJSON",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#toJSON",
    "access": "public",
    "description": "JSONifies Schema Model",
    "lineNumber": 102,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "toString",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#toString",
    "access": "public",
    "description": "JSON stringifies primitive value",
    "lineNumber": 126,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pretty",
        "description": "`prettifies` JSON output for readability"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "get",
    "name": "objectID",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#objectID",
    "access": "public",
    "description": "",
    "lineNumber": 133,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} Object ID for Schema"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Object ID for Schema"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 179,
    "kind": "get",
    "name": "root",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#root",
    "access": "public",
    "description": "getter for document root element",
    "lineNumber": 141,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Schema|Set}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Schema",
        "Set"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "get",
    "name": "path",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#path",
    "access": "public",
    "description": "getter for `path` to current Element",
    "lineNumber": 149,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 181,
    "kind": "get",
    "name": "parent",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#parent",
    "access": "public",
    "description": "getter for models parent Schema or Set element",
    "lineNumber": 158,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Schema|Set}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Schema",
        "Set"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 182,
    "kind": "get",
    "name": "jsd",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#jsd",
    "access": "public",
    "description": "getter for model\"s JSD owner object",
    "lineNumber": 167,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{JSD}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "JSD"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 183,
    "kind": "get",
    "name": "validatorBuilder",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#validatorBuilder",
    "access": "public",
    "description": "getter for ValidatorBuilder reference",
    "lineNumber": 175,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ValidatorBuilder}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ValidatorBuilder"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 184,
    "kind": "get",
    "name": "observerBuilder",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#observerBuilder",
    "access": "public",
    "description": "getter for ObserverBuilder reference",
    "lineNumber": 183,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ObserverBuilder}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ObserverBuilder"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 185,
    "kind": "method",
    "name": "lock",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#lock",
    "access": "public",
    "description": "applies Object.freeze to model and triggers complete notification",
    "lineNumber": 191,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Model}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Model"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 186,
    "kind": "get",
    "name": "isLocked",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#isLocked",
    "access": "public",
    "description": "",
    "lineNumber": 204,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 187,
    "kind": "get",
    "name": "validationPath",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#validationPath",
    "access": "public",
    "description": null,
    "lineNumber": 209,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 188,
    "kind": "get",
    "name": "schema",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#schema",
    "access": "public",
    "description": "",
    "lineNumber": 222,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 189,
    "kind": "get",
    "name": "signature",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#signature",
    "access": "public",
    "description": "TODO: remove and standardize around `schema`",
    "lineNumber": 230,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "method",
    "name": "createRef",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/model.js~Model.createRef",
    "access": "public",
    "description": "",
    "lineNumber": 239,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{}}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "ref",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{}"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 191,
    "kind": "file",
    "name": "src/classes/schema.js",
    "content": "import {\n    _mdRef, _required_elements, _object, _exists, _schemaHelpers,\n    _schemaOptions, _schemaSignatures, _validPaths\n} from \"./_references\";\nimport {ensureRequiredFields} from \"./utils\";\nimport {MetaData} from \"./_metaData\";\nimport {SchemaHelpers} from \"./_schemaHelpers\";\nimport {SchemaValidator} from \"./_schemaValidator\";\nimport {JSD} from \"./jsd\";\nimport {Model} from \"./model\";\n\n/**\n * @class Schema\n */\nexport class Schema extends Model {\n    /**\n     * @constructor\n     * @param {Object} _o - schema definition object\n     * @param {Object} opts - schema options\n     */\n    constructor(_signature = Schema.defaultSignature, opts = Schema.defaultOptions) {\n        super();\n\n        var eMsg;\n        if (!_exists(_signature)) {\n            throw `Schema requires JSON object at arguments[0]. Got '${typeof _signature}'`;\n        }\n        // freezes Options object to prevent modification\n        _schemaOptions.set(this, Object.freeze(opts));\n        _required_elements.set(this, []);\n\n        // tests for metadata\n        if (!(this instanceof MetaData)) {\n            let _md;\n            if (arguments[2] instanceof JSD) {\n                _md = new MetaData(this, {\n                    _path: \"\",\n                    _root: this,\n                    _writeLock: _signature.writeLock,\n                    _jsd: arguments[2],\n                });\n            }\n            else if (typeof arguments[2] == \"object\") {\n                if (arguments[2] instanceof MetaData) {\n                    _md = arguments[2];\n                } else {\n                    _md = new MetaData(this, arguments[2]);\n                }\n            } else {\n                throw \"Invalid attempt to construct Schema. tip: use `new JSD([schema])` instead\"\n            }\n            // saves metadata object to global reference\n            _mdRef.set(this, _md);\n        }\n\n        // traverses elements of schema checking for elements marked as reqiured\n        if (_exists(_signature.elements)) {\n            _signature = _signature.elements;\n            for (let _sigEl of Object.keys(_signature)) {\n                // -- tests for element `required`\n                if (_signature[_sigEl].hasOwnProperty(\"required\") &&\n                    _signature[_sigEl].required === true) {\n                    // -- adds required element to list\n                    _required_elements.get(this).splice(-1, 0, _sigEl);\n                }\n            }\n            // freezes req'd elements object to prevent modification\n            _required_elements.set(this, Object.freeze(_required_elements.get(this)));\n        }\n\n        // attempts to validate provided `schema` entries\n        let _sV = new SchemaValidator(_signature, Object.assign({}, this.options, {\n            jsd: _mdRef.get(this).jsd,\n        }));\n\n        // throws error if error message returned\n        if (typeof (eMsg = _sV.isValid()) === \"string\") {\n            throw eMsg;\n        }\n\n        // freezes schema signature to prevent modifications\n        const _sig = Object.freeze(_signature || JSD.defaults);\n        _schemaSignatures.set(this, JSON.stringify(_sig));\n        _schemaHelpers.set(this, new SchemaHelpers(this));\n        _schemaHelpers.get(this).walkSchema(_sig, this.validationPath.replace(/(\\.\\d\\.)+/, \".*.\"));\n        this.setDefaults();\n    }\n\n    /**\n     * Handler for Object Proxy Evaluation\n     * @returns {{get: function, set: function}}\n     */\n    get handler() {\n        return {\n            get: (t, key) => {\n                const _m = key === \"$ref\" ? this : t[key];\n                return _m;\n            },\n            set: (t, key, value) => {\n                let _sH = _schemaHelpers.get(this);\n                if (typeof key === \"object\") {\n                    const e = _sH.setObject(key);\n                    if (typeof e === \"string\") {\n                        this.observerBuilder.error(this.path, e);\n                        return false;\n                    }\n                    _validPaths.get(this.jsd)[this.path] = true;\n                }\n\n                let _childSigs = this.signature.elements || this.signature;\n                let _pathKeys = key.split(\".\");\n                let _pKRes = _sH.testPathkeys(t, _pathKeys, _childSigs, value);\n                if (_pKRes) {\n                    let kP = Schema.concatPathAddr(this.path, key);\n                    _validPaths.get(this.jsd)[kP] = true;\n                    if ((typeof value) === \"object\") {\n                        value = _sH.setChildObject(key, value);\n                        if ((typeof value) === \"string\") {\n                            this.observerBuilder.error(this.path, value);\n                            return false;\n                        }\n                    }\n                    t[key] = value;\n                }\n\n                const _e = this.validate();\n                if ((typeof _e) !== \"string\") {\n                    if (this.path.length) {\n                        // TODO: should evaluate this block\n                        const _p = Schema.concatPathAddr(this.path, key);\n                        this.observerBuilder.next(_p, value);\n                    }\n                    return true;\n                }\n                this.observerBuilder.error(this.path, _e);\n                return false;\n            }\n\n        };\n    }\n\n    /**\n     * utility method to create selector path\n     * @param path\n     * @param addr\n     * @returns {string}\n     */\n    static concatPathAddr(path, addr) {\n        return path.length ? `${path}.${addr}` : addr;\n    }\n\n    /**\n     * @returns schema signature object\n     */\n    get signature() {\n        return JSON.parse(_schemaSignatures.get(this));\n    }\n\n    /**\n     * getter for object model\n     */\n    get model() {\n        return _object.get(this);\n    }\n\n    /**\n     * setter for object model\n     * @param value\n     */\n    set model(value) {\n        let e;\n        // -- reset the proxy model to initial object state if not locked\n        if (!this.isLocked) {\n            _object.set(this, new Proxy(Model.createRef(this), this.handler));\n        }\n        // -- preliminary setting of default values on initial object\n        this.setDefaults();\n        if (typeof value === \"object\") {\n            const keys = Object.keys(value);\n            if (keys.length) {\n                keys.forEach((k) => {\n                    // -- added try/catch to avoid error in jsfiddle\n                    try {\n                        this.model[k] = value[k];\n                    } catch (e) {\n                        // -- no-op\n                    }\n                });\n            }\n\n            // final check for required field and setting of defaults\n            let reqErr = ensureRequiredFields(this, value);\n            if ((typeof reqErr) === \"string\") {\n                // applies current state of `e` to validation hash\n                _validPaths.get(this.jsd)[this.path] = reqErr;\n            }\n\n            // tests current state of validation hash\n            e = this.validate();\n            if (e === true) {\n                // tests for writeLock and locks model if set\n                if (_mdRef.get(this).writeLock && !this.isLocked) {\n                    this.lock();\n                }\n                // calls next's observable to update subscribers\n                this.observerBuilder.next(this.path, this);\n                return true;\n            } else {\n                this.observerBuilder.error(this.path, e);\n                return false;\n            }\n        } else {\n            e = `unable to set scalar value on model at ${this.path.length ? this.path : \".\"}`;\n            _validPaths.get(this.jsd)[this.path] = e;\n            this.observerBuilder.error(this.path, e);\n            return false;\n        }\n    }\n\n    /**\n     * @param {string} key\n     * @returns {any}\n     */\n    get(key) {\n        return this.model[key];\n    }\n\n    /**\n     * sets value to schema key\n     * @param {string|object} key\n     * @param {any} value\n     */\n    set(key, value) {\n        let kPath = this.path;\n        if (typeof key === \"string\") {\n            _validPaths.get(this.jsd)[this.path] = -1;\n            this.model[key] = value;\n            let valid = this.validate();\n            if (typeof valid === \"string\") {\n                kPath = Schema.concatPathAddr(this.path, key);\n                this.observerBuilder.error(this.path, valid);\n                return false;\n            }\n        } else {\n            const _sH = _schemaHelpers.get(this);\n            let e = ensureRequiredFields(this, key);\n            _validPaths.get(this.jsd)[this.path] = e;\n            if (typeof e === \"string\") {\n                this.observerBuilder.error(this.path, e);\n                return false;\n            }\n            Object.keys(key).forEach((_k) => {\n                this.model[_k] = key[_k];\n            });\n        }\n        if (this.isValid) {\n            this.observerBuilder.next(this.path, this);\n            return this;\n        }\n        let eMsg = this.validate();\n        this.observerBuilder.error(this.path, eMsg);\n        return false;\n    }\n\n    /**\n     * indicates if Schema will accept arbitrary keys\n     * @returns {boolean}\n     */\n    get isExtensible() {\n        return _exists(this.signature.extensible) ?\n            this.signature.extensible : this.options.extensible || false;\n    }\n\n    /**\n     * get options (if any) for this model\"s schema\n     */\n    get options() {\n        return _schemaOptions.get(this);\n    }\n\n    /**\n     * @returns list of required elements on this Schema\n     */\n    get requiredFields() {\n        return _required_elements.get(this);\n    }\n\n    /**\n     * sets default values for schema keys\n     */\n    setDefaults() {\n        const _sig = this.schema;\n        // attempts to set default value\n        for (let _sigEl of Object.keys(_sig)) {\n            // -- tests for element `default`\n            let _default = _sig[_sigEl].default;\n            if (_exists(_default)) {\n                // sets default value for key on model\n                let _p = _sigEl.split(\".\");\n                this.set(_sigEl, _default);\n            }\n        }\n    }\n\n    static get defaultOptions() {\n        return {\n            extensible: false,\n            debug: false,\n        };\n    }\n\n    /**\n     * base signature for all Schema Objects\n     */\n    static get defaultSignature() {\n        return {\n            type: \"*\",\n            required: true,\n            extensible: false\n        };\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/schema.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 192,
    "kind": "class",
    "name": "Schema",
    "memberof": "src/classes/schema.js",
    "static": true,
    "longname": "src/classes/schema.js~Schema",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/schema.js",
    "importStyle": "{Schema}",
    "description": "",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Schema"
      }
    ],
    "interface": false,
    "extends": [
      "src/classes/model.js~Model"
    ]
  },
  {
    "__docId__": 193,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 21,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "_o",
        "description": "schema definition object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": "schema options"
      }
    ]
  },
  {
    "__docId__": 194,
    "kind": "get",
    "name": "handler",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#handler",
    "access": "public",
    "description": "Handler for Object Proxy Evaluation",
    "lineNumber": 93,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{get: function, set: function}}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{get: function, set: function}"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "{\"get\": *, \"set\": *}"
      ]
    }
  },
  {
    "__docId__": 195,
    "kind": "method",
    "name": "concatPathAddr",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/schema.js~Schema.concatPathAddr",
    "access": "public",
    "description": "utility method to create selector path",
    "lineNumber": 148,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "addr",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 196,
    "kind": "get",
    "name": "signature",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#signature",
    "access": "public",
    "description": "",
    "lineNumber": 155,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "schema signature object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "schema signature object"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 197,
    "kind": "get",
    "name": "model",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#model",
    "access": "public",
    "description": "getter for object model",
    "lineNumber": 162,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 198,
    "kind": "set",
    "name": "model",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#model",
    "access": "public",
    "description": "setter for object model",
    "lineNumber": 170,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 199,
    "kind": "method",
    "name": "get",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#get",
    "access": "public",
    "description": "",
    "lineNumber": 224,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 200,
    "kind": "method",
    "name": "set",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#set",
    "access": "public",
    "description": "sets value to schema key",
    "lineNumber": 233,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 201,
    "kind": "get",
    "name": "isExtensible",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#isExtensible",
    "access": "public",
    "description": "indicates if Schema will accept arbitrary keys",
    "lineNumber": 269,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 202,
    "kind": "get",
    "name": "options",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#options",
    "access": "public",
    "description": "get options (if any) for this model\"s schema",
    "lineNumber": 277,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 203,
    "kind": "get",
    "name": "requiredFields",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#requiredFields",
    "access": "public",
    "description": "",
    "lineNumber": 284,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "list of required elements on this Schema"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "list of required elements on this Schema"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "method",
    "name": "setDefaults",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#setDefaults",
    "access": "public",
    "description": "sets default values for schema keys",
    "lineNumber": 291,
    "params": [],
    "return": null
  },
  {
    "__docId__": 205,
    "kind": "get",
    "name": "defaultOptions",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/schema.js~Schema.defaultOptions",
    "access": "public",
    "description": null,
    "lineNumber": 305,
    "undocument": true,
    "type": {
      "types": [
        "{\"extensible\": *, \"debug\": *}"
      ]
    }
  },
  {
    "__docId__": 206,
    "kind": "get",
    "name": "defaultSignature",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/schema.js~Schema.defaultSignature",
    "access": "public",
    "description": "base signature for all Schema Objects",
    "lineNumber": 315,
    "type": {
      "types": [
        "{\"type\": string, \"required\": boolean, \"extensible\": *}"
      ]
    }
  },
  {
    "__docId__": 207,
    "kind": "file",
    "name": "src/classes/set.js",
    "content": "import {\n    _mdRef, _object, _schemaOptions,\n    _exists, _schemaHelpers, _schemaSignatures, _observers\n} from \"./_references\";\nimport {MetaData} from \"./_metaData\";\nimport {SchemaValidator} from \"./_schemaValidator\";\nimport {Schema} from \"./schema\";\nimport {JSD} from \"./jsd\";\nimport {Model} from \"./model\";\nimport {SchemaHelpers} from \"./_schemaHelpers\";\n\nconst _observerDelegates = new WeakMap();\n\n/**\n * @class Set\n */\nexport class Set extends Model {\n    /**\n     * @constructor\n     * @param {any} _type\n     * @param {any} items\n     */\n    constructor(_signature, opts = {}) {\n        super();\n        // tests for metadata\n        let __;\n        if (arguments[2] instanceof JSD) {\n            __ = new MetaData(this, {\n                _path: \"\",\n                _root: this,\n                _jsd: arguments[2],\n            });\n        }\n\n        else if (arguments[2] instanceof MetaData) {\n            __ = arguments[2];\n        } else {\n            throw `Invalid constructor call for Set: ${JSON.stringify(arguments)}`;\n        }\n\n        // stores our MetaData reference to WeakMap\n        _mdRef.set(this, __);\n        // stores our user Options into Weakmap\n        _schemaOptions.set(this, opts);\n\n        // creates a default signature if none present\n        if (!_exists(_signature)) {\n            _signature = [{type: \"*\"}];\n        }\n\n        // internally we handle all Sets as Polymorphic elements\n        _signature = {polymorphic: _signature};\n\n        // attempts to validate provided `schema` entries\n        let _sV = new SchemaValidator(_signature, Object.assign(this.options || {}, {\n            jsd: _mdRef.get(this).jsd,\n        }), this);\n\n        // throws error if error message returned\n        if (typeof (eMsg = _sV.isValid()) === \"string\") {\n            throw eMsg;\n        }\n\n        const _sig = _signature || JSD.defaults;\n        _schemaSignatures.set(this, JSON.stringify(_sig));\n        _schemaHelpers.set(this, new SchemaHelpers(this));\n        _schemaHelpers.get(this).walkSchema(_sig, `${this.path}.*`);\n        // _schemaHelpers.get(this).walkSchema(_sig, this.validationPath);\n\n    }\n\n    /**\n     * getter for object model\n     */\n    get model() {\n        return _object.get(this);\n    }\n\n    /**\n     * setter for object model\n     * @param value\n     */\n    set model(value) {\n        if (Array.isArray(value)) {\n            if (!this.isLocked) {\n                _object.set(this, new Proxy(Model.createRef(this), this.handler));\n            }\n\n            try {\n                let cnt = 0;\n                // we delegate observation in the event of whole model replacement\n                // to prevent triggering a notification for each item\n                // if the user desires such behavior they can use `addItem` with an iterator\n                _observerDelegates.set(this, {\n                    next: (col) => {\n                        if (this.length === value.length) {\n                            _observerDelegates.delete(this);\n                        }\n                    },\n                    error: (e) => {\n                        _observerDelegates.delete(this);\n                        throw e;\n                    }\n                });\n                value.forEach((val) => {\n                    _object.get(this)[cnt] = val;\n                    cnt++;\n                });\n            } catch (e) {\n                return this.observerBuilder.error(this.path, e);\n            }\n            if ((typeof this.isValid) === \"boolean\") {\n                this.observerBuilder.next(this.path, this);\n                return true;\n            } else {\n                this.observerBuilder.error(this.path, this.validate());\n                return false;\n            }\n        } else {\n            this.observerBuilder.error(this.path, `${this.path} requires Array`);\n        }\n    }\n\n    get handler() {\n        return {\n            get: (t, idx) => {\n                // TODO: review for removal\n                // if (typeof idx === \"symbol\") {\n                //     idx = `${String(idx)}`;\n                // }\n\n                if (idx === \"length\") {\n                    return t.length;\n                }\n\n                if (idx in Array.prototype) {\n                    return t[idx];\n                }\n\n                if (idx === \"$ref\") {\n                    return this;\n                }\n\n                return t[idx];\n            },\n            set: (t, idx, value) => {\n                if (idx in Array.prototype) {\n                    // do nothing against proto props\n                    return true;\n                }\n\n                let _oDel = _observerDelegates.get(this);\n                const sendErr = (e) => {\n                    if (_oDel) {\n                        _oDel.error(msg);\n                    } else {\n                        this.observerBuilder.error(this.path, msg);\n                    }\n                };\n\n                let msg = this.validatorBuilder.exec(`${this.path}.${idx}`, value);\n                if ((typeof msg) === \"string\") {\n                    sendErr(msg);\n                    return false;\n                }\n\n                if ((typeof value) === \"object\") {\n                    let _sH = _schemaHelpers.get(this);\n                    value = _sH.createSetElement(idx, value);\n                }\n\n                t[idx] = value;\n                msg = this.validate();\n                if ((typeof msg) === \"boolean\") {\n                    if (_oDel) {\n                        _oDel.next(this);\n                    } else {\n                        this.observerBuilder.next(this.path, this);\n                    }\n                    return true;\n                } else {\n                    sendErr(msg);\n                    return false;\n                }\n            },\n            deleteProperty: (t, idx) => {\n                if (idx >= t.length) {\n                    const e = `index ${idx} is out of bounds on ${this.path}`;\n                    this.observerBuilder.error(this.path, e);\n                    return false;\n                }\n                t.splice(idx, 1);\n                this.observerBuilder.next(this.path, t);\n                return true;\n            }\n        };\n    }\n\n    /**\n     * @param {number} idx\n     * @returns {any} element at index if found\n     */\n    getItemAt(idx) {\n        return this.model[idx];\n    }\n\n    /**\n     * @param {number} idx\n     * @param {any} item\n     * @returns {Set} reference to self\n     */\n    setItemAt(idx, item) {\n        this.model[idx] = item;\n        return this;\n    }\n\n    /**\n     *\n     * @param idx\n     * @returns {Set}\n     */\n    removeItemAt(idx) {\n        delete this.model[idx];\n        return this;\n    }\n\n    /**\n     * @param {Array} array\n     * @returns {Set} reference to self\n     */\n    replaceAll(array) {\n        this.model = array;\n        return this;\n    }\n\n    /**\n     * @param {number} idx\n     * @param {any} item\n     * @returns {Set} reference to self\n     */\n    replaceItemAt(idx, item) {\n        if (!this.validatorBuilder.exec(this.path, item)) {\n            return false;\n        }\n        if (idx > this.model.length) {\n            return false;\n        }\n        if (idx <= this.model.length) {\n            this.model[idx] = item;\n        }\n        return this;\n    }\n\n    /**\n     * @param {any} item\n     * @returns {Set} reference to self\n     */\n    addItem(item) {\n        this.setItemAt(this.model.length, item);\n        return this;\n    }\n\n    /**\n     * @returns {any} item removed from start of list\n     */\n    shift() {\n        return Reflect.apply(Array.prototype.shift, this.model, []);\n    };\n\n    /**\n     * @param {any} items to be added\n     * @returns {Set} reference to self\n     */\n    unshift(...items) {\n        Reflect.apply(Array.prototype.unshift, this.model, arguments);\n        return this;\n    }\n\n    /**\n     * @returns {any} items removed from end of list\n     */\n    pop() {\n        const v = this.model[this.model.length - 1];\n        delete this.model[this.model.length - 1];\n        return v\n    }\n\n    /**\n     * @param {any} items to be added at end of list\n     * @returns {Set} reference to self\n     */\n    push(...items) {\n        items.forEach(item => {\n            return this.addItem(item);\n        });\n        this.observerBuilder.next(this.path, this);\n        return this;\n    }\n\n    /**\n     * resets list to empty array\n     * @returns reference to self\n     */\n    reset() {\n        _object.set(this, new Proxy([], this.handler));\n        return this;\n    }\n\n    /**\n     * @param {function} func - sorting function\n     * @returns {Set} reference to self\n     */\n    sort(func) {\n        this.model.sort(func);\n        return this;\n    }\n\n    /**\n     * @returns {number} number of elements in list\n     */\n    get length() {\n        return this.model.length || 0;\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/set.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 208,
    "kind": "variable",
    "name": "_observerDelegates",
    "memberof": "src/classes/set.js",
    "static": true,
    "longname": "src/classes/set.js~_observerDelegates",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/set.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 209,
    "kind": "class",
    "name": "Set",
    "memberof": "src/classes/set.js",
    "static": true,
    "longname": "src/classes/set.js~Set",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/set.js",
    "importStyle": "{Set}",
    "description": "",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Set"
      }
    ],
    "interface": false,
    "extends": [
      "src/classes/model.js~Model"
    ]
  },
  {
    "__docId__": 210,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "_type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "items",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 211,
    "kind": "get",
    "name": "model",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#model",
    "access": "public",
    "description": "getter for object model",
    "lineNumber": 75,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 212,
    "kind": "set",
    "name": "model",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#model",
    "access": "public",
    "description": "setter for object model",
    "lineNumber": 83,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 213,
    "kind": "get",
    "name": "handler",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#handler",
    "access": "public",
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "type": {
      "types": [
        "{\"get\": *, \"set\": *, \"deleteProperty\": *}"
      ]
    }
  },
  {
    "__docId__": 214,
    "kind": "method",
    "name": "getItemAt",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#getItemAt",
    "access": "public",
    "description": "",
    "lineNumber": 203,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any} element at index if found"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "idx",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": "element at index if found"
    }
  },
  {
    "__docId__": 215,
    "kind": "method",
    "name": "setItemAt",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#setItemAt",
    "access": "public",
    "description": "",
    "lineNumber": 212,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Set} reference to self"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "idx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": "reference to self"
    }
  },
  {
    "__docId__": 216,
    "kind": "method",
    "name": "removeItemAt",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#removeItemAt",
    "access": "public",
    "description": "",
    "lineNumber": 222,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Set}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "idx",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 217,
    "kind": "method",
    "name": "replaceAll",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#replaceAll",
    "access": "public",
    "description": "",
    "lineNumber": 231,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Set} reference to self"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": "reference to self"
    }
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "replaceItemAt",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#replaceItemAt",
    "access": "public",
    "description": "",
    "lineNumber": 241,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Set} reference to self"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "idx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": "reference to self"
    }
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "addItem",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#addItem",
    "access": "public",
    "description": "",
    "lineNumber": 258,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Set} reference to self"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": "reference to self"
    }
  },
  {
    "__docId__": 221,
    "kind": "method",
    "name": "shift",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#shift",
    "access": "public",
    "description": "",
    "lineNumber": 266,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any} item removed from start of list"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": "item removed from start of list"
    },
    "params": []
  },
  {
    "__docId__": 222,
    "kind": "method",
    "name": "unshift",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#unshift",
    "access": "public",
    "description": "",
    "lineNumber": 274,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Set} reference to self"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "items",
        "description": "to be added"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": "reference to self"
    }
  },
  {
    "__docId__": 223,
    "kind": "method",
    "name": "pop",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#pop",
    "access": "public",
    "description": "",
    "lineNumber": 282,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any} items removed from end of list"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": "items removed from end of list"
    },
    "params": []
  },
  {
    "__docId__": 224,
    "kind": "method",
    "name": "push",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#push",
    "access": "public",
    "description": "",
    "lineNumber": 292,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Set} reference to self"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "items",
        "description": "to be added at end of list"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": "reference to self"
    }
  },
  {
    "__docId__": 225,
    "kind": "method",
    "name": "reset",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#reset",
    "access": "public",
    "description": "resets list to empty array",
    "lineNumber": 304,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "reference to self"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "reference to self"
    },
    "params": []
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "sort",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#sort",
    "access": "public",
    "description": "",
    "lineNumber": 313,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Set} reference to self"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": "sorting function"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": "reference to self"
    }
  },
  {
    "__docId__": 227,
    "kind": "get",
    "name": "length",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#length",
    "access": "public",
    "description": "",
    "lineNumber": 321,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} number of elements in list"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "number of elements in list"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 228,
    "kind": "file",
    "name": "src/classes/utils.js",
    "content": "import {_exists} from \"./_references\";\n\nconst _remapRx = /(.*)\\d\\.polymorphic+(.*)/;\nexport const remapPolypath = (path) => {\n    return ((path) => {\n        let matched = false;\n        path = path.replace(_remapRx, function (match, $1, $2) {\n            if (match) {\n                matched = true;\n            }\n            return `${$1}*.polymorphic${$2}`;\n        });\n        if (matched) {\n            path = remapPolypath(path);\n        }\n        return path;\n    })(path);\n};\n\n/**\n * @param {Object} itm\n * @returns {String|Boolean}\n */\nexport const ensureKindIsString = (itm) => {\n    switch (typeof itm) {\n        case \"string\":\n            return itm;\n        case \"object\":\n            if (itm.hasOwnProperty(\"type\")) {\n                return this.ensureKindIsString(itm.type);\n            }\n            break;\n    }\n    return false;\n};\n\n/**\n * Tests if required fields exist on reference object\n * sets default values upon sample object if present\n * @param {Schema} ref - reference object\n * @param {Object} obj - object for evaluation\n * @returns {true|string} - returns true or error string\n */\nexport const ensureRequiredFields = (ref, obj) => {\n    let oKeys = Object.keys(obj || {});\n    let _required = ref.requiredFields;\n    try {\n        _required.forEach((__) => {\n            let _key = _required[__];\n            let _path = ref.path.length ? ref.path : \"root element\";\n            if (0 > oKeys.indexOf(_key)) {\n                if (_exists(ref.signature[_key].default)) {\n                    obj[_key] = ref.signature[_key].default;\n                } else {\n                    throw `required property \"${_key}\" is missing for '${_path}'`;\n                }\n            }\n        });\n    } catch (e) {\n        return e;\n    }\n\n    return obj;\n};\n\n/**\n * TODO: evaluate for removal -- not showing up in search\n * @returns {array} list of types declared by object\n */\nexport const getKinds = (_s) => {\n    var _elems = Object.keys(_s).map(key => {\n        return (key === \"type\") ?\n            _s.type : _exists(_s[key].type) ?\n                _s[key].type : null;\n    });\n    _elems = _elems.filter(elem => elem !== null);\n    return _elems.length ? _elems : null;\n};\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 229,
    "kind": "variable",
    "name": "_remapRx",
    "memberof": "src/classes/utils.js",
    "static": true,
    "longname": "src/classes/utils.js~_remapRx",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "undefined"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 230,
    "kind": "function",
    "name": "remapPolypath",
    "memberof": "src/classes/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/utils.js~remapPolypath",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/utils.js",
    "importStyle": "{remapPolypath}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 231,
    "kind": "function",
    "name": "ensureKindIsString",
    "memberof": "src/classes/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/utils.js~ensureKindIsString",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/utils.js",
    "importStyle": "{ensureKindIsString}",
    "description": "",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String|Boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "itm",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String",
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 232,
    "kind": "function",
    "name": "ensureRequiredFields",
    "memberof": "src/classes/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/utils.js~ensureRequiredFields",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/utils.js",
    "importStyle": "{ensureRequiredFields}",
    "description": "Tests if required fields exist on reference object\nsets default values upon sample object if present",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{true|string} - returns true or error string"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Schema"
        ],
        "spread": false,
        "optional": false,
        "name": "ref",
        "description": "reference object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "object for evaluation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "true",
        "string"
      ],
      "spread": false,
      "description": "returns true or error string"
    }
  },
  {
    "__docId__": 233,
    "kind": "function",
    "name": "getKinds",
    "memberof": "src/classes/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/utils.js~getKinds",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/utils.js",
    "importStyle": "{getKinds}",
    "description": "TODO: evaluate for removal -- not showing up in search",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array} list of types declared by object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "list of types declared by object"
    },
    "params": [
      {
        "name": "_s",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 234,
    "kind": "file",
    "name": "src/index.js",
    "content": "/////////////////////////////////////////////////\n// JSD\n// (c)2015-2017 Van Schroeder <van@webfreshener.com>\n/////////////////////////////////////////////////\n//== Polyfills Object.assign\nif (typeof Object.assign != \"function\") {\n    Object.assign = function (target) {\n        if (target == null) {\n            throw new TypeError(\"Cannot convert undefined or null to object\");\n        }\n        target = Object(target);\n        let index = 1;\n        while (index < arguments.length) {\n            let source = arguments[index];\n            if (source !== null) {\n                for (let key in source) {\n                    if (Object.prototype.hasOwnProperty.call(source, key)) {\n                        target[key] = source[key];\n                    }\n                }\n            }\n            index = index + 1;\n        }\n        return target;\n    }\n}\nexport {JSD} from './classes/jsd';",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "kind": "index",
    "content": "JSD\n=============\n**JSON Schema Definition**<br/>\nSchema Based Self-Validating and Observable Data Models\n\n[![Build Status](https://travis-ci.org/Webfreshener/JSD.svg?branch=master)](https://travis-ci.org/Webfreshener/JSD)\n[![Dev Dependency Status](https://david-dm.org/webfreshener/jsd/dev-status.svg)](https://david-dm.org/webfreshener/jsd?type=dev)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/3ca79cd83489410295680ef3ee96cd01)](https://www.codacy.com/app/vanschroeder/JSD?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Webfreshener/JSD&amp;utm_campaign=Badge_Grade)\n[![NSP Status](https://nodesecurity.io/orgs/webfreshener-llc/projects/ec54a505-71a0-42de-8b84-3aba21031b01/badge)](https://nodesecurity.io/orgs/webfreshener-llc/projects/ec54a505-71a0-42de-8b84-3aba21031b01)\n\n[Online Developer Documentation](https://webfreshener.github.io/JSD/)\n\n### Purpose \n Most every developer has wished for a way to quickly and easily validate data from User Input or remote API calls and\n and to be able to easily recieve update notifications without having to manually write code to facilitaate those \n objectives it is to that end that JSD was developed, an Observable, Schema Based Data Validation Utility written for Javascript, \n but which sets forth a Specification which may be implemented in any\n\n### Table of Contents\n\n**[Installation Instructions](#installation-instructions)**\n\n**[Basic Usage](#basic-usage)**\n\n   * [Schema Basics](#schema-basics)\n    \n**[JSD Specification](#jsd-specification)**\n\n   * [Array Type](#array-type)\n   * [Boolean Type](#boolean-type)\n   * [Number Type](#number-type)\n   * [Object Type](#object-type)\n   * [String Type](#string-type)\n   \n**[Advanced Usage](#advanced-usage)**\n\n   * [Wildcard Keys](#wildcard-keys)\n   * [Wildcard Types](#wildcard-types)\n   * [Polymorphism](#polymorphism)\n   * [Regular Expressions](#regular-expressions)\n    \n        * [JSON File Example with Special Escaping](#json-file-example-with-special-escaping)\n   * [Write-Locking](#write-locking)\n\n#### Installation Instructions ####\nThere are no dependencies or prerequesites besides NPM and NodeJS\nHowever, this project is not yet published. \nYou must manually add to your package.json\n```\n...\ndependencies: {\n    ...\n    \"jsd\": \"git+https://github.com/Webfreshener/JSD\",\n    ...\n}\n...\n```\n\n#### Basic Usage ####\n\n##### Schema Basics #####\n\nA schema is simply a JSON Document that \ndescribes the attributes of a Data Model\n\nThe example below defines an Schema that expects a `name` and an `age` attribute\n\n```\nconst _schema = {\n    \"name\": {\n        \"type\": \"String\",\n        \"required\": true\n    },\n    \"age\": {\n        \"type\": \"Number\",\n        \"required\": true\n    }\n};\nconst _handlers = {\n    next: function (schema) {\n        if (typeof schema !== 'undefined') {\n            // outputs: {\"name\":\"Frank\",\"age\":23}\n            console.log(`${schema}`);\n        }\n    },\n    error: function (e) {\n        // error: 'age' expected number, type was '<string>'\n        console.log(`error: ${e}`);\n    }\n};\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handlers);\n\n// set invalid data to the model to trigger error handler\n_jsd.document.model = {\n    \"name\": \"Frank\",\n    \"age\": \"23\"\n};\n\n// set valid data to the model to trigger next handler\n_jsd.document.model = {\n    \"name\": \"Frank\",\n    \"age\": 23\n};\n```\n\n\n### JSD Specification ###\n\n\n#### Array Type \nAttribute Name | Data Type\n---------------|-----------\nrequired | Boolean\nelements | Object\ndefault | Array \n\n###### Schema Example\n```\n// defines an Array of Strings\n{\n    type: \"Array\",\n    \"required\": false,\n    \"elements\": {\n        \"type\": \"String\",\n        \"required\": false\n    }\n}\n\n// defines an Array of Strings and Numbers\n{\n    type: \"Array\",\n    \"required\": false,\n    \"elements\": [\n        {\n        \"type\": \"String\",\n        \"required\": false\n       },\n       {\n        \"type\": \"String\",\n        \"required\": false\n        }\n     ]\n}\n```\n###### Usage Example\n```\n// we define an array that accepts objects comprised of a name string and numeric score\nconst _schema = {\n    type: \"Array\",\n    default: [],\n    elements: [{\n        type: \"Object\",\n        elements: {\n            name: {\n                type: \"String\",\n                required: true,\n                restrict: \"^[a-zA-Z0-9\\\\-\\\\s]{1,24}$\"\n            },\n            score: {\n                type: \"Number\",\n                required: true\n            },\n        },\n    }],\n};\n\nconst _handler = {\n    next: (val) => {\n        // outputs: {\"values\":[{\"name\":\"Player 1\",\"score\":2000000},{\"name\":\"Player 2\",\"score\":1100000},{\"name\":\"Player 3\",\"score\":900000}]}\n        console.log(`${val}`);\n    },\n    error: (e) => {\n        // error: 'score' expected number, type was '<string>'s\n        console.log(`error: ${e}`);\n    }\n};\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n_jsd.document.model = [{\n    name: \"Player 1\",\n    score: 2000000,\n}, {\n    name: \"Player 2\",\n    score: 1100000\n}, {\n    // this will error because score is a string value\n    name: \"BOGUS\",\n    score: \"1100000\"\n}, {\n    name: \"Player 3\",\n    score: 900000\n}];\n```\n\n#### Boolean Type\nAttribute Name | Data Type\n---------------|-----------\nrequired | Boolean\ndefault | Boolean \n```\n// defines an Boolean Element \n{\n    \"myElement\": {\n        \"type\": \"Boolean\",\n        \"required\": false,\n        \"default\": true\n    }\n}\n```\n\n###### Usage Example\n```\nconst _schema = {\n    value: {\n        type: \"Boolean\",\n        required: false,\n        default: true,\n    }\n};\n\nconst _handler = {\n    next: (val) => {\n        // outputs: {\"value\":true}\n        // outputs: {\"value\":true}\n        // outputs: {\"value\":false}\n        console.log(`${val}`);\n    },\n    error: (e) => {\n        // error: 'value' expected boolean, type was '<string>'\n        console.log(`error: ${e}`);\n    }\n};\n\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// - this will trigger the default value\n_jsd.document.model = {};\n\n// set value to true\n_jsd.document.model = {value: true};\n\n// set value to false\n_jsd.document.model = {value: false};\n\n// triggers error due to type mismatch\n_jsd.document.model = {value: \"true\"};\n```\n\n#### Number Type\nAttribute Name | Data Type\n---------------|-----------\nrequired | Boolean\ndefault | Number \n\n```\n// defines an Number Element \n{\n    \"myElement\": {\n        \"type\": \"Number\",\n        \"required\": false,\n        \"default\": 0 \n    }\n}\n```\n\n###### Usage Example\n```\nconst _schema = {\n    value: {\n        type: \"Number\",\n        required: true,\n        // default: true,\n    }\n};\n\nconst _handler = {\n    next: (val) => {\n        // outputs: {\"value\":1234}\n        console.log(`${val}`);\n    },\n    error: (e) => {\n        // error: 'value' expected number, type was '<string>'\n        console.log(`error: ${e}`);\n    }\n};\n\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// this fails because the value is a string\n_jsd.document.model = {value: \"1234\"};\n\n// this will succeed\n_jsd.document.model = {value: 1234};\n```\n\n#### Object Type \nAttribute Name | Data Type\n---------------|-----------\nrequired | Boolean\nextensible | Boolean\nelements | Object\npolymorphic | Array\ndefault | Object \n\n```\n// defines an Object Element \n{\n    \"myElement\": {\n        \"type\": \"Object\",\n        \"required\": false,\n        \"default\": {\n         },\n         elements: {\n            \"name\": {\n                \"type\": \"String\"\n                \"required\": true\n            },\n            \"active\": {\n                \"type\": \"Boolean\"\n                \"required\": false,\n                \"default\": true\n            }\n         }\n    }\n}\n```\n\n###### Usage Example\n```\n// we define an element named `value` that requires a name and optional active attributes \nconst _schema = {\n    value: {\n        type: \"Object\",\n        required: false,\n        elements: {\n            name: {\n                type: \"String\",\n                required: true\n            },\n            active: {\n                type: \"Boolean\",\n                required: false,\n                default: false\n            }\n        }\n    }\n};\n\nconst _handler = {\n    next: (val) => {\n        // outputs: {\"value\":{\"name\":\"Alice\",\"active\":true}}\n        // outputs: {\"value\":{\"name\":\"Bob\",\"active\":false}}\n        console.log(`${val}`);\n    },\n    error: (e) => {\n        // error: 'value.active' expected boolean, type was '<number>'\n        console.log(`error: ${e}`);\n    }\n};\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// this will error since `active` is a number\n_jsd.document.model = {\n    value: {\n        name: \"Alice\",\n        active: 1,\n    }\n};\n\n// this will pass\n_jsd.document.model = {\n    value: {\n        name: \"Alice\",\n        active: true\n    }\n};\n\n// this will also pass since `active` is optional\n_jsd.document.model = {\n    value: {\n        name: \"Bob\",\n    }\n};\n```\n\n#### String Type \nAttribute Name | Data Type\n---------------|-----------\nrequired | Boolean\nrestrict | RegExp\ndefault | String\n\n``` \n// defines a String Element \n{\n    \"myElement\": {\n        \"type\": \"String\"\n        \"required\": true\n    }\n}\n```\n\n###### Usage Example\n```\nconst _schema = {\n    value: {\n        type: \"String\",\n        required: true,\n        restrict: \"^[a-zA-Z0-9_\\\\s\\\\-]+$\"\n    }\n};\n\nconst _handler = {\n    next: (val) => {\n        // outputs: {\"value\":\"false\"}\n        console.log(`${val}`);\n    },\n    error: (e) => {\n        // error: 'value' expected string, type was '<boolean>'\n        console.log(`error: ${e}`);\n    }\n};\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// this fails because type is boolean\n_jsd.document.model = {value: true};\n\n// this will succeeed\n_jsd.document.model = {value: \"false\"};\n```\n\n### Advanced Usage \n\n#### Wildcard Keys\nWildcards keys allow for cases where you might not know or care about the actual key values.\nThis is useful in cases where you might have severage elements of the ame data type and \nformat that you wish to describe in a single instance\n\n###### Schema Example\n```\n// declares any amount of Alphanumeric String values\n{\n    \"*\": {\n        \"type\": \"String\",\n        \"restrict\": \"^[a-zA-Z0-9\\-]{1,10}$\"\n    }\n}\n\n// declares any amount of extensible Object values with name and age attributes \n{\n    \"*\": {\n        type: \"Object\",\n        \"extensible\": true\n        \"elements\": {\n            \"name\": {\n                \"type\": \"String\",\n                \"required\": true,\n                \"restrict\": \"^[a-zA-Z0-9\\-]{1,10}$\"\n            },\n            {\n            \"age\": {\n                \"type\": \"Number\",\n                \"required\":true \n            }\n        },\n    }\n}\n```\n###### Usage Example\n```\n// creates a schema that allows any key assignent, but value must be object\nconst _schema = {\n    \"*\": {\n        type: \"Object\",\n        extensible: true,\n        elements: {\n            name: {\n                type: \"String\",\n                required: true,\n                restrict: \"^[a-zA-Z0-9_\\\\s\\\\-]{9,}$\"\n            },\n            score: {\n                type: \"Number\",\n                required: true,\n            }\n        },\n    }\n};\n\nconst _handler = {\n    next: (val) => {\n        // {\"1\":{\"name\":\"Big Daddy\",\"score\":2000000}, ...}\n        console.log(`${val}`); \n    },\n    error: (e) => {\n        // error: 1 expected value of type 'Object'. Type was '<number>'\n        console.log(`error: ${e}`);\n    }\n};\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// this will fail because value is number, not an object\n_jsd.document.model = {\n    1: 900000,\n};\n\n// this succeeds\n_jsd.document.model = {\n    1: {\n        name: \"Big Daddy\",\n        score: 2000000\n    },\n    2: {\n        name: \"HeavyMetalPrincess\",\n        score: 1100000\n    },\n    3: {\n        name: \"Munga-Munga\",\n        score: 900000\n    },\n};\n```\n#### Wildcard Types \nIn some cases, you might know the key of an attribute, \nbut the type might not be determined. In these cases,\nwhere you want to restrict an object to known keys but \nallow for various value assignment, you can use \nwildcard types\n\n###### Schema Example\n```\n// declares element myKey which can be any type, but must be present \n{\n    \"myKey\": {\n        \"type\": \"*\",\n        \"required\": true\n    }\n}\n\n// declares an Object that allows for special user data \n{\n    \"id\": {\n        \"type\": \"Number\",\n        \"required\": true,\n    },\n    \"name\": {\n        \"type\": \"String\",\n        \"required\": true,\n        \"restrict\": \"^[a-zA-Z0-9\\-]{1,10}$\"\n    },\n    {\n    \"dataField1\": {\n        \"type\": \"*\",\n        \"required\": false \n    },\n    \"dataField2\": {\n        \"type\": \"*\",\n        \"required\": false \n    }\n}\n```\n###### Usage Example\n```\n// creates a schema that lets key `value` be set to any type \nconst _schema = {\n    value: {\n        type: \"*\",\n    }\n};\n\nconst _handler = {\n    next: (val) => {\n        // outputs: {\"value\":900000}\n        // outputs: {\"value\":\"A string\"}\n        // outputs: {\"value\":false}\n        console.log(`${val}`); \n    },\n    error: (e) => {\n        // error: element 'bogus' is not a valid element\n        console.log(`error: ${e}`);\n    }\n};\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// any model with the key named `value` is ok\n_jsd.document.model = {\n    value: 900000,\n};\n\n// any model with the key named `value` is ok\n_jsd.document.model = {\n    value: \"A string\",\n};\n\n// any model with the key named `value` is ok\n_jsd.document.model = {\n    value: false,\n};\n\n// this will fail because key `bogus` is not allowed\n_jsd.document.model = {\n    bogus: \"false\",\n}\n```\n\n#### Polymorphism\nIn cases where you want to keep the data model tightly defined but must allow for certain values to conform to more \nthan one data type, you can use polymorhism\n\n###### Schema Example\n```\n// declares element `polyValue` which can be a String or an Object\n{\n   \"polyValue\": {\n     \"required\": true,\n     \"polymorphic\": [\n       {\n         \"type\": \"String\",\n         \"restrict\": \"^[a-zA-Z-0-9_]+$\"\n       },\n       {\n         \"type\": \"Object\",\n         \"elements\": {\n           \"name\": {\n             \"type\": \"String\",\n             \"required\": true,\n             \"restrict\": \"^[a-zA-Z-0-9_]{1,24}+$\"\n           },\n           \"details\": {\n             \"type\": \"String\",\n             \"required\": false,\n             \"restrict\": \"^[a-zA-Z-0-9_]{0,256}+$\"\n           }, \n         }\n       }\n     ]\n   } \n}\n```\n###### Usage Example\n```\nconst _schema = {\n    polyValue: {\n        required: true,\n        default: \"DEFAULT VALUE\",\n        polymorphic: [\n            // this schema will accept a string value\n            {\n                type: \"String\",\n                restrict: \"^[a-zA-Z0-9_\\\\s]+$\",\n\n            },\n            // ... or and object with `name` and `description` elements\n            {\n                type: \"Object\",\n                elements: {\n                    name: {\n                        type: \"String\",\n                        required: true,\n                        restrict: \"^[a-zA-Z0-9_\\\\s]{1,24}$\"\n                    },\n                    description: {\n                        type: \"String\",\n                        required: true,\n                        restrict: \"^[a-zA-Z0-9_\\\\s]{1,140}$\"\n                    },\n                },\n            },\n            // ... or a wildcard key & numeric value pair\n            {\n                type: \"Object\",\n                elements: {\n                    \"*\": {\n                        type: \"Number\"\n                    },\n                },\n            }]\n    }\n};\n\nlet _handler = {\n    next: (val) => {\n        // {\"polyValue\":\"DEFAULT VALUE\"}\n        // {\"polyValue\":\"HeavyMetalPrincess\"}\n        // {\"polyValue\":{\"name\":\"HeavyMetalPrincess\",\"description\":\"cupcakes\"}}\n        // {\"polyValue\":{\"HeavyMetalPrincess\":10001234}}\n        console.log(`${val}`);\n    },\n    error: (e) => {\n        // error: 'polyValue.polymorphic.2.*' expected number, type was '<string>'\n        console.log(`error: ${e}`);\n    }\n\n};\n\nconst _jsd = new JSD(_schema, {debug: true});\n_jsd.document.subscribe(_handler);\n\n// will set default value\n_jsd.document.model = {};\n\n\n// can be a string value\n_jsd.document.model = {\n    \"polyValue\": \"HeavyMetalPrincess\",\n}\n\n// can be an object with `name` and `description` elements\n_jsd.document.model = {\n    \"polyValue\": {\n        \"name\": \"HeavyMetalPrincess\",\n        \"description\": \"cupcakes\",\n    }\n};\n\n// or a wildcard key & numeric value pair...\n\n// -- this will error because the value is a string, not numeric\n_jsd.document.model = {\n    \"polyValue\": {\n        HeavyMetalPrincess: \"10001234\",\n    },\n};\n\n// -- this has a numeric value and will succeed\n_jsd.document.model = {\n    \"polyValue\": {\n        HeavyMetalPrincess: 10001234,\n    },\n};\n});\n```\n\n#### Regular Expressions\nJSD allows the use of Regular Expressions to restrict String input\nThere are caveats to it's use due to the nature of RegExp syntax vs  JSON\ncharacter encoding limitations\n\n###### JS and TS file Example\n```\n// in code declaring a RegExp in JS or TS is no big deal \nconst schema = {\n   stringValue: {\n     required: true,\n     type: \"String\",\n     restrict: \"^[a-zA-Z0-9_\\\\-\\\\s]+$\"\n   }\n};\n```\n\n\n###### JSON File Example with Special Escaping\n```\n{\n    \"stringValue\": {\n        \"required\": true,\n        \"type\": \"String\",\n        \"restrict\": \"^[a-zA-Z0-9_\\\\\\\\-\\\\\\\\s]+$\"\n    }\n}\n```\n\n#### Write-Locking \nIn some cases you might want to define Read-Only Data Structures, such as Config Files\nJSD allows you to set data to the Schema and then Write-Lock it via Schema Params or Programmatically\n\n###### Schema Example\n```\n// a schema designating itself as write-locked with the writeLock attribute\n// once data is set to this schema, it will be read-only\n{\n  \"writeLock\": true,\n  \"elements\": {\n    \"*\"{\n      \"type\": \"*\"\n    }\n  }\n}\n```\n###### Usage Example\n```\n// creates a schema with writeLock attribute set to true\nvar _schema = {\n    writeLock: true,\n    elements: {\n        \"*\": {\n            type: \"*\",\n        }\n    }\n};\n\nvar _handler = {\n    next: function(val) {\n        // {\"valueA\":1,\"valueB\":2,\"valueC\":3}\n        // {\"valueA\":1,\"valueB\":2,\"valueC\":3}\n        console.log(`${val}`);\n    },\n    complete: function(model) {\n        // complete: schema is now locked.\n        console.log('complete: schema is now locked.');\n    }\n};\n\nvar _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// will lock schema after write\n_jsd.document.model = {\n    valueA: 1,\n    valueB: 2,\n    valueC: 3,\n};\n\n// subsequent writes will silently fail\n_jsd.document.model = {\n    valueD: 4,\n    valueE: 5,\n    valueF: 6,\n};\n\n\n// Additionally, the end-user can set this programatically\n\n// creates a schema with writeLock attribute set to true\nvar _schema = {\n    \"*\": {\n        type: \"*\",\n    }\n};\n\nvar _handler = {\n    next: function(val) {\n        // {\"valueA\":1,\"valueB\":2,\"valueC\":3}\n        // {\"valueA\":1,\"valueB\":2,\"valueC\":3}\n        console.log(`${val}`);\n    },\n    complete: function(model) {\n        // complete: schema is now locked.\n        console.log('complete: schema is now locked.');\n    }\n};\n\nvar _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// will lock schema after write\n_jsd.document.model = {\n    valueA: 1,\n    valueB: 2,\n    valueC: 3,\n};\n\n// Invoke the lock feature on the document\n_jsd.document.lock();\n\n// subsequent writes will silently fail\n_jsd.document.model = {\n    valueD: 4,\n    valueE: 5,\n    valueF: 6,\n};\n```",
    "longname": "/Users/van/IdeaProjects/JSD/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"author\": \"Van Schroeder <van@webfreshener.com>\",\n  \"name\": \"jsd\",\n  \"description\": \"Schema Generation and Data Validation with object virtualization\",\n  \"keywords\": [\n    \"schema\",\n    \"validation\",\n    \"validatable\",\n    \"observable\",\n    \"proxy\",\n    \"model\",\n    \"json\",\n    \"data\",\n    \"orm\",\n    \"object\",\n    \"hash\",\n    \"properties\",\n    \"DOM\",\n    \"object model\"\n  ],\n  \"version\": \"1.0.0-beta.2\",\n  \"main\": \"./index.js\",\n  \"licenses\": [\n    {\n      \"type\": \"MIT\",\n      \"url\": \"http://www.opensource.org/licenses/MIT\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/Webfreshener/JSD.git\"\n  },\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"babel\": \"^6.5.2\",\n    \"babel-core\": \"^6.18.2\",\n    \"babel-loader\": \"^7.1.3\",\n    \"babel-plugin-transform-remove-strict-mode\": \"0.0.2\",\n    \"babel-preset-env\": \"^1.6.1\",\n    \"babel-register\": \"^6.18.0\",\n    \"chai\": \"^4.1.2\",\n    \"deep-equal\": \"^1.0.1\",\n    \"es6-weak-map\": \"^2.0.1\",\n    \"esdoc\": \"^1.0.4\",\n    \"esdoc-accessor-plugin\": \"^1.0.0\",\n    \"esdoc-exclude-source-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"jest\": \"^22.1.4\",\n    \"jest-babel-istanbul\": \"^0.1.0\",\n    \"jest-each\": \"^0.3.1\",\n    \"jsd-utils\": \"git+https://github.com/webfreshener/jsd-utils.git\",\n    \"jshint\": \"^2.9.4\",\n    \"mocha\": \"^5.0.0\",\n    \"mocha-lcov-reporter\": \"^1.3.0\",\n    \"rxjs\": \"^5.5.6\",\n    \"weakmap\": \"0.0.6\",\n    \"webpack\": \"^4.0.1\",\n    \"webpack-cli\": \"^2.0.10\"\n  },\n  \"homepage\": \"https://webfreshener.github.io/JSD/\",\n  \"scripts\": {\n    \"test\": \"jest\",\n    \"build-test\": \"webpack --mode development; npm test\",\n    \"build\": \"webpack --mode production\",\n    \"version\": \"npm run build\",\n    \"docs\": \"./node_modules/.bin/esdoc\"\n  },\n  \"jest\": {\n    \"coverageCollector\": \"jest-babel-istanbul\"\n  }\n}\n",
    "longname": "/Users/van/IdeaProjects/JSD/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]