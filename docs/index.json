[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/classes/_ajvWrapper.js",
    "content": "/**\n * @private\n */\nimport {_ajvRef} from \"./_references\";\nimport {JSD} from \"./jsd\";\nimport Ajv from \"ajv\";\n\n/**\n * Wrapper for Ajv JSON-Schema Validator\n * @private\n */\nexport class AjvWrapper {\n    /**\n     * @constructor\n     * @param jsd\n     * @param schema\n     * @param ajvOptions\n     */\n    constructor(jsd, schema, ajvOptions = {}) {\n        // ensures that we are given something that represents a JSD object\n        if ((!jsd) || !(jsd instanceof JSD)) {\n            throw \"JSD is required at arguments[0]\";\n        }\n\n        // defines getter for parent JSD reference\n        Object.defineProperty(this, \"$jsd\", {\n            get: () => jsd,\n            enumerable: false,\n        });\n\n        // applies user specified options over our default Ajv Options\n        const opts = Object.assign(_ajvOptions, ajvOptions);\n\n        // makes user defined options object accessible for evaluation\n        Object.defineProperty(this, \"options\", {\n           get: () => opts,\n           enumerable: true,\n        });\n\n        const _ajv = new Ajv(opts);\n        // initializes Ajv instance for this Doc and stores it to WeakMap\n        _ajvRef.set(this, _ajv);\n\n        // tests for schema and sets provided schema as the \"root\" schema\n        if (schema !== void(0)) {\n            _ajv.addSchema(schema, \"root\");\n        }\n\n        // accept no further modifications to this object\n        Object.seal(this);\n    }\n\n    /**\n     * helper method to derive path for given model\n     * todo: review for removal\n     * @param model\n     * @return {string}\n     */\n    static resolvePath(model) {\n        return \"not yet implemented\";\n    }\n\n    /**\n     * getter for captive Ajv validator\n     * -- use this for Ajv API Methods\n     * @returns {ajv}\n     */\n    get $ajv() {\n        return _ajvRef.get(this);\n    }\n\n    /**\n     * Executes validator at Schema $ref `path` against `value`\n     * @param path\n     * @param value\n     */\n    exec(path, value) {\n        return this.$ajv.validate(path, value);\n    }\n}\n\n/**\n * AJV Options Config in it's entirely for reference\n * only JSD specific option changes are enabled\n * @type {*}\n * @private\n */\nconst _ajvOptions = {\n    // // validation and reporting options:\n    $data:            true,\n    // allErrors:        true,\n    // verbose:          true,\n    // $comment:         false, // NEW in Ajv version 6.0\n    jsonPointers:     true,\n    // uniqueItems:      true,\n    // unicode:          true,\n    // format:           'fast',\n    // formats:          {},\n    // unknownFormats:   true,\n    // schemas:          {},\n    // logger:           undefined,\n    // referenced schema options:\n    // schemaId:         '$id',\n    // missingRefs:      true,\n    // extendRefs:       'fail', // default 'ignore'\n    // loadSchema:       undefined, // function(uri: string): Promise {}\n    // options to modify validated data:\n    // removeAdditional: false,\n    // useDefaults:      true,\n    // coerceTypes:      false,\n    // asynchronous validation options:\n    // transpile:        undefined, // requires ajv-async package\n    // advanced options:\n    // meta:             true,\n    // validateSchema:   true,\n    // addUsedSchema:    true,\n    // inlineRefs:       true,\n    // passContext:      false,\n    // loopRequired:     Infinity,\n    // ownProperties:    false,\n    // multipleOfPrecision: false,\n    // errorDataPath:    'object', // deprecated\n    // messages:         true,\n    // sourceCode:       false,\n    // processCode:      undefined, // function (str: string): string {}\n    // cache:            new Cache,\n    // serialize:        undefined\n};\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/_ajvWrapper.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "AjvWrapper",
    "memberof": "src/classes/_ajvWrapper.js",
    "static": true,
    "longname": "src/classes/_ajvWrapper.js~AjvWrapper",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_ajvWrapper.js",
    "importStyle": "{AjvWrapper}",
    "description": "Wrapper for Ajv JSON-Schema Validator",
    "lineNumber": 12,
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_ajvWrapper.js~AjvWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_ajvWrapper.js~AjvWrapper#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "jsd",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "schema",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "ajvOptions",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 51,
    "kind": "method",
    "name": "resolvePath",
    "memberof": "src/classes/_ajvWrapper.js~AjvWrapper",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/_ajvWrapper.js~AjvWrapper.resolvePath",
    "access": "public",
    "description": "helper method to derive path for given model\ntodo: review for removal",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 52,
    "kind": "get",
    "name": "$ajv",
    "memberof": "src/classes/_ajvWrapper.js~AjvWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_ajvWrapper.js~AjvWrapper#$ajv",
    "access": "public",
    "description": "getter for captive Ajv validator\n-- use this for Ajv API Methods",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ajv}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ajv"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "method",
    "name": "exec",
    "memberof": "src/classes/_ajvWrapper.js~AjvWrapper",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_ajvWrapper.js~AjvWrapper#exec",
    "access": "public",
    "description": "Executes validator at Schema $ref `path` against `value`",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "_ajvOptions",
    "memberof": "src/classes/_ajvWrapper.js",
    "static": true,
    "longname": "src/classes/_ajvWrapper.js~_ajvOptions",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/_ajvWrapper.js",
    "importStyle": null,
    "description": "AJV Options Config in it's entirely for reference\nonly JSD specific option changes are enabled",
    "lineNumber": 88,
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 55,
    "kind": "file",
    "name": "src/classes/_metaData.js",
    "content": "import {wf, _mdRef} from \"./_references\";\nconst _mData = new WeakMap();\n/**\n * @private\n */\nexport class MetaData {\n    /**\n     * @constructor\n     * @param {Schema|Set} _oRef -- Object Reference to item being described\n     * @param {object} _data -- Initial Data {parent:Schema|Set}\n     */\n    constructor(_oRef, _data = {}) {\n        let _cName = wf.Fun.getConstructorName(_oRef);\n\n        if (this._createID == null) {\n            let _id = 0;\n            MetaData.prototype._createID = function () {\n                if (this.__objID == null) {\n                    _id = _id + 1;\n                    this.__objID = `${_cName}${_id}`;\n                }\n                return this.__objID;\n            };\n        }\n\n        _data = Object.assign({}, _data, {\n            _id: this._createID(),\n            _className: _cName,\n            _created: Date.now()\n        });\n\n        _mData.set(this, _data);\n        _mdRef.set(this, this);\n    }\n\n    /**\n     * @param {string} key\n     */\n    get(key) {\n        let __ = _mData.get(this);\n        return __.hasOwnProperty(key) ? __[key] : null;\n    }\n\n    /**\n     * not implemented\n     */\n    set() {\n        return this;\n    }\n\n    /**\n     * UUID of element\n     * @returns {string} Unique ObjectID\n     */\n    get objectID() {\n        return this.get(\"_id\");\n    }\n\n    /**\n     * Root Schema element\n     * @returns {Schema|Set}\n     */\n    get root() {\n        return this.get(\"_root\");\n    }\n\n    /**\n     * Path to element\n     * @returns {string}\n     */\n    get path() {\n        return this.get(\"_path\");\n    }\n\n    /**\n     * Owner JSD document\n     * @returns {JSD}\n     */\n    get jsd() {\n        return this.get(\"_jsd\");\n    }\n\n    /**\n     * Getter for parent model\n     * @returns {string | null}\n     */\n    get parent() {\n        return this.get(\"_parent\");\n    }\n\n    /**\n     * Provides representation of Model as JSON string\n     * @return {string}\n     */\n    toString() {\n        return JSON.stringify(_mData.get(this));\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/_metaData.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "name": "_mData",
    "memberof": "src/classes/_metaData.js",
    "static": true,
    "longname": "src/classes/_metaData.js~_mData",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/_metaData.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 57,
    "kind": "class",
    "name": "MetaData",
    "memberof": "src/classes/_metaData.js",
    "static": true,
    "longname": "src/classes/_metaData.js~MetaData",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_metaData.js",
    "importStyle": "{MetaData}",
    "description": "",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 58,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Schema",
          "Set"
        ],
        "spread": false,
        "optional": false,
        "name": "_oRef",
        "description": "- Object Reference to item being described"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "_data",
        "description": "- Initial Data {parent:Schema|Set}"
      }
    ]
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "__objID",
    "memberof": "src/classes/_metaData.js~MetaData",
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#__objID",
    "access": "private",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "get",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#get",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "set",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#set",
    "access": "public",
    "description": "not implemented",
    "lineNumber": 47,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "get",
    "name": "objectID",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#objectID",
    "access": "public",
    "description": "UUID of element",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} Unique ObjectID"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Unique ObjectID"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "get",
    "name": "root",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#root",
    "access": "public",
    "description": "Root Schema element",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Schema|Set}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Schema",
        "Set"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "get",
    "name": "path",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#path",
    "access": "public",
    "description": "Path to element",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "get",
    "name": "jsd",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#jsd",
    "access": "public",
    "description": "Owner JSD document",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{JSD}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "JSD"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "get",
    "name": "parent",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#parent",
    "access": "public",
    "description": "Getter for parent model",
    "lineNumber": 87,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string | null}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string ",
        " null"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "toString",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#toString",
    "access": "public",
    "description": "Provides representation of Model as JSON string",
    "lineNumber": 95,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "src/classes/_observerBuilder.js",
    "content": "import {_exists, _observers} from \"./_references\";\nimport {BehaviorSubject} from \"rxjs/Rx\";\n\nexport class ObserverBuilder {\n    /**\n     * @constructor\n     */\n    constructor() {\n        _observers.set(this, {});\n    }\n\n    /**\n     * @returns {string[]} of validation paths\n     */\n    list() {\n        let _v = _observers.get(this);\n        return Object.keys(_v);\n    }\n\n    /**\n     * @param path {string}\n     * @returns {Observer} Observer at path reference\n     */\n    get(path) {\n        let _o = _observers.get(this);\n        return _exists(_o[path]) ? _o[path] : null;\n    }\n\n    /**\n     *\n     * @param forPath {string}\n     * @param oRef {Model|Schema|Set}\n     */\n    create(forPath, oRef) {\n        let _o = _observers.get(this);\n        _o[forPath] = {\n            onNext: new BehaviorSubject(null).skip(1),\n            onError: new BehaviorSubject(null).skip(1),\n            onComplete: new BehaviorSubject(null).skip(1),\n        }\n    }\n\n    /**\n     * calls next on Next Subject\n     * @param path {string}\n     * @param value {*}\n     */\n    next(path, value) {\n        let _o = this.get(path);\n        if (_o) {\n            _o.onNext.next(value);\n        }\n    }\n\n    /**\n     * calls next on Complete Subject\n     * @param path {string}\n     * @param value {*}\n     */\n    complete(path, value) {\n        let _o = this.get(path);\n        if (_o) {\n            _o.onComplete.next(value);\n        }\n    }\n\n    /**\n     * calls next on Error Subject\n     * @param path {string}\n     * @param value {*}\n     */\n    error(path, value) {\n        let _o = this.get(path);\n        if (_o) {\n            _o.onError.next(value);\n        }\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/_observerBuilder.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "class",
    "name": "ObserverBuilder",
    "memberof": "src/classes/_observerBuilder.js",
    "static": true,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/_observerBuilder.js",
    "importStyle": "{ObserverBuilder}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 70,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "list",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#list",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string[]} of validation paths"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": "of validation paths"
    },
    "params": []
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "get",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#get",
    "access": "public",
    "description": "",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Observer} Observer at path reference"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Observer"
      ],
      "spread": false,
      "description": "Observer at path reference"
    }
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "create",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#create",
    "access": "public",
    "description": "",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "forPath",
        "description": "{string}"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "oRef",
        "description": "{Model|Schema|Set}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "next",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#next",
    "access": "public",
    "description": "calls next on Next Subject",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "{string}"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "{*}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "complete",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#complete",
    "access": "public",
    "description": "calls next on Complete Subject",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "{string}"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "{*}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "error",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#error",
    "access": "public",
    "description": "calls next on Error Subject",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "{string}"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "{*}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 77,
    "kind": "file",
    "name": "src/classes/_references.js",
    "content": "/**\n * @private Weakmap Refs\n */\nimport {exists, Fun, Obj, Str} from \"jsd-utils\";\nexport const _exists = exists;\nexport const wf = {\n    Fun:Fun,\n    Obj: Obj,\n    Str: Str\n};\n\n/**\n * Holder for Schema and Set instance references\n *\n * @type {WeakMap}\n * @private\n */\nexport const _object = new WeakMap();\n/**\n * Holder for MetaData references\n * @type {WeakMap}\n * @private\n */\nexport const _mdRef = new WeakMap();\n/**\n * Holder for AjvWrapper references\n * @type {WeakMap<Object, ajv>}\n * @private\n */\nexport const _ajvRef = new WeakMap();\n/**\n * Holder for models in transition\n *\n * @type {WeakMap}\n * @private\n */\nexport const _dirtyModels = new WeakMap();\n/**\n * Holder for Schema Validators\n * @type {WeakMap}\n * @private\n */\nexport const _validators = new WeakMap();\n/**\n * Holder for Schema options refeerences\n *\n * @type {WeakMap}\n * @private\n */\nexport const _schemaOptions = new WeakMap();\n/**\n * Holder for Schema Helpers references\n *\n * @type {WeakMap}\n * @private\n */\nexport const _schemaHelpers = new WeakMap();\n/**\n * Holder for RXJS Observer references\n * @type {WeakMap}\n * @private\n */\nexport const _observers = new WeakMap();\n/**\n * Holder for Observer Builders\n * @type {WeakMap}\n * @private\n */\nexport const _oBuilders = new WeakMap();\n/**\n * Holder for JSON-Schemas\n * @type {WeakMap}\n * @private\n */\nexport const _schemaSignatures = new WeakMap();\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/_references.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 78,
    "kind": "variable",
    "name": "_exists",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_exists",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_exists}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "variable",
    "name": "wf",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~wf",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{wf}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "{\"Fun\": *, \"Obj\": *, \"Str\": *}"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "name": "_object",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_object",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_object}",
    "description": "Holder for Schema and Set instance references",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 81,
    "kind": "variable",
    "name": "_mdRef",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_mdRef",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_mdRef}",
    "description": "Holder for MetaData references",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "name": "_ajvRef",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_ajvRef",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_ajvRef}",
    "description": "Holder for AjvWrapper references",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap<Object, ajv>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "name": "_dirtyModels",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_dirtyModels",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_dirtyModels}",
    "description": "Holder for models in transition",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 84,
    "kind": "variable",
    "name": "_validators",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_validators",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_validators}",
    "description": "Holder for Schema Validators",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 85,
    "kind": "variable",
    "name": "_schemaOptions",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_schemaOptions",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_schemaOptions}",
    "description": "Holder for Schema options refeerences",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "name": "_schemaHelpers",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_schemaHelpers",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_schemaHelpers}",
    "description": "Holder for Schema Helpers references",
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 87,
    "kind": "variable",
    "name": "_observers",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_observers",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_observers}",
    "description": "Holder for RXJS Observer references",
    "lineNumber": 63,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 88,
    "kind": "variable",
    "name": "_oBuilders",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_oBuilders",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_oBuilders}",
    "description": "Holder for Observer Builders",
    "lineNumber": 69,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 89,
    "kind": "variable",
    "name": "_schemaSignatures",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_schemaSignatures",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_schemaSignatures}",
    "description": "Holder for JSON-Schemas",
    "lineNumber": 75,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 90,
    "kind": "file",
    "name": "src/classes/_schemaHelpers.js",
    "content": "import {_exists, _mdRef} from \"./_references\";\nimport {MetaData} from \"./_metaData\";\nimport {Schema} from \"./schema\";\nimport {Set} from \"./set\";\n\n/**\n * @private\n */\nexport class SchemaHelpers {\n    /**\n     * @constructor\n     */\n    constructor(_ref) {\n        if (!_exists(_ref) || (typeof _ref) !== \"object\") {\n            throw new Error(\"arguments[0] must be an object\");\n        }\n\n        this._ref = _ref;\n        Object.seal(this);\n    }\n\n    /**\n     * Sets Object key/values upon Schema Reference\n     * @param obj\n     * @returns {*}\n     */\n    setObject(obj) {\n        if (typeof obj === \"string\") {\n            return obj;\n        }\n        // calls set with nested key value pair\n        Object.keys(obj).forEach((k) => {\n            let eMsg = this._ref.set(k, obj[k]);\n            if (typeof eMsg === \"string\") {\n                throw new Error(eMsg);\n            }\n        });\n        return this._ref;\n    }\n\n    /**\n     * Creates Child Model and set data on it\n     * @param key\n     * @param value\n     * @returns {*}\n     */\n    setChildObject(key, value) {\n        let _mdData = _mdRef.get(this._ref);\n        let _s = this.createSchemaChild(key, value, _mdData);\n        if (typeof _s === \"string\") {\n            return _s;\n        } else if (!_exists(_s) ||\n            typeof _s !== \"object\") {\n            return `'${key}' was invalid`;\n        }\n        _s.model = value;\n        return _s.model;\n    }\n\n    /**\n     * Creates Child Model\n     * @param {string} key\n     * @param {*} value\n     * @param {MetaData} metaData\n     * @returns {Model|string} - Schema, Set or error string\n     */\n    createSchemaChild(key, value, metaData) {\n        let path = !Array.isArray(this._ref.model) ?\n            `${this._ref.path}/properties/${key}` : `${this._ref.path}/items`;\n        // populates MetaData config object\n        let _d = Object.assign({\n            _path: path,\n            _parent: this._ref,\n            _root: this._ref.root,\n            _jsd: this._ref.jsd,\n        }, metaData || {});\n\n        // constructs new MetaData object with owner as reference point for chaining\n        let _md = new MetaData(this._ref, _d);\n\n        // returns new child Model\n        return new ((!Array.isArray(value)) ? Schema : Set)(_md);\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/_schemaHelpers.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 91,
    "kind": "class",
    "name": "SchemaHelpers",
    "memberof": "src/classes/_schemaHelpers.js",
    "static": true,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_schemaHelpers.js",
    "importStyle": "{SchemaHelpers}",
    "description": "",
    "lineNumber": 9,
    "interface": false
  },
  {
    "__docId__": 92,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 93,
    "kind": "member",
    "name": "_ref",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#_ref",
    "access": "private",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "setObject",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#setObject",
    "access": "public",
    "description": "Sets Object key/values upon Schema Reference",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "setChildObject",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#setChildObject",
    "access": "public",
    "description": "Creates Child Model and set data on it",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "createSchemaChild",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#createSchemaChild",
    "access": "public",
    "description": "Creates Child Model",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Model|string} - Schema, Set or error string"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "MetaData"
        ],
        "spread": false,
        "optional": false,
        "name": "metaData",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Model",
        "string"
      ],
      "spread": false,
      "description": "Schema, Set or error string"
    }
  },
  {
    "__docId__": 97,
    "kind": "file",
    "name": "src/classes/jsd.js",
    "content": "/**\n * @class JSD\n * @example const _jsd = new JSD();\n * _jsd.document = {name: \"test\"};\n * console.log(`${jsd.document.name}`);\n * // -> \"test\"\n * console.log(`${jsd.document.get(\".\"}`);\n * // -> Schema\n */\nimport {\n    _oBuilders, _validators,\n    _dirtyModels, _schemaSignatures\n} from \"./_references\";\nimport {ObserverBuilder} from \"./_observerBuilder\";\nimport {Schema} from \"./schema\";\nimport {Set} from \"./set\";\nimport {AjvWrapper} from \"./_ajvWrapper\";\nconst _documents = new WeakMap();\n\n/**\n * JSD Document Entry-point\n * @public\n */\nexport class JSD {\n    /**\n     * @constructor\n     * @param schema\n     * @param options\n     */\n    constructor(schema, options = {}) {\n        // attempts t get user passes Avj options\n        let ajvOptions = options.hasOwnProperty(\"ajvOptions\") ?\n            options[\"ajvOptions\"] : null;\n\n        // defines AjvWrapper instance for this Document and it's Schemas\n        const _ajv = new AjvWrapper(this, schema, ajvOptions);\n\n        // sets AjvWrapper instance on map for use\n        _validators.set(this, _ajv);\n\n        // throws error if error message returned\n        if (!_ajv.$ajv.validateSchema(schema, false)) {\n            throw _ajv.$ajv.errors;\n        }\n\n        Object.freeze(schema);\n        _schemaSignatures.set(this, schema);\n\n        _oBuilders.set(this, new ObserverBuilder());\n\n        let _useSet = false;\n\n\n        // if value of type is \"array\" or an array of items is defined,\n        // we handle as Array\n        if ((schema.hasOwnProperty(\"type\") && schema.type === \"array\") ||\n            (schema.hasOwnProperty(\"items\") && Array.isArray(schema.items))) {\n            _useSet = true;\n        }\n\n        // creates holder for dirty model flags in this scope\n        _dirtyModels.set(this, {});\n\n        // creates root level document and sets it to this scope\n        _documents.set(this, new (!_useSet ? Schema : Set)(this));\n    }\n\n    /**\n     * getter for Model document\n     * @returns {Schema|Set}\n     */\n    get document() {\n        return _documents.get(this);\n    }\n\n    get schema() {\n        return _schemaSignatures.get(this);\n    }\n\n    /**\n     * getter for validation status\n     * @returns {boolean}\n     */\n    get isValid() {\n        return this.document.isValid;\n    }\n\n    /**\n     * validates data against named schema\n     * @param path\n     * @param value\n     * @return {*|void|RegExpExecArray}\n     */\n    validate(path, value) {\n        return _validators.get(this).exec(path, value);\n    }\n\n    /**\n     * getter for Ajv validation error messages\n     * @return {error[] | null}\n     */\n    get errors() {\n        return _validators.get(this).$ajv.errors || null;\n    }\n\n    /**\n     * implements toString\n     * @return {string}\n     */\n    toString() {\n        return `${this.document}`;\n    }\n\n    /**\n     * implements toJSON\n     * @return {*}\n     */\n    toJSON() {\n        return this.document.toJSON();\n    }\n\n    /**\n     * creates new Schema from JSON data\n     * @param {string|object} json -- JSON Object or String\n     * @param {object} options - JSD options object\n     * @returns {JSD}\n     */\n    static fromJSON(json, options) {\n        // quick peek at json param to ensure it looks ok\n        let __ = (typeof json).match(/^(string|object)+$/);\n\n        if (__) {\n            // attempts to parse if type is string and create JSD from JSON\n            return new JSD((__[1] === \"string\") ? JSON.parse(json) : json, options);\n        }\n\n        // throws error if something didn't look right with the json param\n        throw new Error(\"json must be either JSON formatted string or object\");\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/jsd.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 98,
    "kind": "variable",
    "name": "_documents",
    "memberof": "src/classes/jsd.js",
    "static": true,
    "longname": "src/classes/jsd.js~_documents",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/jsd.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 99,
    "kind": "class",
    "name": "JSD",
    "memberof": "src/classes/jsd.js",
    "static": true,
    "longname": "src/classes/jsd.js~JSD",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/jsd.js",
    "importStyle": "{JSD}",
    "description": "JSD Document Entry-point",
    "lineNumber": 24,
    "interface": false
  },
  {
    "__docId__": 100,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "schema",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 101,
    "kind": "get",
    "name": "document",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#document",
    "access": "public",
    "description": "getter for Model document",
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Schema|Set}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Schema",
        "Set"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "get",
    "name": "schema",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#schema",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "get",
    "name": "isValid",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#isValid",
    "access": "public",
    "description": "getter for validation status",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "validate",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#validate",
    "access": "public",
    "description": "validates data against named schema",
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*",
        "void",
        "RegExpExecArray"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 105,
    "kind": "get",
    "name": "errors",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#errors",
    "access": "public",
    "description": "getter for Ajv validation error messages",
    "lineNumber": 102,
    "return": {
      "nullable": null,
      "types": [
        "error[] ",
        " null"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "toString",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#toString",
    "access": "public",
    "description": "implements toString",
    "lineNumber": 110,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "toJSON",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#toJSON",
    "access": "public",
    "description": "implements toJSON",
    "lineNumber": 118,
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "fromJSON",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/jsd.js~JSD.fromJSON",
    "access": "public",
    "description": "creates new Schema from JSON data",
    "lineNumber": 128,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{JSD}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": "- JSON Object or String"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "JSD options object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "JSD"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 109,
    "kind": "file",
    "name": "src/classes/model.js",
    "content": "import {\n    _mdRef, _oBuilders, _exists,\n    _object, _schemaOptions, _dirtyModels\n} from \"./_references\";\nimport {JSD} from \"./jsd\";\nimport {MetaData} from \"./_metaData\";\nimport {makeClean, makeDirty, refValidation} from \"./utils\";\n\n/**\n *\n * @param ref\n * @param metaRef\n */\nconst createMetaDataRef = (ref, metaRef) => {\n    let _md;\n    if (metaRef instanceof JSD) {\n        // root properties are handed the JSD object\n        // will create new MetaData and set reference as root element\n        _md = new MetaData(ref, {\n            _path: \"\",\n            _parent: null,\n            _root: ref,\n            _jsd: metaRef,\n        });\n    }\n    else if ((typeof metaRef) === \"object\") {\n        // extends MetaData reference\n        if (metaRef instanceof MetaData) {\n            _md = metaRef;\n        } else {\n            // todo: re-evaluate this line for possible removal\n            _md = new MetaData(this, metaRef);\n        }\n    } else {\n        throw \"Invalid attempt to construct Model.\" +\n        \"tip: use `new JSD([schema])` instead\"\n    }\n    // sets MetaData object to global reference\n    _mdRef.set(ref, _md);\n};\n\n/**\n *\n */\nexport class Model {\n    constructor() {\n        // tests if this is instance of MetaData\n        if (!(this instanceof MetaData)) {\n            createMetaDataRef(this, arguments[0]);\n        }\n    }\n\n    /**\n     * Subscribes handler method to observer for model\n     * @param func\n     * @returns {Observable}\n     */\n    subscribe(func) {\n        return this.subscribeTo(this.path, func);\n    }\n\n    /**\n     *\n     * @return {object}\n     */\n    get handler() {\n        return {\n            setPrototypeOf: () => false,\n            isExtensible: (t) => Object.isExtensible(t),\n            preventExtensions: (t) => Object.preventExtensions(t),\n            getOwnPropertyDescriptor: (t, key) => Object.getOwnPropertyDescriptor(t, key),\n            defineProperty: (t, key, desc) => Object.defineProperty(t, key, desc),\n            has: (t, key) => key in t,\n            ownKeys: (t) => Reflect.ownKeys(t),\n            apply: () => false,\n        };\n    }\n\n    /**\n     * Subscribes handler method to property observer for path\n     * @param path\n     * @param func\n     * @return {Observable}\n     */\n    subscribeTo(path, func) {\n        // throws if argument is not an object or function\n        if ((typeof func).match(/^(function|object)$/) === null) {\n            throw new Error(\"subscribeTo requires function\");\n        }\n\n        // references the ObserverBuilder for the path\n        let _o = _oBuilders.get(this.jsd).get(path);\n\n        // creates observer reference for given `path` value\n        if (!_o || _o === null) {\n            _oBuilders.get(this.jsd).create(path, this);\n            _o = _oBuilders.get(this.jsd).get(path);\n        }\n\n        // references to subscriptions for Observable\n        const _subRefs = [];\n\n        // init's observer handlers if defined on passed `func` object\n        [\n            {call: \"onNext\", func: \"next\"},\n            {call: \"onError\", func: \"error\"},\n            {call: \"onComplete\", func: \"complete\"},\n        ].forEach((obs) => {\n            if (func.hasOwnProperty(obs.func)) {\n                _subRefs.push(_o[obs.call].subscribe({next: func[obs.func]}));\n            }\n        });\n\n        // creates an extensible object to hold our unsubscribe method\n        // and adds unsubscribe calls to the Proto object\n        const _subs = (class {\n        }).prototype.unsubscribe = () => {\n            _subRefs.forEach((sub) => {\n                sub.unsubscribe();\n            });\n        };\n\n        return new _subs();\n    }\n\n    /**\n     * stub for model getter, overridden by Model sub-class\n     * @return {object|array|null}\n     */\n    get model() {\n        return null;\n    }\n\n    /**\n     * Raw value of this Model\n     * @returns {*}\n     */\n    valueOf() {\n        return _object.get(this);\n    }\n\n    /**\n     * Provides JSON object representation of Model\n     */\n    toJSON() {\n        let _derive = (itm) => {\n\n            // uses toJSON impl if defined\n            if (itm.hasOwnProperty(\"toJSON\") &&\n                (typeof this.toJSON) === \"function\") {\n                return itm.toJSON();\n            }\n\n            // builds new JSON tree if value is object\n            if (typeof itm === \"object\") {\n                const _o = !Array.isArray(itm) ? {} : [];\n                for (let k in itm) {\n\n                    // we test for property to avoid warnings\n                    if (itm.hasOwnProperty(k)) {\n\n                        // applies property to tree\n                        _o[k] = _derive(itm[k]);\n                    }\n                }\n\n                // returns new JSON tree\n                return _o;\n            }\n            // hands back itm if value wasn't usable\n            return itm;\n        };\n\n        // uses closure for evaluation\n        return _derive(this.valueOf());\n    }\n\n    /**\n     * Provides JSON String representation of Model\n     * @param pretty - `prettifies` JSON output for readability\n     */\n    toString(pretty = false) {\n        return JSON.stringify(this.toJSON(), null, (pretty ? 2 : void(0)));\n    }\n\n    /**\n     * Getter for Model's Unique Object ID\n     * @returns {string} Object ID for Model\n     */\n    get objectID() {\n        return _mdRef.get(this)._id;\n    }\n\n    /**\n     * Getter for root element of Model hierarchy\n     * @returns {Model}\n     */\n    get root() {\n        return _mdRef.get(this).root || this;\n    }\n\n    /**\n     * Getter for `path` to current Element\n     * @returns {string}\n     */\n    get path() {\n        let __ = _mdRef.get(this).path;\n        return _exists(__) ? __ : \"\";\n    }\n\n    /**\n     * Getter for Model's parent\n     * @returns {Model}\n     */\n    get parent() {\n        // attempts to get parent\n        return _mdRef.get(this).parent;\n    }\n\n    /**\n     * Getter for Model validation status for hierarchy\n     * @return {boolean}\n     */\n    get isDirty() {\n        let _res = _dirtyModels.get(this.jsd)[this.path];\n        return _res === void(0) ? ((this.parent === null) ? false : this.parent.isDirty) : _res;\n    }\n\n    /**\n     * Getter for model's JSD owner object\n     * @returns {JSD}\n     */\n    get jsd() {\n        return _mdRef.get(this).jsd;\n    }\n\n    /**\n     * Get options (if any) for this model's schema\n     * todo: review for possible removal\n     * @return {any}\n     */\n    get options() {\n        return _schemaOptions.get(this);\n    }\n\n    /**\n     * Applies Object.freeze to model and triggers complete notification\n     * -- unlike Object.freeze, this prevents modification\n     * -- to all children in Model hierarchy\n     * @returns {Model}\n     */\n    freeze() {\n        Object.freeze(_object.get(this));\n        const _self = this;\n        setTimeout(() => {\n            _oBuilders.get(_self.jsd).complete(_self.path, _self);\n        }, 0);\n        return this;\n    }\n\n    /**\n     * Getter for Object.isFrozen status of this node and it's ancestors\n     * @returns {boolean}\n     */\n    get isFrozen() {\n        let _res = Object.isFrozen(_object.get(this));\n        return !_res ? ((this.parent === null) ? false : this.parent.isFrozen) : _res;\n    }\n\n    /**\n     * Provides formatted string for json-schema lookup\n     * @return {string}\n     */\n    get validationPath() {\n        return this.path === \"\" ? \"root#/\" : `root#${this.path}`;\n    }\n\n    /**\n     * todo: implement with ajv\n     * @returns {*}\n     */\n    get schema() {\n        return this; // _validators.get(this.jsd).$ajv.compile({$ref: this.validationPath});\n    }\n\n    /**\n     * todo: remove and standardize around `schema`\n     * @returns {*}\n     */\n    get signature() {\n        return this.schema;\n    }\n\n    /**\n     * Tests value for validation without setting value to Model\n     * @param {json} value - JSON value to test for validity\n     * @return {boolean}\n     */\n    test(value) {\n        try {\n            if (!refValidation(this, value)) {\n                // explicit failure on validation\n                return false;\n            }\n        } catch (e) {\n            // couldn't find schema, so is Additional Properties\n            // todo: review `removeAdditional` ajv option for related behavior\n            return true;\n        }\n\n        return true;\n    }\n\n    /**\n     * resets Model to empty value\n     * @return {Model}\n     */\n    reset() {\n        const _isArray = Array.isArray(this.model);\n        const _o = !_isArray ? {} : [];\n\n        // validates that this model be returned to an empty value\n        if (!this.test(_o)) {\n            _oBuilders.get(this.jsd).error(this.path, this.jsd.errors);\n            return this;\n        }\n\n        // marks this model as out of sync with tree\n        makeDirty(this);\n\n        // closure to handle the freeze operation safely\n        const _freeze = (itm) => {\n            if (!Object.isFrozen(itm)) {\n               itm.freeze();\n            }\n        };\n\n        // freezes all child Model/Elements\n        // -- prevent changes to Children\n        // -- sends \"complete\" notification to their Observers\n        // -- revokes their Models if revocable\n        const _i = !_isArray ? Object.keys(this.model) : this.model;\n        _i.forEach((itm) => _freeze((!_isArray) ? _i[itm] : itm));\n\n        // creates new Proxied Model to operate on\n        const _p = new Proxy(Model.createRef(this, _o), this.handler);\n        _object.set(this, _p);\n\n        // marks this model as back in sync with tree\n        makeClean(this);\n\n        // sends notification of model change\n        _oBuilders.get(this.jsd).next(this.path, this);\n\n        return this;\n    }\n\n    /**\n     * creates owner Model reference on Proxied data object\n     * @param ref\n     * @param obj\n     * @returns {*}\n     */\n    static createRef(ref, obj) {\n        Object.defineProperty(obj, \"$ref\", {\n            value: ref,\n            writable: false\n        });\n        return obj;\n    };\n}",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/model.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 110,
    "kind": "function",
    "name": "createMetaDataRef",
    "memberof": "src/classes/model.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/model.js~createMetaDataRef",
    "access": "public",
    "export": false,
    "importPath": "jsd/src/classes/model.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "ref",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "metaRef",
        "description": ""
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 111,
    "kind": "class",
    "name": "Model",
    "memberof": "src/classes/model.js",
    "static": true,
    "longname": "src/classes/model.js~Model",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/model.js",
    "importStyle": "{Model}",
    "description": "",
    "lineNumber": 45,
    "interface": false
  },
  {
    "__docId__": 112,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "subscribe",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#subscribe",
    "access": "public",
    "description": "Subscribes handler method to observer for model",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Observable}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Observable"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 114,
    "kind": "get",
    "name": "handler",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#handler",
    "access": "public",
    "description": "",
    "lineNumber": 66,
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "{\"setPrototypeOf\": *, \"isExtensible\": *, \"preventExtensions\": *, \"getOwnPropertyDescriptor\": *, \"defineProperty\": *, \"has\": *, \"ownKeys\": *, \"apply\": *}"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "subscribeTo",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#subscribeTo",
    "access": "public",
    "description": "Subscribes handler method to property observer for path",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Observable"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 116,
    "kind": "get",
    "name": "model",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#model",
    "access": "public",
    "description": "stub for model getter, overridden by Model sub-class",
    "lineNumber": 130,
    "return": {
      "nullable": null,
      "types": [
        "object",
        "array",
        "null"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "valueOf",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#valueOf",
    "access": "public",
    "description": "Raw value of this Model",
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "toJSON",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#toJSON",
    "access": "public",
    "description": "Provides JSON object representation of Model",
    "lineNumber": 145,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "toString",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#toString",
    "access": "public",
    "description": "Provides JSON String representation of Model",
    "lineNumber": 182,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pretty",
        "description": "`prettifies` JSON output for readability"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "get",
    "name": "objectID",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#objectID",
    "access": "public",
    "description": "Getter for Model's Unique Object ID",
    "lineNumber": 190,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} Object ID for Model"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Object ID for Model"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "get",
    "name": "root",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#root",
    "access": "public",
    "description": "Getter for root element of Model hierarchy",
    "lineNumber": 198,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Model}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Model"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "get",
    "name": "path",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#path",
    "access": "public",
    "description": "Getter for `path` to current Element",
    "lineNumber": 206,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "get",
    "name": "parent",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#parent",
    "access": "public",
    "description": "Getter for Model's parent",
    "lineNumber": 215,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Model}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Model"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "get",
    "name": "isDirty",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#isDirty",
    "access": "public",
    "description": "Getter for Model validation status for hierarchy",
    "lineNumber": 224,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 125,
    "kind": "get",
    "name": "jsd",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#jsd",
    "access": "public",
    "description": "Getter for model's JSD owner object",
    "lineNumber": 233,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{JSD}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "JSD"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "get",
    "name": "options",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#options",
    "access": "public",
    "description": "Get options (if any) for this model's schema\ntodo: review for possible removal",
    "lineNumber": 242,
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "freeze",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#freeze",
    "access": "public",
    "description": "Applies Object.freeze to model and triggers complete notification\n-- unlike Object.freeze, this prevents modification\n-- to all children in Model hierarchy",
    "lineNumber": 252,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Model}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Model"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 128,
    "kind": "get",
    "name": "isFrozen",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#isFrozen",
    "access": "public",
    "description": "Getter for Object.isFrozen status of this node and it's ancestors",
    "lineNumber": 265,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 129,
    "kind": "get",
    "name": "validationPath",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#validationPath",
    "access": "public",
    "description": "Provides formatted string for json-schema lookup",
    "lineNumber": 274,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "get",
    "name": "schema",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#schema",
    "access": "public",
    "description": "todo: implement with ajv",
    "lineNumber": 282,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "get",
    "name": "signature",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#signature",
    "access": "public",
    "description": "todo: remove and standardize around `schema`",
    "lineNumber": 290,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "method",
    "name": "test",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#test",
    "access": "public",
    "description": "Tests value for validation without setting value to Model",
    "lineNumber": 299,
    "params": [
      {
        "nullable": null,
        "types": [
          "json"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "JSON value to test for validity"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 133,
    "kind": "method",
    "name": "reset",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#reset",
    "access": "public",
    "description": "resets Model to empty value",
    "lineNumber": 318,
    "return": {
      "nullable": null,
      "types": [
        "Model"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "createRef",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/model.js~Model.createRef",
    "access": "public",
    "description": "creates owner Model reference on Proxied data object",
    "lineNumber": 364,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "ref",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 135,
    "kind": "file",
    "name": "src/classes/schema.js",
    "content": "import {\n    _object, _schemaHelpers, _oBuilders,\n} from \"./_references\";\nimport {makeClean, refAtKeyValidation, refValidation} from \"./utils\";\nimport {SchemaHelpers} from \"./_schemaHelpers\";\nimport {Model} from \"./model\";\n\n\n/**\n * @class Schema\n */\nexport class Schema extends Model {\n    /**\n     *\n     */\n    constructor() {\n        super(arguments[0]);\n\n        // stores SchemaHelpers reference for use\n        _schemaHelpers.set(this, new SchemaHelpers(this));\n\n        // sets Proxy Model reference on map\n        _object.set(this, new Proxy(Model.createRef(this, {}), this.handler));\n    }\n\n    /**\n     * Handler for Object Proxy Evaluation\n     * @returns {{get: function, set: function}}\n     */\n    get handler() {\n        return Object.assign(super.handler, {\n            get: (t, key) => {\n                return key === \"$ref\" ? this : t[key];\n            },\n            set: (t, key, value) => {\n                let _sH = _schemaHelpers.get(this);\n\n                // -- ensures we aren't in a frozen hierarchy branch\n                if (this.isFrozen) {\n                    return false;\n                }\n\n                // if key is type 'object', we will set directly\n                if (typeof key === \"object\") {\n                    const e = _sH.setObject(key);\n                    if (typeof e === \"string\") {\n                        _oBuilders.get(this.jsd).error(this.path, e);\n                        return false;\n                    }\n                    return true;\n                }\n                // calls validate with either full path if in Schema or key if nested in Set\n                if ((typeof value) === \"object\") {\n                    value = _sH.setChildObject(key, value);\n                    if ((typeof value) === \"string\") {\n                        _oBuilders.get(this.jsd).error(this.path, value);\n                        return false;\n                    }\n                }\n\n                // performs the operation on Model\n                t[key] = value;\n                return true;\n            },\n            deleteProperty: (t, key) => {\n                // creates mock of future Model state for evaluation\n                let _o = Object.assign({}, this.model);\n                delete _o[key];\n\n                // validates model with value removed\n                if (!this.test(_o)) {\n                    return false;\n                }\n\n                // performs the operation on Model\n                delete t[key];\n                return true;\n            }\n        });\n    }\n\n    /**\n     * utility method to create selector path\n     * @param path\n     * @param addr\n     * @returns {string}\n     */\n    static concatPathAddr(path, addr) {\n        return path.length ? `${path}/${addr}` : `${addr}`;\n    }\n\n    /**\n     * getter for object model\n     */\n    get model() {\n        return _object.get(this);\n    }\n\n    /**\n     * setter for object model\n     * @param value\n     */\n    set model(value) {\n        // fails on attempts to set scalar value\n        // or if this node is locked or fails validation\n        if ((typeof value) !== \"object\" || this.isFrozen ||\n            !refValidation(this, value)) {\n            return false;\n        }\n\n        // defines new Proxy Object for data modeling\n        // todo: replace proxy with Object Delegation\n        _object.set(this, new Proxy(Model.createRef(this, {}), this.handler));\n\n        Object.keys(value).forEach((k) => {\n            // -- added try/catch to avoid error in JSFiddle\n            try {\n                this.model[k] = value[k];\n            } catch (e) {\n                _oBuilders.get(this.jsd).error(this.path, e);\n                return false;\n            }\n        });\n\n        // marks model as in sync with tree\n        makeClean(this);\n\n        // calls next's observable to update subscribers\n        _oBuilders.get(this.jsd).next(this.path, this);\n        return true;\n    }\n\n    /**\n     * @param {string} key\n     * @returns {any}\n     */\n    get(key) {\n        return this.model[key];\n    }\n\n    /**\n     * sets value to schema key\n     * @param {string|object} key\n     * @param {any} value\n     */\n    set(key, value) {\n        // attempts validation of value against schema\n        if (!refAtKeyValidation(this, key, value)) {\n            return false;\n        }\n\n        // applies validated value to model\n        this.model[key] = value;\n\n        // updates observers\n        _oBuilders.get(this.jsd).next(this.path, this);\n\n        // removes dirtiness\n        makeClean(this);\n\n        return this;\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/schema.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 136,
    "kind": "class",
    "name": "Schema",
    "memberof": "src/classes/schema.js",
    "static": true,
    "longname": "src/classes/schema.js~Schema",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/schema.js",
    "importStyle": "{Schema}",
    "description": "",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Schema"
      }
    ],
    "interface": false,
    "extends": [
      "src/classes/model.js~Model"
    ]
  },
  {
    "__docId__": 137,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 16
  },
  {
    "__docId__": 138,
    "kind": "get",
    "name": "handler",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#handler",
    "access": "public",
    "description": "Handler for Object Proxy Evaluation",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{get: function, set: function}}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{get: function, set: function}"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "concatPathAddr",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/schema.js~Schema.concatPathAddr",
    "access": "public",
    "description": "utility method to create selector path",
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "addr",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 140,
    "kind": "get",
    "name": "model",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#model",
    "access": "public",
    "description": "getter for object model",
    "lineNumber": 95,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 141,
    "kind": "set",
    "name": "model",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#model",
    "access": "public",
    "description": "setter for object model",
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "get",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#get",
    "access": "public",
    "description": "",
    "lineNumber": 137,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "set",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#set",
    "access": "public",
    "description": "sets value to schema key",
    "lineNumber": 146,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 144,
    "kind": "file",
    "name": "src/classes/set.js",
    "content": "import {\n    _object, _schemaHelpers, _oBuilders\n} from \"./_references\";\nimport {Model} from \"./model\";\nimport {SchemaHelpers} from \"./_schemaHelpers\";\nimport {makeClean, makeDirty, refAtKeyValidation, refValidation} from \"./utils\";\n\nconst _observerDelegates = new WeakMap();\n\n/**\n * @class Set\n */\nexport class Set extends Model {\n    /**\n     * @constructor\n     */\n    constructor() {\n        super(arguments[0]);\n        _schemaHelpers.set(this, new SchemaHelpers(this));\n        _object.set(this, new Proxy(Model.createRef(this, []), this.handler));\n    }\n\n    /**\n     * getter for object model\n     */\n    get model() {\n        return _object.get(this);\n    }\n\n    /**\n     * setter for object model\n     * @param value\n     */\n    set model(value) {\n        if (!Array.isArray(value) || this.isFrozen ||\n            !refValidation(this, value)) {\n            return false;\n        }\n\n        _object.set(this, new Proxy(Model.createRef(this, []), this.handler));\n\n        try {\n            let cnt = 0;\n            // we delegate observation in the event of whole model replacement\n            // to prevent triggering a notification for each item\n            // if the user desires such behavior they can use `addItem` with an iterator\n            _observerDelegates.set(this, {\n                next: () => {\n                    if (this.length === value.length) {\n                        makeClean(this);\n                        _oBuilders.get(this.jsd).next(this.path, this);\n                    }\n                },\n                error: () => {\n                    // this is a no-op, we dispatch error earlier in the setter pipe\n                }\n            });\n            value.forEach((val) => {\n                _object.get(this)[cnt++] = val;\n            });\n        } catch (e) {\n            console.error(e);\n            // return _oBuilders.get(this.jsd).error(this.path, e);\n        }\n\n        makeClean(this);\n\n        _oBuilders.get(this.jsd).next(this.path, this);\n        return true;\n    }\n\n    get handler() {\n        return Object.assign(super.handler, {\n            get: (t, idx) => {\n                // TODO: review for removal\n                // if (typeof idx === \"symbol\") {\n                //     idx = `${String(idx)}`;\n                // }\n\n                if (idx === \"length\") {\n                    return t.length;\n                }\n\n                if (idx in Array.prototype) {\n                    // only handle methods that modify the reference array\n                    if ([\"fill\", \"pop\", \"push\", \"shift\", \"splice\", \"unshift\"].indexOf(idx) > -1) {\n                        return () => {\n                            let _arr = [].concat(t);\n                            const _res = _arr[idx].apply(_arr, arguments);\n\n                            if (!this.test(_arr)) {\n                                _oBuilders.get(this.jsd).error(this.path, this.jsd.errors);\n                                return false;\n                            }\n                            // prevents subsequent validation on this object\n                            makeDirty(this);\n\n                            // appies modified array to element\n                            this.model = _arr;\n\n                            // returns result of operation\n                            return _res;\n                        }\n                    } else {\n                        return t[idx];\n                    }\n                }\n\n                if (idx === \"$ref\") {\n                    return this;\n                }\n\n                return t[idx];\n            },\n            set: (t, idx, value) => {\n                if (idx in Array.prototype) {\n                    // do nothing against proto props\n                    return true;\n                }\n\n                // -- ensures we aren't in a frozen hierarchy branch\n                if (this.isFrozen) {\n                    return false;\n                }\n\n                if (!refAtKeyValidation(this, \"items\", value)) {\n                    return false;\n                }\n\n                let _oDel = _observerDelegates.get(this);\n\n                // we set the value on the array with success\n                if ((typeof value) === \"object\") {\n                    let _sH = _schemaHelpers.get(this);\n                    // note we use the last value of `cnt` and walk back one iteration\n                    value = _sH.setChildObject(`${this.path}`, value);\n                }\n\n                t[idx] = value;\n\n                // makes clean if not serial operation\n                if (!_oDel) {\n                    makeClean(this);\n                }\n\n                // updates observers\n                _oBuilders.get(this.jsd).next(this.path, this);\n                return true;\n            },\n            deleteProperty: (t, idx) => {\n                // creates mock of future Model state for evaluation\n                let _o = [].concat(this.model);\n                _o.splice(idx, 1);\n\n                // validates mock of change state\n                if (!refValidation(this, _o)) {\n                    return false;\n                }\n\n                // ensures index of operation is in range\n                if (idx >= t.length) {\n                    const e = `index ${idx} is out of bounds on ${this.path}`;\n                    _oBuilders.get(this.jsd).error(this.path, e);\n                    return false;\n                }\n\n                // applies operation\n                t.splice(idx, 1);\n\n                // flags model as in sync with tree\n                makeClean(this);\n\n                // updates observers\n                _oBuilders.get(this.jsd).next(this.path, t);\n                return true;\n            }\n        });\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/set.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 145,
    "kind": "variable",
    "name": "_observerDelegates",
    "memberof": "src/classes/set.js",
    "static": true,
    "longname": "src/classes/set.js~_observerDelegates",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/set.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 146,
    "kind": "class",
    "name": "Set",
    "memberof": "src/classes/set.js",
    "static": true,
    "longname": "src/classes/set.js~Set",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/set.js",
    "importStyle": "{Set}",
    "description": "",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Set"
      }
    ],
    "interface": false,
    "extends": [
      "src/classes/model.js~Model"
    ]
  },
  {
    "__docId__": 147,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 148,
    "kind": "get",
    "name": "model",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#model",
    "access": "public",
    "description": "getter for object model",
    "lineNumber": 26,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 149,
    "kind": "set",
    "name": "model",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#model",
    "access": "public",
    "description": "setter for object model",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 150,
    "kind": "get",
    "name": "handler",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#handler",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "file",
    "name": "src/classes/utils.js",
    "content": "import {_dirtyModels, _oBuilders, _validators} from \"./_references\";\n\n/**\n * flags `model` node as being out of sync with tree\n * @param {Model} model\n */\nexport const makeDirty = (model) => {\n    _dirtyModels.get(model.jsd)[model.path] = true;\n};\n\n/**\n * flags `model` node as being in sync with tree\n * @param {Model} model\n */\nexport const makeClean = (model) => {\n    if (model.isDirty && _dirtyModels.get(model.jsd)[model.path]) {\n        delete _dirtyModels.get(model.jsd)[model.path];\n    }\n};\n\n/**\n * Performs model data validation against json-schema\n * @private\n * @param {Model} model\n * @param {json|array|boolean|number|string} value\n * @return {boolean}\n */\nexport const refValidation = (model, value) => {\n    return refAtKeyValidation(model, \"\", value);\n};\n\n/**\n * Performs model data validation at KEY against json-schema\n * @param model\n * @param key\n * @param value\n * @return {boolean}\n */\nexport const refAtKeyValidation = (model, key, value) => {\n    // we don't validate if model is dirty\n    if (model.isDirty) {\n        return true;\n    }\n\n    // marks model as dirty to prevent cascading validation calls\n    makeDirty(model);\n\n    // obtains preliminary model path\n    let path = `${model.validationPath}`;\n\n    // appends key to path if set\n    if (key && key.length) {\n        path = `${path}/${key}`;\n    }\n\n    // obtains validator reference\n    const _v = _validators.get(model.jsd);\n\n    // runs validation...\n    const _res = _v.exec(path, value);\n\n    // tests our results for failure\n    if (!_res) {\n        // obtains errors if available\n        const _e = _v.$ajv.errorsText(_res.errors) || \"unknown validation error\";\n        // in case of error, update Observers and return false\n        _oBuilders.get(model.jsd).error(model.path, _e);\n        return false;\n    }\n\n    return true;\n};\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 153,
    "kind": "function",
    "name": "makeDirty",
    "memberof": "src/classes/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/utils.js~makeDirty",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/utils.js",
    "importStyle": "{makeDirty}",
    "description": "flags `model` node as being out of sync with tree",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "Model"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 154,
    "kind": "function",
    "name": "makeClean",
    "memberof": "src/classes/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/utils.js~makeClean",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/utils.js",
    "importStyle": "{makeClean}",
    "description": "flags `model` node as being in sync with tree",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Model"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 155,
    "kind": "function",
    "name": "refValidation",
    "memberof": "src/classes/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/utils.js~refValidation",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/utils.js",
    "importStyle": "{refValidation}",
    "description": "Performs model data validation against json-schema",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "Model"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "json",
          "array",
          "boolean",
          "number",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 156,
    "kind": "function",
    "name": "refAtKeyValidation",
    "memberof": "src/classes/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/utils.js~refAtKeyValidation",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/utils.js",
    "importStyle": "{refAtKeyValidation}",
    "description": "Performs model data validation at KEY against json-schema",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 157,
    "kind": "file",
    "name": "src/index.js",
    "content": "/////////////////////////////////////////////////\n// JSD\n// (c)2015-2017 Van Schroeder <van@webfreshener.com>\n/////////////////////////////////////////////////\n//== Polyfills Object.assign\nif (typeof Object.assign != \"function\") {\n    Object.assign = function (target) {\n        if (target == null) {\n            throw new TypeError(\"Cannot convert undefined or null to object\");\n        }\n        target = Object(target);\n        let index = 1;\n        while (index < arguments.length) {\n            let source = arguments[index];\n            if (source !== null) {\n                for (let key in source) {\n                    if (Object.prototype.hasOwnProperty.call(source, key)) {\n                        target[key] = source[key];\n                    }\n                }\n            }\n            index = index + 1;\n        }\n        return target;\n    }\n}\nexport {JSD} from './classes/jsd';",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "kind": "index",
    "content": "JSD\n=============\n**JSON Schema Definition**<br/>\nSchema Based Self-Validating and Observable Data Models\n\n[![Build Status](https://travis-ci.org/Webfreshener/JSD.svg?branch=master)](https://travis-ci.org/Webfreshener/JSD)\n[![Dev Dependency Status](https://david-dm.org/webfreshener/jsd/dev-status.svg)](https://david-dm.org/webfreshener/jsd?type=dev)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/3ca79cd83489410295680ef3ee96cd01)](https://www.codacy.com/app/vanschroeder/JSD?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Webfreshener/JSD&amp;utm_campaign=Badge_Grade)\n[![NSP Status](https://nodesecurity.io/orgs/webfreshener-llc/projects/ec54a505-71a0-42de-8b84-3aba21031b01/badge)](https://nodesecurity.io/orgs/webfreshener-llc/projects/ec54a505-71a0-42de-8b84-3aba21031b01)\n\n[Online Developer Documentation](https://webfreshener.github.io/JSD/)\n\n### Purpose \n Most every developer has wished for a way to quickly and easily validate data from User Input or remote API calls and\n and to be able to easily recieve update notifications without having to manually write code to facilitaate those \n objectives it is to that end that JSD was developed, an Observable, Schema Based Data Validation Utility written for Javascript, \n but which sets forth a Specification which may be implemented in any\n\n### Table of Contents\n\n**[Installation Instructions](#installation-instructions)**\n\n**[Basic Usage](#basic-usage)**\n\n   * [Schema Basics](#schema-basics)\n    \n**[JSD Specification](#jsd-specification)**\n\n   * [Array Type](#array-type)\n   * [Boolean Type](#boolean-type)\n   * [Number Type](#number-type)\n   * [Object Type](#object-type)\n   * [String Type](#string-type)\n   \n**[Advanced Usage](#advanced-usage)**\n\n   * [Wildcard Keys](#wildcard-keys)\n   * [Wildcard Types](#wildcard-types)\n   * [Polymorphism](#polymorphism)\n   * [Regular Expressions](#regular-expressions)\n    \n        * [JSON File Example with Special Escaping](#json-file-example-with-special-escaping)\n   * [Write-Locking](#write-locking)\n\n#### Installation Instructions ####\nThere are no dependencies or prerequesites besides NPM and NodeJS\nHowever, this project is not yet published. \nYou must manually add to your package.json\n```\n...\ndependencies: {\n    ...\n    \"jsd\": \"git+https://github.com/Webfreshener/JSD\",\n    ...\n}\n...\n```\n\n#### Basic Usage ####\n\n##### Schema Basics #####\n\nA schema is simply a JSON Document that \ndescribes the attributes of a Data Model\n\nThe example below defines an Schema that expects a `name` and an `age` attribute\n\n```\nconst _schema = {\n    \"name\": {\n        \"type\": \"String\",\n        \"required\": true\n    },\n    \"age\": {\n        \"type\": \"Number\",\n        \"required\": true\n    }\n};\nconst _handlers = {\n    next: function (schema) {\n        if (typeof schema !== 'undefined') {\n            // outputs: {\"name\":\"Frank\",\"age\":23}\n            console.log(`${schema}`);\n        }\n    },\n    error: function (e) {\n        // error: 'age' expected number, type was '<string>'\n        console.log(`error: ${e}`);\n    }\n};\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handlers);\n\n// set invalid data to the model to trigger error handler\n_jsd.document.model = {\n    \"name\": \"Frank\",\n    \"age\": \"23\"\n};\n\n// set valid data to the model to trigger next handler\n_jsd.document.model = {\n    \"name\": \"Frank\",\n    \"age\": 23\n};\n```\n\n\n### JSD Specification ###\n\n\n#### Array Type \nAttribute Name | Data Type\n---------------|-----------\nrequired | Boolean\nelements | Object\ndefault | Array \n\n###### Schema Example\n```\n// defines an Array of Strings\n{\n    type: \"Array\",\n    \"required\": false,\n    \"elements\": {\n        \"type\": \"String\",\n        \"required\": false\n    }\n}\n\n// defines an Array of Strings and Numbers\n{\n    type: \"Array\",\n    \"required\": false,\n    \"elements\": [\n        {\n        \"type\": \"String\",\n        \"required\": false\n       },\n       {\n        \"type\": \"String\",\n        \"required\": false\n        }\n     ]\n}\n```\n###### Usage Example\n```\n// we define an array that accepts objects comprised of a name string and numeric score\nconst _schema = {\n    type: \"Array\",\n    default: [],\n    elements: [{\n        type: \"Object\",\n        elements: {\n            name: {\n                type: \"String\",\n                required: true,\n                restrict: \"^[a-zA-Z0-9\\\\-\\\\s]{1,24}$\"\n            },\n            score: {\n                type: \"Number\",\n                required: true\n            },\n        },\n    }],\n};\n\nconst _handler = {\n    next: (val) => {\n        // outputs: {\"values\":[{\"name\":\"Player 1\",\"score\":2000000},{\"name\":\"Player 2\",\"score\":1100000},{\"name\":\"Player 3\",\"score\":900000}]}\n        console.log(`${val}`);\n    },\n    error: (e) => {\n        // error: 'score' expected number, type was '<string>'s\n        console.log(`error: ${e}`);\n    }\n};\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n_jsd.document.model = [{\n    name: \"Player 1\",\n    score: 2000000,\n}, {\n    name: \"Player 2\",\n    score: 1100000\n}, {\n    // this will error because score is a string value\n    name: \"BOGUS\",\n    score: \"1100000\"\n}, {\n    name: \"Player 3\",\n    score: 900000\n}];\n```\n\n#### Boolean Type\nAttribute Name | Data Type\n---------------|-----------\nrequired | Boolean\ndefault | Boolean \n```\n// defines an Boolean Element \n{\n    \"myElement\": {\n        \"type\": \"Boolean\",\n        \"required\": false,\n        \"default\": true\n    }\n}\n```\n\n###### Usage Example\n```\nconst _schema = {\n    value: {\n        type: \"Boolean\",\n        required: false,\n        default: true,\n    }\n};\n\nconst _handler = {\n    next: (val) => {\n        // outputs: {\"value\":true}\n        // outputs: {\"value\":true}\n        // outputs: {\"value\":false}\n        console.log(`${val}`);\n    },\n    error: (e) => {\n        // error: 'value' expected boolean, type was '<string>'\n        console.log(`error: ${e}`);\n    }\n};\n\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// - this will trigger the default value\n_jsd.document.model = {};\n\n// set value to true\n_jsd.document.model = {value: true};\n\n// set value to false\n_jsd.document.model = {value: false};\n\n// triggers error due to type mismatch\n_jsd.document.model = {value: \"true\"};\n```\n\n#### Number Type\nAttribute Name | Data Type\n---------------|-----------\nrequired | Boolean\ndefault | Number \n\n```\n// defines an Number Element \n{\n    \"myElement\": {\n        \"type\": \"Number\",\n        \"required\": false,\n        \"default\": 0 \n    }\n}\n```\n\n###### Usage Example\n```\nconst _schema = {\n    value: {\n        type: \"Number\",\n        required: true,\n        // default: true,\n    }\n};\n\nconst _handler = {\n    next: (val) => {\n        // outputs: {\"value\":1234}\n        console.log(`${val}`);\n    },\n    error: (e) => {\n        // error: 'value' expected number, type was '<string>'\n        console.log(`error: ${e}`);\n    }\n};\n\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// this fails because the value is a string\n_jsd.document.model = {value: \"1234\"};\n\n// this will succeed\n_jsd.document.model = {value: 1234};\n```\n\n#### Object Type \nAttribute Name | Data Type\n---------------|-----------\nrequired | Boolean\nextensible | Boolean\nelements | Object\npolymorphic | Array\ndefault | Object \n\n```\n// defines an Object Element \n{\n    \"myElement\": {\n        \"type\": \"Object\",\n        \"required\": false,\n        \"default\": {\n         },\n         elements: {\n            \"name\": {\n                \"type\": \"String\"\n                \"required\": true\n            },\n            \"active\": {\n                \"type\": \"Boolean\"\n                \"required\": false,\n                \"default\": true\n            }\n         }\n    }\n}\n```\n\n###### Usage Example\n```\n// we define an element named `value` that requires a name and optional active attributes \nconst _schema = {\n    value: {\n        type: \"Object\",\n        required: false,\n        elements: {\n            name: {\n                type: \"String\",\n                required: true\n            },\n            active: {\n                type: \"Boolean\",\n                required: false,\n                default: false\n            }\n        }\n    }\n};\n\nconst _handler = {\n    next: (val) => {\n        // outputs: {\"value\":{\"name\":\"Alice\",\"active\":true}}\n        // outputs: {\"value\":{\"name\":\"Bob\",\"active\":false}}\n        console.log(`${val}`);\n    },\n    error: (e) => {\n        // error: 'value.active' expected boolean, type was '<number>'\n        console.log(`error: ${e}`);\n    }\n};\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// this will error since `active` is a number\n_jsd.document.model = {\n    value: {\n        name: \"Alice\",\n        active: 1,\n    }\n};\n\n// this will pass\n_jsd.document.model = {\n    value: {\n        name: \"Alice\",\n        active: true\n    }\n};\n\n// this will also pass since `active` is optional\n_jsd.document.model = {\n    value: {\n        name: \"Bob\",\n    }\n};\n```\n\n#### String Type \nAttribute Name | Data Type\n---------------|-----------\nrequired | Boolean\nrestrict | RegExp\ndefault | String\n\n``` \n// defines a String Element \n{\n    \"myElement\": {\n        \"type\": \"String\"\n        \"required\": true\n    }\n}\n```\n\n###### Usage Example\n```\nconst _schema = {\n    value: {\n        type: \"String\",\n        required: true,\n        restrict: \"^[a-zA-Z0-9_\\\\s\\\\-]+$\"\n    }\n};\n\nconst _handler = {\n    next: (val) => {\n        // outputs: {\"value\":\"false\"}\n        console.log(`${val}`);\n    },\n    error: (e) => {\n        // error: 'value' expected string, type was '<boolean>'\n        console.log(`error: ${e}`);\n    }\n};\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// this fails because type is boolean\n_jsd.document.model = {value: true};\n\n// this will succeeed\n_jsd.document.model = {value: \"false\"};\n```\n\n### Advanced Usage \n\n#### Wildcard Keys\nWildcards keys allow for cases where you might not know or care about the actual key values.\nThis is useful in cases where you might have severage elements of the ame data type and \nformat that you wish to describe in a single instance\n\n###### Schema Example\n```\n// declares any amount of Alphanumeric String values\n{\n    \"*\": {\n        \"type\": \"String\",\n        \"restrict\": \"^[a-zA-Z0-9\\-]{1,10}$\"\n    }\n}\n\n// declares any amount of extensible Object values with name and age attributes \n{\n    \"*\": {\n        type: \"Object\",\n        \"extensible\": true\n        \"elements\": {\n            \"name\": {\n                \"type\": \"String\",\n                \"required\": true,\n                \"restrict\": \"^[a-zA-Z0-9\\-]{1,10}$\"\n            },\n            {\n            \"age\": {\n                \"type\": \"Number\",\n                \"required\":true \n            }\n        },\n    }\n}\n```\n###### Usage Example\n```\n// creates a schema that allows any key assignent, but value must be object\nconst _schema = {\n    \"*\": {\n        type: \"Object\",\n        extensible: true,\n        elements: {\n            name: {\n                type: \"String\",\n                required: true,\n                restrict: \"^[a-zA-Z0-9_\\\\s\\\\-]{9,}$\"\n            },\n            score: {\n                type: \"Number\",\n                required: true,\n            }\n        },\n    }\n};\n\nconst _handler = {\n    next: (val) => {\n        // {\"1\":{\"name\":\"Big Daddy\",\"score\":2000000}, ...}\n        console.log(`${val}`); \n    },\n    error: (e) => {\n        // error: 1 expected value of type 'Object'. Type was '<number>'\n        console.log(`error: ${e}`);\n    }\n};\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// this will fail because value is number, not an object\n_jsd.document.model = {\n    1: 900000,\n};\n\n// this succeeds\n_jsd.document.model = {\n    1: {\n        name: \"Big Daddy\",\n        score: 2000000\n    },\n    2: {\n        name: \"HeavyMetalPrincess\",\n        score: 1100000\n    },\n    3: {\n        name: \"Munga-Munga\",\n        score: 900000\n    },\n};\n```\n#### Wildcard Types \nIn some cases, you might know the key of an attribute, \nbut the type might not be determined. In these cases,\nwhere you want to restrict an object to known keys but \nallow for various value assignment, you can use \nwildcard types\n\n###### Schema Example\n```\n// declares element myKey which can be any type, but must be present \n{\n    \"myKey\": {\n        \"type\": \"*\",\n        \"required\": true\n    }\n}\n\n// declares an Object that allows for special user data \n{\n    \"id\": {\n        \"type\": \"Number\",\n        \"required\": true,\n    },\n    \"name\": {\n        \"type\": \"String\",\n        \"required\": true,\n        \"restrict\": \"^[a-zA-Z0-9\\-]{1,10}$\"\n    },\n    {\n    \"dataField1\": {\n        \"type\": \"*\",\n        \"required\": false \n    },\n    \"dataField2\": {\n        \"type\": \"*\",\n        \"required\": false \n    }\n}\n```\n###### Usage Example\n```\n// creates a schema that lets key `value` be set to any type \nconst _schema = {\n    value: {\n        type: \"*\",\n    }\n};\n\nconst _handler = {\n    next: (val) => {\n        // outputs: {\"value\":900000}\n        // outputs: {\"value\":\"A string\"}\n        // outputs: {\"value\":false}\n        console.log(`${val}`); \n    },\n    error: (e) => {\n        // error: element 'bogus' is not a valid element\n        console.log(`error: ${e}`);\n    }\n};\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// any model with the key named `value` is ok\n_jsd.document.model = {\n    value: 900000,\n};\n\n// any model with the key named `value` is ok\n_jsd.document.model = {\n    value: \"A string\",\n};\n\n// any model with the key named `value` is ok\n_jsd.document.model = {\n    value: false,\n};\n\n// this will fail because key `bogus` is not allowed\n_jsd.document.model = {\n    bogus: \"false\",\n}\n```\n\n#### Polymorphism\nIn cases where you want to keep the data model tightly defined but must allow for certain values to conform to more \nthan one data type, you can use polymorhism\n\n###### Schema Example\n```\n// declares element `polyValue` which can be a String or an Object\n{\n   \"polyValue\": {\n     \"required\": true,\n     \"polymorphic\": [\n       {\n         \"type\": \"String\",\n         \"restrict\": \"^[a-zA-Z-0-9_]+$\"\n       },\n       {\n         \"type\": \"Object\",\n         \"elements\": {\n           \"name\": {\n             \"type\": \"String\",\n             \"required\": true,\n             \"restrict\": \"^[a-zA-Z-0-9_]{1,24}+$\"\n           },\n           \"details\": {\n             \"type\": \"String\",\n             \"required\": false,\n             \"restrict\": \"^[a-zA-Z-0-9_]{0,256}+$\"\n           }, \n         }\n       }\n     ]\n   } \n}\n```\n###### Usage Example\n```\nconst _schema = {\n    polyValue: {\n        required: true,\n        default: \"DEFAULT VALUE\",\n        polymorphic: [\n            // this schema will accept a string value\n            {\n                type: \"String\",\n                restrict: \"^[a-zA-Z0-9_\\\\s]+$\",\n\n            },\n            // ... or and object with `name` and `description` elements\n            {\n                type: \"Object\",\n                elements: {\n                    name: {\n                        type: \"String\",\n                        required: true,\n                        restrict: \"^[a-zA-Z0-9_\\\\s]{1,24}$\"\n                    },\n                    description: {\n                        type: \"String\",\n                        required: true,\n                        restrict: \"^[a-zA-Z0-9_\\\\s]{1,140}$\"\n                    },\n                },\n            },\n            // ... or a wildcard key & numeric value pair\n            {\n                type: \"Object\",\n                elements: {\n                    \"*\": {\n                        type: \"Number\"\n                    },\n                },\n            }]\n    }\n};\n\nlet _handler = {\n    next: (val) => {\n        // {\"polyValue\":\"DEFAULT VALUE\"}\n        // {\"polyValue\":\"HeavyMetalPrincess\"}\n        // {\"polyValue\":{\"name\":\"HeavyMetalPrincess\",\"description\":\"cupcakes\"}}\n        // {\"polyValue\":{\"HeavyMetalPrincess\":10001234}}\n        console.log(`${val}`);\n    },\n    error: (e) => {\n        // error: 'polyValue.polymorphic.2.*' expected number, type was '<string>'\n        console.log(`error: ${e}`);\n    }\n\n};\n\nconst _jsd = new JSD(_schema, {debug: true});\n_jsd.document.subscribe(_handler);\n\n// will set default value\n_jsd.document.model = {};\n\n\n// can be a string value\n_jsd.document.model = {\n    \"polyValue\": \"HeavyMetalPrincess\",\n}\n\n// can be an object with `name` and `description` elements\n_jsd.document.model = {\n    \"polyValue\": {\n        \"name\": \"HeavyMetalPrincess\",\n        \"description\": \"cupcakes\",\n    }\n};\n\n// or a wildcard key & numeric value pair...\n\n// -- this will error because the value is a string, not numeric\n_jsd.document.model = {\n    \"polyValue\": {\n        HeavyMetalPrincess: \"10001234\",\n    },\n};\n\n// -- this has a numeric value and will succeed\n_jsd.document.model = {\n    \"polyValue\": {\n        HeavyMetalPrincess: 10001234,\n    },\n};\n});\n```\n\n#### Regular Expressions\nJSD allows the use of Regular Expressions to restrict String input\nThere are caveats to it's use due to the nature of RegExp syntax vs  JSON\ncharacter encoding limitations\n\n###### JS and TS file Example\n```\n// in code declaring a RegExp in JS or TS is no big deal \nconst schema = {\n   stringValue: {\n     required: true,\n     type: \"String\",\n     restrict: \"^[a-zA-Z0-9_\\\\-\\\\s]+$\"\n   }\n};\n```\n\n\n###### JSON File Example with Special Escaping\n```\n{\n    \"stringValue\": {\n        \"required\": true,\n        \"type\": \"String\",\n        \"restrict\": \"^[a-zA-Z0-9_\\\\\\\\-\\\\\\\\s]+$\"\n    }\n}\n```\n\n#### Write-Locking \nIn some cases you might want to define Read-Only Data Structures, such as Config Files\nJSD allows you to set data to the Schema and then Write-Lock it via Schema Params or Programmatically\n\n###### Schema Example\n```\n// a schema designating itself as write-locked with the writeLock attribute\n// once data is set to this schema, it will be read-only\n{\n  \"writeLock\": true,\n  \"elements\": {\n    \"*\"{\n      \"type\": \"*\"\n    }\n  }\n}\n```\n###### Usage Example\n```\n// creates a schema with writeLock attribute set to true\nvar _schema = {\n    writeLock: true,\n    elements: {\n        \"*\": {\n            type: \"*\",\n        }\n    }\n};\n\nvar _handler = {\n    next: function(val) {\n        // {\"valueA\":1,\"valueB\":2,\"valueC\":3}\n        // {\"valueA\":1,\"valueB\":2,\"valueC\":3}\n        console.log(`${val}`);\n    },\n    complete: function(model) {\n        // complete: schema is now locked.\n        console.log('complete: schema is now locked.');\n    }\n};\n\nvar _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// will lock schema after write\n_jsd.document.model = {\n    valueA: 1,\n    valueB: 2,\n    valueC: 3,\n};\n\n// subsequent writes will silently fail\n_jsd.document.model = {\n    valueD: 4,\n    valueE: 5,\n    valueF: 6,\n};\n\n\n// Additionally, the end-user can set this programatically\n\n// creates a schema with writeLock attribute set to true\nvar _schema = {\n    \"*\": {\n        type: \"*\",\n    }\n};\n\nvar _handler = {\n    next: function(val) {\n        // {\"valueA\":1,\"valueB\":2,\"valueC\":3}\n        // {\"valueA\":1,\"valueB\":2,\"valueC\":3}\n        console.log(`${val}`);\n    },\n    complete: function(model) {\n        // complete: schema is now locked.\n        console.log('complete: schema is now locked.');\n    }\n};\n\nvar _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// will lock schema after write\n_jsd.document.model = {\n    valueA: 1,\n    valueB: 2,\n    valueC: 3,\n};\n\n// Invoke the lock feature on the document\n_jsd.document.lock();\n\n// subsequent writes will silently fail\n_jsd.document.model = {\n    valueD: 4,\n    valueE: 5,\n    valueF: 6,\n};\n```",
    "longname": "/Users/van/IdeaProjects/JSD/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"author\": \"Van Schroeder <van@webfreshener.com>\",\n  \"name\": \"jsd\",\n  \"description\": \"Schema Generation and Data Validation with object virtualization\",\n  \"keywords\": [\n    \"schema\",\n    \"validation\",\n    \"validatable\",\n    \"observable\",\n    \"proxy\",\n    \"model\",\n    \"json\",\n    \"data\",\n    \"orm\",\n    \"object\",\n    \"hash\",\n    \"properties\",\n    \"DOM\",\n    \"object model\"\n  ],\n  \"version\": \"1.0.0-beta.2\",\n  \"main\": \"./index.js\",\n  \"licenses\": [\n    {\n      \"type\": \"MIT\",\n      \"url\": \"http://www.opensource.org/licenses/MIT\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/Webfreshener/JSD.git\"\n  },\n  \"dependencies\": {\n    \"rxjs\": \"^5.5.6\"\n  },\n  \"devDependencies\": {\n    \"ajv\": \"^6.4.0\",\n    \"babel\": \"^6.5.2\",\n    \"babel-core\": \"^6.18.2\",\n    \"babel-loader\": \"^7.1.3\",\n    \"babel-plugin-transform-remove-strict-mode\": \"0.0.2\",\n    \"babel-preset-env\": \"^1.6.1\",\n    \"babel-register\": \"^6.18.0\",\n    \"chai\": \"^4.1.2\",\n    \"deep-equal\": \"^1.0.1\",\n    \"es6-weak-map\": \"^2.0.1\",\n    \"esdoc\": \"^1.0.4\",\n    \"esdoc-accessor-plugin\": \"^1.0.0\",\n    \"esdoc-exclude-source-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"jest\": \"^22.1.4\",\n    \"jest-babel-istanbul\": \"^0.1.0\",\n    \"jest-each\": \"^0.3.1\",\n    \"jsd-utils\": \"git+https://github.com/webfreshener/jsd-utils.git\",\n    \"jshint\": \"^2.9.4\",\n    \"jsonpath\": \"^1.0.0\",\n    \"mocha\": \"^5.0.0\",\n    \"mocha-lcov-reporter\": \"^1.3.0\",\n    \"weakmap\": \"0.0.6\",\n    \"webpack\": \"^4.0.1\",\n    \"webpack-cli\": \"^2.0.10\",\n    \"webpack-rxjs-externals\": \"^1.1.0\"\n  },\n  \"homepage\": \"https://webfreshener.github.io/JSD/\",\n  \"scripts\": {\n    \"test\": \"jest\",\n    \"build-test\": \"webpack --mode development; npm test\",\n    \"build\": \"webpack --mode production\",\n    \"version\": \"npm run build\",\n    \"docs\": \"./node_modules/.bin/esdoc\"\n  },\n  \"jest\": {\n    \"coverageCollector\": \"jest-babel-istanbul\"\n  }\n}",
    "longname": "/Users/van/IdeaProjects/JSD/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]