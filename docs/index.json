[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/classes/_metaData.js",
    "content": "import {wf, _mdRef} from \"./_references\";\n// import {Schema} from \"./schema\";\n// import {Set} from \"./set\";\nconst _mData = new WeakMap();\n/**\n * @private\n */\nexport class MetaData {\n    /**\n     * @constructor\n     * @param {Schema|Set} _oRef -- Object Reference to item being described\n     * @param {object} _data -- Initial Data {parent:Schema|Set}\n     */\n    constructor(_oRef, _data = {}) {\n        let _cName = wf.Fun.getConstructorName(_oRef);\n\n        if (this._createID == null) {\n            let _id = 0;\n            MetaData.prototype._createID = function () {\n                if (this.__objID == null) {\n                    _id = _id + 1;\n                    this.__objID = `${_cName}${_id}`;\n                }\n                return this.__objID;\n            };\n        }\n\n        // ensures existance of writeLock param\n        if (!_data.hasOwnProperty(\"_writeLock\") || _data._writeLock === void(0)) {\n            _data._writeLock = false;\n        }\n\n        _data = Object.assign({}, _data, {\n            _id: this._createID(),\n            _className: _cName,\n            _created: Date.now()\n        });\n\n        _mData.set(this, _data);\n        _mdRef.set(this, this);\n    }\n\n    /**\n     * @param {string} key\n     */\n    get(key) {\n        let __ = _mData.get(this);\n        return __.hasOwnProperty(key) ? __[key] : null;\n    }\n\n    /**\n     * not implemented\n     */\n    set() {\n        return this;\n    }\n\n    /**\n     * UUID of element\n     * @returns {string} Unique ObjectID\n     */\n    get objectID() {\n        return this.get(\"_id\");\n    }\n\n    /**\n     * Root Schema element\n     * @returns {Schema|Set}\n     */\n    get root() {\n        return this.get(\"_root\");\n    }\n\n    /**\n     * Path to element\n     * @returns {string}\n     */\n    get path() {\n        return this.get(\"_path\");\n    }\n\n    /**\n     * Owner JSD document\n     * @returns {JSD}\n     */\n    get jsd() {\n        return this.get(\"_jsd\");\n    }\n\n    /**\n     * path to parent element\n     * @returns {string}\n     */\n    get parent() {\n        let _ = this.path || \"\";\n        let _p = _.split(\".\");\n        _p = (_p.length > 1) ? _p.slice(0, _p.length - 2).join(\".\") : _p[0];\n        return _p.length ? this.root.get(_p) : this.root;\n    }\n\n    /**\n     *\n     * @returns {*}\n     */\n    get writeLock() {\n        return this.get(\"_writeLock\");\n    }\n\n    toString() {\n        return JSON.stringify(_mData.get(this));\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/_metaData.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "_mData",
    "memberof": "src/classes/_metaData.js",
    "static": true,
    "longname": "src/classes/_metaData.js~_mData",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/_metaData.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "class",
    "name": "MetaData",
    "memberof": "src/classes/_metaData.js",
    "static": true,
    "longname": "src/classes/_metaData.js~MetaData",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_metaData.js",
    "importStyle": "{MetaData}",
    "description": "",
    "lineNumber": 8,
    "interface": false
  },
  {
    "__docId__": 51,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Schema",
          "Set"
        ],
        "spread": false,
        "optional": false,
        "name": "_oRef",
        "description": "- Object Reference to item being described"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "_data",
        "description": "- Initial Data {parent:Schema|Set}"
      }
    ]
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "__objID",
    "memberof": "src/classes/_metaData.js~MetaData",
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#__objID",
    "access": "private",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "method",
    "name": "get",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#get",
    "access": "public",
    "description": "",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "method",
    "name": "set",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#set",
    "access": "public",
    "description": "not implemented",
    "lineNumber": 54,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "get",
    "name": "objectID",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#objectID",
    "access": "public",
    "description": "UUID of element",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} Unique ObjectID"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Unique ObjectID"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "get",
    "name": "root",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#root",
    "access": "public",
    "description": "Root Schema element",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Schema|Set}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Schema",
        "Set"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "get",
    "name": "path",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#path",
    "access": "public",
    "description": "Path to element",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "get",
    "name": "jsd",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#jsd",
    "access": "public",
    "description": "Owner JSD document",
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{JSD}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "JSD"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "get",
    "name": "parent",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#parent",
    "access": "public",
    "description": "path to parent element",
    "lineNumber": 94,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "get",
    "name": "writeLock",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#writeLock",
    "access": "public",
    "description": "",
    "lineNumber": 105,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "toString",
    "memberof": "src/classes/_metaData.js~MetaData",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_metaData.js~MetaData#toString",
    "access": "public",
    "description": null,
    "lineNumber": 109,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "file",
    "name": "src/classes/_observerBuilder.js",
    "content": "import {_exists, _observers} from \"./_references\";\nimport {BehaviorSubject} from \"rxjs/Rx\";\n\nexport class ObserverBuilder {\n    /**\n     * @constructor\n     */\n    constructor() {\n        _observers.set(this, {});\n    }\n\n    /**\n     * @returns {string[]} of validation paths\n     */\n    list() {\n        let _v = _observers.get(this);\n        return Object.keys(_v);\n    }\n\n    /**\n     * @param path {string}\n     * @returns {Observer} Observer at path reference\n     */\n    get(path) {\n        let _o = _observers.get(this);\n        return _exists(_o[path]) ? _o[path] : null;\n    }\n\n    /**\n     *\n     * @param forPath {string}\n     * @param oRef {Model|Schema|Set}\n     */\n    create(forPath, oRef) {\n        let _o = _observers.get(this);\n        _o[forPath] = {\n            onNext: new BehaviorSubject(null).skip(1),\n            onError: new BehaviorSubject(null).skip(1),\n            onComplete: new BehaviorSubject(null).skip(1),\n        }\n    }\n\n    /**\n     * calls next on Next Subject\n     * @param path {string}\n     * @param value {*}\n     */\n    next(path, value) {\n        let _o = this.get(path);\n        if (_o) {\n            _o.onNext.next(value);\n        }\n    }\n\n    /**\n     * calls next on Complete Subject\n     * @param path {string}\n     * @param value {*}\n     */\n    complete(path, value) {\n        let _o = this.get(path);\n        if (_o) {\n            _o.onComplete.next(value);\n        }\n    }\n\n    /**\n     * calls next on Error Subject\n     * @param path {string}\n     * @param value {*}\n     */\n    error(path, value) {\n        let _o = this.get(path);\n        if (_o) {\n            _o.onError.next(value);\n        }\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/_observerBuilder.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 63,
    "kind": "class",
    "name": "ObserverBuilder",
    "memberof": "src/classes/_observerBuilder.js",
    "static": true,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/_observerBuilder.js",
    "importStyle": "{ObserverBuilder}",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 64,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "list",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#list",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string[]} of validation paths"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": "of validation paths"
    },
    "params": []
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "get",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#get",
    "access": "public",
    "description": "",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Observer} Observer at path reference"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Observer"
      ],
      "spread": false,
      "description": "Observer at path reference"
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "create",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#create",
    "access": "public",
    "description": "",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "forPath",
        "description": "{string}"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "oRef",
        "description": "{Model|Schema|Set}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "next",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#next",
    "access": "public",
    "description": "calls next on Next Subject",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "{string}"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "{*}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "complete",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#complete",
    "access": "public",
    "description": "calls next on Complete Subject",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "{string}"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "{*}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "error",
    "memberof": "src/classes/_observerBuilder.js~ObserverBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_observerBuilder.js~ObserverBuilder#error",
    "access": "public",
    "description": "calls next on Error Subject",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "{string}"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "{*}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "src/classes/_references.js",
    "content": "/**\n * @private Weakmap Refs\n */\nimport {exists, Fun, Obj, Str} from \"jsd-utils\";\nexport const _exists = exists;\nexport const wf = {\n    Fun:Fun,\n    Obj: Obj,\n    Str: Str\n};\n/**\n * Holder for registered JS Object references\n *\n * @type {WeakMap}\n * @private\n */\nexport const _kinds = new WeakMap();\n/**\n * Holder for Schema and Set instance references\n *\n * @type {WeakMap}\n * @private\n */\nexport const _object = new WeakMap();\n/**\n * Holder for MetaData references\n * @type {WeakMap}\n * @private\n */\nexport const _mdRef = new WeakMap();\n/**\n * Holder for lists of required elements for each Schema Node\n *\n * @type {WeakMap}\n * @private\n */\nexport const _required_elements = new WeakMap();\n/**\n * Holder for Schema Validators\n * @type {WeakMap}\n * @private\n */\nexport const _validators = new WeakMap();\n/**\n * Holder for Singleton instance references\n *\n * @type {WeakMap}\n * @private\n */\nexport const _singletons = new WeakMap();\n/**\n * Holder for `Set` element types\n *\n * @type {WeakMap}\n * @private\n */\nexport const _vectorTypes = new WeakMap();\n/**\n * Holder for Schema options refeerences\n *\n * @type {WeakMap}\n * @private\n */\nexport const _schemaOptions = new WeakMap();\n/**\n * Holder for Schema Helpers references\n *\n * @type {WeakMap}\n * @private\n */\nexport const _schemaHelpers = new WeakMap();\n/**\n * Holder for Schema Signatures references\n *\n * @type {WeakMap}\n * @private\n */\nexport const _schemaSignatures = new WeakMap();\n/**\n * Holder for RXJS Observer references\n * @type {WeakMap}\n * @private\n */\nexport const _observers = new WeakMap();\n/**\n * Holder for Validation path references\n * @type {WeakMap}\n * @private\n */\nexport const _validPaths = new WeakMap();\n/**\n * Holder for Observer Builders\n * @type {WeakMap}\n * @private\n */\nexport const _oBuilders = new WeakMap();\n/**\n * Holder for Validator Builders\n * @type {WeakMap}\n * @private\n */\nexport const _vBuilders = new WeakMap();\n/**\n * Holder for Validation Paths\n * @type {WeakMap}\n * @private\n */\nexport const _vPaths = new WeakMap();\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/_references.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "variable",
    "name": "_exists",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_exists",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_exists}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "variable",
    "name": "wf",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~wf",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{wf}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "{\"Fun\": *, \"Obj\": *, \"Str\": *}"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "variable",
    "name": "_kinds",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_kinds",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_kinds}",
    "description": "Holder for registered JS Object references",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 75,
    "kind": "variable",
    "name": "_object",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_object",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_object}",
    "description": "Holder for Schema and Set instance references",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 76,
    "kind": "variable",
    "name": "_mdRef",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_mdRef",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_mdRef}",
    "description": "Holder for MetaData references",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 77,
    "kind": "variable",
    "name": "_required_elements",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_required_elements",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_required_elements}",
    "description": "Holder for lists of required elements for each Schema Node",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 78,
    "kind": "variable",
    "name": "_validators",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_validators",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_validators}",
    "description": "Holder for Schema Validators",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 79,
    "kind": "variable",
    "name": "_singletons",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_singletons",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_singletons}",
    "description": "Holder for Singleton instance references",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "name": "_vectorTypes",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_vectorTypes",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_vectorTypes}",
    "description": "Holder for `Set` element types",
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 81,
    "kind": "variable",
    "name": "_schemaOptions",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_schemaOptions",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_schemaOptions}",
    "description": "Holder for Schema options refeerences",
    "lineNumber": 64,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 82,
    "kind": "variable",
    "name": "_schemaHelpers",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_schemaHelpers",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_schemaHelpers}",
    "description": "Holder for Schema Helpers references",
    "lineNumber": 71,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "name": "_schemaSignatures",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_schemaSignatures",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_schemaSignatures}",
    "description": "Holder for Schema Signatures references",
    "lineNumber": 78,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 84,
    "kind": "variable",
    "name": "_observers",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_observers",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_observers}",
    "description": "Holder for RXJS Observer references",
    "lineNumber": 84,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 85,
    "kind": "variable",
    "name": "_validPaths",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_validPaths",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_validPaths}",
    "description": "Holder for Validation path references",
    "lineNumber": 90,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "name": "_oBuilders",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_oBuilders",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_oBuilders}",
    "description": "Holder for Observer Builders",
    "lineNumber": 96,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 87,
    "kind": "variable",
    "name": "_vBuilders",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_vBuilders",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_vBuilders}",
    "description": "Holder for Validator Builders",
    "lineNumber": 102,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 88,
    "kind": "variable",
    "name": "_vPaths",
    "memberof": "src/classes/_references.js",
    "static": true,
    "longname": "src/classes/_references.js~_vPaths",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_references.js",
    "importStyle": "{_vPaths}",
    "description": "Holder for Validation Paths",
    "lineNumber": 108,
    "type": {
      "nullable": null,
      "types": [
        "WeakMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 89,
    "kind": "file",
    "name": "src/classes/_schemaHelpers.js",
    "content": "import {_exists, _mdRef, _required_elements, _vBuilders} from \"./_references\";\nimport {ensureRequiredFields} from \"./utils\";\nimport {MetaData} from \"./_metaData\";\nimport {Schema} from \"./schema\";\nimport {Set} from \"./set\";\nimport {JSD} from \"./jsd\";\n\n/**\n * @private\n */\nexport class SchemaHelpers {\n    /**\n     * @constructor\n     */\n    constructor(_ref) {\n        if (!_exists(_ref) || (typeof _ref) !== \"object\") {\n            throw new Error(\"arguments[0] must be an object\");\n        }\n\n        this._ref = _ref;\n        Object.seal(this);\n    }\n\n    /**\n     * traverses schema node and builds list of required elements for reference\n     * @param _signature\n     */\n    referenceRequiredElements(_signature) {\n        // traverses elements of schema checking for elements marked as required\n        if (_exists(_signature.elements)) {\n            _signature = _signature.elements;\n            for (let _sigEl of Object.keys(_signature)) {\n                // -- tests for element `required`\n                if (_signature[_sigEl].hasOwnProperty(\"required\") &&\n                    _signature[_sigEl].required === true) {\n                    // -- adds required element to list\n                    _required_elements.get(this._ref).splice(-1, 0, _sigEl);\n                }\n            }\n            // freezes req'd elements object to prevent modification\n            _required_elements.set(this._ref, Object.freeze(_required_elements.get(this._ref)));\n        }\n    }\n\n    /**\n     * Sets Object key/vals upon Schema Reference\n     * @param obj\n     * @returns {*}\n     */\n    setObject(obj) {\n        obj = ensureRequiredFields(this._ref, obj);\n        if (typeof obj === \"string\") {\n            return obj;\n        }\n        // calls set with nested key value pair\n        Object.keys(obj).forEach((k) => {\n            let eMsg = this._ref.set(k, obj[k]);\n            if (typeof eMsg === \"string\") {\n                throw new Error(eMsg);\n            }\n        });\n        return this._ref;\n    }\n\n    /**\n     *\n     * @param key\n     * @param value\n     * @returns {*}\n     */\n    setChildObject(key, value) {\n        let _mdData = _mdRef.get(this._ref);\n        let _s = this.createSchemaChild(key, value, this._ref.options || {}, _mdData);\n        if (typeof _s === \"string\") {\n            return _s;\n        } else if (!_exists(_s) ||\n            typeof _s !== \"object\") {\n            return `'${key}' was invalid`;\n        }\n        _s.model = value;\n        return _s.model;\n    }\n\n    /**\n     * retrieves child element from Model signature\n     * @param key {string) key for Model's Child element\n     * @returns {Object|Boolean}\n     */\n    getSchemaElement(key) {\n        const _schemaRef = this._ref.schema;\n        if (key === \"polymorphic\") {\n            return _schemaRef.polymorphic[0];// {\"*\": {type: \"Array\", polymorphic: _schemaRef.polymorphic}};\n        }\n        if (_schemaRef.hasOwnProperty(key)) {\n            return _schemaRef[key];\n        }\n\n        if (_schemaRef.hasOwnProperty(\"elements\")) {\n            return _schemaRef.elements[key] || _schemaRef.elements;\n        }\n\n        if (_schemaRef.hasOwnProperty(\"polymorphic\")) {\n            return { type: \"Array\", polymorphic: _schemaRef.polymorphic}; // _schemaRef.polymorphic[key] || _schemaRef.polymorphic;\n        }\n        const _opts = this._ref.options || Schema.defaultOptions;\n        return _opts.extensible ? JSD.defaults : false;\n    };\n\n    /**\n     *\n     * @param key\n     * @param value\n     * @param opts\n     * @param metaData\n     * @returns {Schema|Set|string} - Schema, Set or error string\n     */\n    createSchemaChild(key, value, opts, metaData) {\n        let _s; // will be set with Schema | Set\n        let _d = Object.assign({\n            _path: key,\n            _root: this._ref.root,\n            _jsd: this._ref.jsd,\n        }, metaData || {});\n        let _md = new MetaData(this._ref, _d);\n        // tests for nested sub-elements with partial paths as keys\n        if (key.match(/\\.?polymorphic\\.\\d$/) !== null) {\n                key = \"polymorphic\";\n        }\n        else if (key.match(/.*\\.+.*/) !== null) {\n            key = key.split(\".\").pop();\n        }\n        // tests if value is not Array\n        let _kS =  this.getSchemaElement(key);\n        if (_kS.type !== \"Array\" && !Array.isArray(_kS) && !Array.isArray(value)) {\n            let _schemaDef = (_kS.hasOwnProperty(\"elements\") ? _kS.elements[key.split(\".\").pop()] : false) ||\n                _kS[\"*\"] || _kS;\n            try {\n                _s = new Schema(_schemaDef, opts, _md);\n            } catch (e) {\n\n                return e.message;\n            }\n        } else {\n            try {\n                let _sig = this._ref.signature[key].polymorphic || this._ref.signature[key];\n                _s = new Set({\"*\": _sig}, opts, _md);\n            } catch (e) {\n                return e;\n            }\n        }\n        return _s;\n    }\n\n    /**\n     *\n     * @param key\n     * @param value\n     * @returns {*}\n     */\n    validate(key, value) {\n        const _vBuilder = this._ref.validatorBuilder;\n        let msg = `unable to resolve path for \"${key}\"`;\n        _vBuilder.resolvePath(this._ref.validationPath, key)\n            .some((path) => {\n                msg = this._ref.validatorBuilder.exec(path, value);\n                return (msg === true);\n            });\n        return msg;\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/_schemaHelpers.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 90,
    "kind": "class",
    "name": "SchemaHelpers",
    "memberof": "src/classes/_schemaHelpers.js",
    "static": true,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_schemaHelpers.js",
    "importStyle": "{SchemaHelpers}",
    "description": "",
    "lineNumber": 11,
    "interface": false
  },
  {
    "__docId__": 91,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 92,
    "kind": "member",
    "name": "_ref",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#_ref",
    "access": "private",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "referenceRequiredElements",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#referenceRequiredElements",
    "access": "public",
    "description": "traverses schema node and builds list of required elements for reference",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "_signature",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "setObject",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#setObject",
    "access": "public",
    "description": "Sets Object key/vals upon Schema Reference",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "setChildObject",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#setChildObject",
    "access": "public",
    "description": "",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "getSchemaElement",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#getSchemaElement",
    "access": "public",
    "description": "retrieves child element from Model signature",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object|Boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "{string) key for Model's Child element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "createSchemaChild",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#createSchemaChild",
    "access": "public",
    "description": "",
    "lineNumber": 117,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Schema|Set|string} - Schema, Set or error string"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "metaData",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Schema",
        "Set",
        "string"
      ],
      "spread": false,
      "description": "Schema, Set or error string"
    }
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "validate",
    "memberof": "src/classes/_schemaHelpers.js~SchemaHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaHelpers.js~SchemaHelpers#validate",
    "access": "public",
    "description": "",
    "lineNumber": 160,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 99,
    "kind": "file",
    "name": "src/classes/_schemaValidator.js",
    "content": "import {wf, _exists, _schemaOptions, _vBuilders} from \"./_references\";\n\n/**\n * @private\n * @class\n */\nexport class SchemaValidator {\n    /**\n     *\n     * @param _schema {object}\n     * @param opts {object}\n     */\n    constructor(_schema = {}, opts = {extensible: false}) {\n        let _errorMsg;\n        _schemaOptions.set(this, opts);\n        Object.defineProperty(this, \"isValid\", {\n            get: () => _errorMsg || true,\n            enumerable: false,\n        });\n        // schema is expected to be object\n        if ((typeof _schema) !== \"object\") {\n            try {\n                // attempts to parse JSON formatted string...\n                _schema = JSON.parse(_schema.toString());\n            } catch (e) {\n                // throws error and aborts if parsing failed\n                throw \"Schema was invalid. JSON object or formatted string is required\";\n            }\n        }\n        // inits validation of Schema entries\n        _errorMsg = SchemaValidator.eval(_schema, this);\n    }\n\n    /**\n     *  @param {string} key\n     *  @param {string} _type\n     */\n    validateTypeString(key, _type) {\n        //- ignores special `default` object key\n        if (key.match(/\\.?default+$/)) {\n            return true;\n        }\n        //- handles restrictions defined in `restrict` object key\n        if (key.match(/\\.?restrict+$/)) {\n            if (typeof _type !== \"string\" || !_type.length) {\n                return \"restrict requires a Regular Expression String\";\n            }\n            try {\n                //- tests for valid RegExp string\n                \"text\".match(new RegExp(_type));\n            }\n            catch (e) {\n                return `Regular Expression provided for '${key}' was invalid. ${e}`;\n            }\n        }\n        //- tests for basic string type declaration {key: {type: \"String\"} }\n        else {\n            if (!_exists(this.jsd.getClass(wf.Str.capitalize(_type)))) {\n                return `type '<${_type}>' for schema element '${key}' was invalid`;\n            }\n        }\n        return true;\n    }\n\n    /**\n     *\n     * @param key\n     * @param params\n     * @returns {boolean|string}\n     */\n    validateUntypedMembers(key, params) {\n        if (Array.isArray(params)) {\n            for (let item of params) {\n                let _res;\n                if (typeof (_res = this.validateSchemaEntry(`${key}`, item)) === \"string\") {\n                    return _res;\n                }\n            }\n        }\n        else {\n            let _p;\n            let keyPath;\n            if ((_p = (keyPath = key.split(\".\")).pop()) !== \"elements\") {\n                if (_p === \"default\") {\n                    return true;\n                }\n                if (Array.isArray(params)) {\n                    params = {polymorphic: params};\n                }\n                if (params.hasOwnProperty(\"polymorphic\")) {\n                    return this.validatePolymorphicEntry(`${key}.polymorphic`, params.polymorphic);\n                }\n                return `value for schema element '${key}' was malformed. Property 'type' was missing`;\n            }\n            else {\n                for (let param of Object.keys(params)) {\n                    let _res;\n                    let _keys = [].concat(keyPath).concat(param);\n                    if (typeof (_res = this.validateSchemaEntry(`${_keys.join(\".\")}`, params[param])) === \"string\") {\n                        return _res;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     *\n     * @param key\n     * @param params\n     * @returns {boolean|string}\n     */\n    validateSchemaClass(key, params) {\n        if (!_exists(key)) {\n            throw \"key was undefined\";\n        }\n        if (typeof key !== \"string\") {\n            throw `string expected for argument 'key'. Type was '<${typeof key}>'`;\n        }\n        if (!_exists(params)) {\n            throw \"params was undefined\";\n        }\n        if (typeof params !== \"object\") {\n            throw `object expected for argument 'params'. Type was '<${typeof params}>'`;\n        }\n        if (params.type === \"*\") {\n            return true;\n        }\n        if (Object.keys(params).length === 0) {\n            return true;\n        }\n        if (typeof params.type === \"object\") {\n            return this.validateSchemaEntry(key, params.type);\n        }\n        if (key.split(\".\").pop() === \"default\") {\n            if (this._defaults == null) {\n                this._defaults = {};\n            }\n            this._defaults[key] = params;\n            return true;\n        }\n        return `value for schema element '${key}' has invalid type '<${params.type}>'`;\n    }\n\n    /**\n     * @param {string} key\n     * @param {string} sKey\n     * @param {object} params\n     */\n    validateSchemaParamString(key, sKey, params) {\n        let _schemaKeys = this.jsd.schemaRef;\n        let opts = _schemaOptions.get(this);\n        // handles special `restrict` key\n        if (sKey === \"restrict\") {\n            try {\n                new RegExp(params[sKey]);\n            }\n            catch (e) {\n                return e;\n            }\n            return true;\n        }\n        // rejects values for keys not found in Schema\n        if (sKey !== \"*\" && !_exists(_schemaKeys[sKey]) &&\n            opts.extensible === false) {\n            return `schema element '${key}.${sKey}' is not allowed`;\n        }\n        let eMsg = this.validateTypeString(`${key}.${sKey}`, params[sKey]);\n        if (typeof eMsg === \"string\") {\n            return eMsg;\n        }\n        _vBuilders.get(this.jsd).create(params, key);\n        return true;\n    }\n\n    /**\n     *\n     * @param key\n     * @param sKey\n     * @param _schemaKeys\n     * @param params\n     * @returns {boolean|string}\n     */\n    validateSchemaParam(key, sKey, _schemaKeys, params) {\n        let _type;\n        let eMsg;\n        // rejects unknown element if schema non-extensible\n        if (sKey !== \"*\" && !_exists(_schemaKeys[sKey]) &&\n            !_schemaOptions.get(this).extensible) {\n            return `schema element '${key}.${sKey}' is not allowed`;\n        }\n        // returns result of Params String Validation\n        if (typeof params[sKey] === \"string\") {\n            let eMsg = this.validateSchemaParamString(key, sKey, params);\n            if (typeof eMsg === \"string\") {\n                return eMsg;\n            }\n        }\n\n        if (sKey === \"polymorphic\") {\n            return this.validatePolymorphicEntry(key, params);\n        }\n\n        // returns result of\n        if (typeof _schemaKeys[sKey] === \"object\") {\n            // handles `elements` object\n            if (sKey === \"elements\") {\n                let _iterate = Array.isArray(params.elements) ? params.elements : Object.keys(params.elements);\n                for (let xKey of _iterate) {\n                    if (typeof xKey === \"string\") {\n                        eMsg = this.validateSchemaEntry(`${key}.${xKey}`, params.elements[xKey]);\n                        if (typeof eMsg === \"string\") {\n                            return eMsg;\n                        }\n                    } else {\n                        eMsg = this.validateSchemaParam(key, xKey.type, _schemaKeys, params.elements);\n                        if (typeof eMsg === \"string\") {\n                            return eMsg;\n                        }\n                    }\n                }\n                return true;\n            }\n            // attempts to handle Native Types\n            else {\n                _type = _schemaKeys[sKey].type;\n                if (!_exists(_type)) {\n                    return `type attribute was not defined for ${key}`;\n                }\n\n                if (!Array.isArray(_type)) {\n                    _type = _type.type;\n                }\n\n                if (params.type === \"*\") {\n                    return true;\n                } else if (_type.indexOf(params.type) < 0) {\n                    return `type attribute was not defined for ${sKey}`;\n                }\n            }\n        }\n        // creates validator for all paths that pass schema validation\n        _vBuilders.get(this.jsd).create(params, key);\n        return true;\n    }\n\n    /**\n     *\n     * @param key\n     * @param params\n     * @param opts\n     * @returns {boolean|string}\n     */\n    validateSchemaEntry(key, params, opts) {\n        let _schemaKeys = this.jsd.schemaRef;\n        if (!_exists(opts)) {\n            opts = _schemaOptions.get(this);\n        }\n        if (key === \"polymorphic\") {\n            return this.validatePolymorphicEntry(`${key}`, params, opts);\n        }\n        if (!_exists(params)) {\n            return `${key} was null or undefined`;\n        }\n        if ((typeof params) === \"boolean\") {\n            return true;\n        }\n        if ((typeof params) === \"string\") {\n            return this.validateTypeString(`${key}`, params);\n        }\n        if ((typeof params) === \"object\") {\n            // handled Objects with no `type` element\n            if (!params.hasOwnProperty(\"type\")) {\n                return this.validateUntypedMembers(key, params);\n            }\n            // handles Classes/Functions\n            if ((this.jsd.getClass(params.type)) === null) {\n                return this.validateSchemaClass(key, params);\n            }\n\n            if (params.type === \"Array\") {\n                // Arrays are dealt with as polymorphic elements internally\n                if (params.hasOwnProperty(\"elements\")) {\n                    params.polymorphic = Array.isArray(params.elements) ?\n                        [].concat(params.elements) : [Object.assign({}, params.elements)];\n                    delete params.elements;\n                }\n                _vBuilders.get(this.jsd).create(params, key);\n                key = `${key}.*.polymorphic`;\n\n                if (params.hasOwnProperty(\"polymorphic\")) {\n                    if (!Array.isArray(params.polymorphic)) {\n                        params.polymorphic = [params.elements];\n                    }\n                    return this.validatePolymorphicEntry(key, params.polymorphic);\n                }\n            }\n\n            // handles child elements\n            for (let sKey of Object.keys(params)) {\n                let __ = this.validateSchemaParam(key, sKey, _schemaKeys, params);\n                if (typeof __ === \"string\") {\n                    return __;\n                }\n            }\n            return true;\n        }\n        // handles non-object entries (Function, String, Number, Boolean, ...)\n        else {\n            let _t = typeof params;\n            if (_t !== \"function\") {\n                let _ = _schemaKeys[key.split(\".\").pop()];\n                // tests for everything that\"s not a string, _object or function\n                if (_ !== wf.Str.capitalize(_t)) {\n                    return `value for schema element '${key}' has invalid type :: \"<${_t}>\"`;\n                }\n            }\n            else {\n                let _ = wf.Fun.getConstructorName(params);\n                // tests for function\"s constructor name\n                if (_ !== _schemaKeys[key]) {\n                    return `value for schema element '${key}' has invalid class or method \"<${_}>\"`;\n                }\n            }\n            return true;\n        }\n    }\n\n    /**\n     *\n     * @param key\n     * @param params\n     * @param opts\n     * @returns {boolean|string}\n     */\n    validatePolymorphicEntry(key, params, opts) {\n        let cnt = 0;\n        try {\n            params.forEach((entry) => {\n                let itmKey = `${key}.${cnt}`;\n                let e = this.validateSchemaEntry(itmKey, entry, opts);\n                if ((typeof e) === \"string\") {\n                    throw e;\n                }\n                _vBuilders.get(this.jsd).create(entry, itmKey);\n                cnt++;\n            });\n        } catch (e) {\n            return e;\n        }\n\n        return true;\n    }\n\n    /**\n     *\n     * @returns {JSD}\n     */\n    get jsd() {\n        return _schemaOptions.get(this).jsd;\n    }\n\n    /**\n     *\n     * @param _schema\n     * @param caller\n     * @returns {boolean}\n     */\n    static eval(_schema, caller) {\n        let _errorMsg = true;\n        let _iterate = Array.isArray(_schema) ? _schema : Object.keys(_schema);\n        for (let _oKey of _iterate) {\n            if (_oKey && typeof _oKey === \"object\") {\n                let e = SchemaValidator.eval(_oKey, caller);\n                if (typeof e === \"string\") {\n                    _errorMsg = e;\n                    break;\n                }\n                break;\n            }\n            switch (typeof _schema[_oKey]) {\n                case \"string\":\n                    _errorMsg = caller.validateSchemaEntry(_oKey, _schema[_oKey]);\n                    break;\n                case \"object\":\n                    if (!Array.isArray(_schema[_oKey])) {\n                        if (_oKey !== \"elements\") {\n                            _errorMsg = caller.validateSchemaEntry(_oKey, _schema[_oKey]);\n                        }\n                        else {\n                            for (let _x of Object.keys(_schema[_oKey])) {\n                                if (typeof (_errorMsg = caller.validateSchemaEntry(_x, _schema[_oKey][_x])) === \"string\") {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (_oKey === \"polymorphic\") {\n                            return caller.validatePolymorphicEntry(_oKey, _schema[_oKey]);\n                        }\n                        for (let _s of _schema[_oKey]) {\n                            if (typeof _schema[_oKey][_s] === \"string\") {\n                                _errorMsg = caller.validateTypeString(_oKey, _s);\n                            }\n                            else {\n                                _errorMsg = caller.validateSchemaEntry(_oKey, _s);\n                            }\n                            if ((typeof _errorMsg) === \"string\") {\n                                return _errorMsg;\n                            }\n                        }\n                    }\n                    break;\n                case \"boolean\":\n                    _errorMsg = caller.validateSchemaEntry(_oKey, _schema[_oKey]);\n                    break;\n                default:\n                    _errorMsg = `value for schema element '${_oKey}' was invalid`;\n            }\n            if ((typeof _errorMsg) === \"string\") {\n                return _errorMsg;\n            }\n        }\n        return _errorMsg;\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/_schemaValidator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 100,
    "kind": "class",
    "name": "SchemaValidator",
    "memberof": "src/classes/_schemaValidator.js",
    "static": true,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_schemaValidator.js",
    "importStyle": "{SchemaValidator}",
    "description": "",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 101,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_schemaValidator.js~SchemaValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "_schema",
        "description": "{object}"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": "{object}"
      }
    ]
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "validateTypeString",
    "memberof": "src/classes/_schemaValidator.js~SchemaValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator#validateTypeString",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "_type",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "validateUntypedMembers",
    "memberof": "src/classes/_schemaValidator.js~SchemaValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator#validateUntypedMembers",
    "access": "public",
    "description": "",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean|string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean",
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "validateSchemaClass",
    "memberof": "src/classes/_schemaValidator.js~SchemaValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator#validateSchemaClass",
    "access": "public",
    "description": "",
    "lineNumber": 114,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean|string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean",
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 105,
    "kind": "member",
    "name": "_defaults",
    "memberof": "src/classes/_schemaValidator.js~SchemaValidator",
    "static": false,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator#_defaults",
    "access": "private",
    "description": null,
    "lineNumber": 138,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "validateSchemaParamString",
    "memberof": "src/classes/_schemaValidator.js~SchemaValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator#validateSchemaParamString",
    "access": "public",
    "description": "",
    "lineNumber": 151,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sKey",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "validateSchemaParam",
    "memberof": "src/classes/_schemaValidator.js~SchemaValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator#validateSchemaParam",
    "access": "public",
    "description": "",
    "lineNumber": 185,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean|string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "sKey",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "_schemaKeys",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean",
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "validateSchemaEntry",
    "memberof": "src/classes/_schemaValidator.js~SchemaValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator#validateSchemaEntry",
    "access": "public",
    "description": "",
    "lineNumber": 255,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean|string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean",
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "validatePolymorphicEntry",
    "memberof": "src/classes/_schemaValidator.js~SchemaValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator#validatePolymorphicEntry",
    "access": "public",
    "description": "",
    "lineNumber": 337,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean|string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean",
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 110,
    "kind": "get",
    "name": "jsd",
    "memberof": "src/classes/_schemaValidator.js~SchemaValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator#jsd",
    "access": "public",
    "description": "",
    "lineNumber": 360,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{JSD}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "JSD"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "eval",
    "memberof": "src/classes/_schemaValidator.js~SchemaValidator",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/_schemaValidator.js~SchemaValidator.eval",
    "access": "public",
    "description": "",
    "lineNumber": 370,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "_schema",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "caller",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 112,
    "kind": "file",
    "name": "src/classes/_validatorBuilder.js",
    "content": "/**\n * @private\n */\nimport {_exists, _validators, wf} from \"./_references\";\nimport {remapPolypath} from \"./utils\";\nimport {Validator} from \"./_validators\"\nimport {JSD} from \"./jsd\";\n\n/**\n * Regex that matches other Regex\n * todo: look into IDEA's \"redundant escape character\" warning\n * @type {RegExp}\n */\nexport const rxRx = /\\/((?![*+?])(?:[^\\r\\n\\[/\\\\]|\\\\.|\\[(?:[^\\r\\n\\]\\\\]|\\\\.)*\\])+)\\/((?:g(?:im?|mi?)?|i(?:gm?|mg?)?|m(?:gi?|ig?)?)?)/;\n\n/**\n * @private\n */\nexport class ValidatorBuilder {\n    /**\n     * @constructor\n     */\n    constructor(jsd) {\n        if ((!jsd) || !(jsd instanceof JSD)) {\n            throw \"JSD is required at arguments[0]\";\n        }\n        Object.defineProperty(this, \"$jsd\", {\n            get: () => jsd,\n            enumerable: false,\n        });\n        _validators.set(this, {});\n        Object.seal(this);\n    }\n\n    /**\n     * Returns list of validation paths\n     * @returns {array}\n     */\n    list() {\n        let _v = _validators.get(this);\n        return Object.keys(_v);\n    }\n\n    /**\n     * Gets Validator at `path` from Validator Hash\n     * @param path\n     * @returns item at path reference\n     */\n    get(path) {\n        let _v = _validators.get(this);\n        return (_v.hasOwnProperty(path)) ? _v[path] : null;\n    }\n\n    /**\n     * Sets Validator at `path` in Validator Hash\n     * @param path\n     * @param func\n     */\n    set(path, func) {\n        if (!_exists(func) || typeof func !== \"function\") {\n            return \"ValidatorBuilder set: expects a function at arguments[1]\";\n        }\n\n        _validators.get(this)[path] = func;\n        return this;\n    }\n\n    /**\n     * resolves all paths that match registered validators\n     * @param path\n     * @param key\n     * @returns {string[]}\n     */\n    resolvePath(path, key) {\n        key = `${key}`.replace(new RegExp(`^${wf.Str.regexEscape(path)}\\\\.(.*)`), \"$1\");\n        // escapes regex special chars on `path` string\n        path = wf.Str.regexEscape(`${path}`);\n\n        // escapes regex special chars on `key` string\n        key = wf.Str.regexEscape(`${key}`);\n\n        // matches path + key OR wildcard OR actual regexp as key\n        let rx = new RegExp(`${path}\\\\.?(${key}+|\\\\*|${rxRx.toString().replace(/\\/(.*)+\\//g, '$1')})`);\n\n        // filter paths by Regexp.test\n        let _matches = this.list().filter((vItm) => rx.test(vItm));\n\n        // todo: work in a more elegant solution\n        // if no matches are found, we attempt to match against nested wildcards...\n        if (!_matches.length) {\n            let wPath = path.replace(/([^\\.]+\\.?)/g, \"*.\").replace(/^(.*)\\.+$/, \"$1\");\n            rx = new RegExp(`${wPath}\\\\.?(${key}+|\\\\*|${rxRx.toString().replace(/\\/(.*)+\\//g, '$1')})`);\n            _matches = this.list().filter((vItm) => rx.test(vItm));\n        }\n\n        // attempts to find an exact string match in the filtered results\n        let _exactMatch = _matches.find((vItm) => {\n            let _path = path !== \"\" ? `${path}\\\\.${key}` : `${key}`;\n            return wf.Str.regexEscape(vItm) === _path;\n        });\n\n        return _exactMatch ? [_exactMatch] : _matches;\n    }\n\n    /**\n     * Creates new Validation for Schema/Set items\n     * @param ref\n     * @param path\n     * @returns {function}\n     */\n    create(ref, path) {\n        const formatSig = (sig) => {\n            // todo: remove condition for polymorphic and refactor code below\n            return !sig ? [] : sig.hasOwnProperty(\"polymorphic\") ?\n                sig.polymorphic : (Array.isArray(sig) ? sig : [sig]);\n        };\n\n        const createFuncts = (_sigs) => {\n            if (!_sigs.hasOwnProperty(\"type\") || _sigs.type !== \"Array\") {\n                _sigs = formatSig(_sigs);\n            } else {\n                _sigs = [_sigs];\n            }\n            _sigs.forEach(sig => {\n                if (typeof sig !== \"object\") {\n                    _functs.push(new Validator[\"Default\"](path, sig, this.$jsd));\n                }\n                if (sig.hasOwnProperty(\"*\")) {\n                    createFuncts(sig[\"*\"].elements || sig[\"*\"].polymorphic || sig[\"*\"]);\n                    delete sig[\"*\"];\n                    if (Object.keys(sig) > 0) {\n                        createFuncts(sig.elements || sig.polymorphic || sig);\n                    }\n                    return;\n                }\n                if (sig.hasOwnProperty(\"type\")) {\n                    let _typeof = wf.Str.capitalize(sig.type);\n                    let _hasKey = (0 <= Object.keys(Validator).indexOf(_typeof));\n                    let _path = remapPolypath(path);\n                    _v = new Validator[_hasKey ? _typeof : \"Default\"](_path, sig, this.$jsd);\n                    _functs.push(_v);\n                }\n            });\n        };\n\n        let _v = _validators.get(this);\n        let _functs = [];\n\n        if (ref.hasOwnProperty(\"type\") && ref.type === \"Array\") {\n            createFuncts(ref);\n        } else {\n            createFuncts(formatSig(ref));\n        }\n\n        // evaluates all defined functions, returning true or last error message\n        const _f = (value) => {\n            let _result;\n            let e;\n            for (let idx in _f.$functs) {\n                if (_f.$functs.hasOwnProperty(idx)) {\n                    _result = _f.$functs[idx].exec(value);\n                    if ((typeof _result) === \"boolean\") {\n                        return _result\n                    } else {\n                        e = _result;\n                    }\n                }\n            }\n            return e || true;\n        };\n        this.set(remapPolypath(path), _f);\n        Object.defineProperty(_f, \"$functs\", {\n            get: () => _functs,\n            enumerable: false,\n        });\n        // returns closure to caller\n        return _f;\n    }\n\n    /**\n     * Executes validator `value` with validator at `path`\n     * @param path\n     * @param value\n     */\n    exec(path, value) {\n        let _v = _validators.get(this);\n        if (!_v.hasOwnProperty(path)) {\n            return `validator for '${path}' does not exist`;\n        }\n        return _v[path](value);\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/_validatorBuilder.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 113,
    "kind": "variable",
    "name": "rxRx",
    "memberof": "src/classes/_validatorBuilder.js",
    "static": true,
    "longname": "src/classes/_validatorBuilder.js~rxRx",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/_validatorBuilder.js",
    "importStyle": "{rxRx}",
    "description": "Regex that matches other Regex\ntodo: look into IDEA's \"redundant escape character\" warning",
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "RegExp"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 114,
    "kind": "class",
    "name": "ValidatorBuilder",
    "memberof": "src/classes/_validatorBuilder.js",
    "static": true,
    "longname": "src/classes/_validatorBuilder.js~ValidatorBuilder",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_validatorBuilder.js",
    "importStyle": "{ValidatorBuilder}",
    "description": "",
    "lineNumber": 19,
    "interface": false
  },
  {
    "__docId__": 115,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_validatorBuilder.js~ValidatorBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validatorBuilder.js~ValidatorBuilder#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "list",
    "memberof": "src/classes/_validatorBuilder.js~ValidatorBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validatorBuilder.js~ValidatorBuilder#list",
    "access": "public",
    "description": "Returns list of validation paths",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{array}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "get",
    "memberof": "src/classes/_validatorBuilder.js~ValidatorBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validatorBuilder.js~ValidatorBuilder#get",
    "access": "public",
    "description": "Gets Validator at `path` from Validator Hash",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "item at path reference"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "item at path reference"
    }
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "set",
    "memberof": "src/classes/_validatorBuilder.js~ValidatorBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validatorBuilder.js~ValidatorBuilder#set",
    "access": "public",
    "description": "Sets Validator at `path` in Validator Hash",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "resolvePath",
    "memberof": "src/classes/_validatorBuilder.js~ValidatorBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validatorBuilder.js~ValidatorBuilder#resolvePath",
    "access": "public",
    "description": "resolves all paths that match registered validators",
    "lineNumber": 74,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string[]}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "create",
    "memberof": "src/classes/_validatorBuilder.js~ValidatorBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validatorBuilder.js~ValidatorBuilder#create",
    "access": "public",
    "description": "Creates new Validation for Schema/Set items",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "ref",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "exec",
    "memberof": "src/classes/_validatorBuilder.js~ValidatorBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validatorBuilder.js~ValidatorBuilder#exec",
    "access": "public",
    "description": "Executes validator `value` with validator at `path`",
    "lineNumber": 185,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "file",
    "name": "src/classes/_validators.js",
    "content": "import {_exists, wf, _validPaths, _vBuilders} from \"./_references\";\n\n/**\n * Holder for Validator Class References\n */\nexport const Validator = {};\n\n/**\n * @private\n */\nexport class BaseValidator {\n    /**\n     * @constructor\n     */\n    constructor(path, signature, jsd) {\n        if (!jsd) {\n            throw `JSD is required for '${path}'`;\n        }\n        this.path = path;\n        this._signature = JSON.stringify(signature);\n        this.jsd = jsd;\n        this.validations[path] = -1;\n        Object.seal(this);\n    }\n\n    get signature() {\n        return JSON.parse(this._signature);\n    }\n\n    /**\n     * invokes `exec` for validator on object child elements\n     * @param path\n     * @param value\n     * @returns {*}\n     */\n    call(path, value) {\n        // attempt to reference validator at path\n        let __ = _vBuilders.get(this.jsd).get(path);\n        // tests for existence of validator\n        if (_exists(__) && typeof __ === \"function\") {\n            const e = __(value);\n            // sets result of validation\n            this.validations[path] = ((typeof e) !== \"string\") || e;\n            return e;\n        }\n        // returns error message if unable to find validator for path\n        return `'${path}' has no validator defined`;\n    }\n\n    /**\n     * tests typeof value reference\n     *\n     * @param type {*}\n     * @param value {*}\n     * @returns {Boolean|String}\n     */\n    checkType(type, value) {\n        // evaluation closure to test typeof element\n        let _eval = (type, value) => {\n            let _x = (typeof type !== \"string\") ? this.jsd.getClass([type]) : type;\n            // tests for special '*' (wildcard) type\n            if (_x === \"*\") {\n                return true;\n            }\n            // tests for explicit type match\n            if (_x.match(new RegExp(`^${typeof value}$`, \"i\")) === null) {\n                return `'${this.path}' expected ${type}, type was '<${typeof value}>'`\n            }\n            return true;\n        };\n        // tests that param `type` exists\n        if (_exists(type)) {\n            // tests if `type` is Array\n            // -- NOTE: this should allow an Array of Types\n            // -- might want re-evaluate this\n            if (Array.isArray(type)) {\n                let _res = \"unable to find type for Array values\";\n                // tests each `type` specified in Set until we find a true value\n                type.some((k) => {\n                    _res = _eval(k, value);\n                    return ((typeof _res) === \"boolean\");\n                });\n                return _res;\n            }\n            // performs eval on type against value\n            return _eval(type, value);\n        } else {\n            // returns error string if `type` was undefined\n            return `type '${type}' for ${this.path} was undefined`;\n        }\n    }\n\n    /**\n     * default exec method, must be overridden by subclass\n     *\n     * @param value\n     * @returns {string}\n     */\n    exec(value) {\n        return `${wf.Fun.getConstructorName(this)} requires override of 'exec'`;\n    }\n\n    /**\n     * getter returns Hash of all validations defined for this document\n     *\n     * @returns {V}\n     */\n    get validations() {\n        return _validPaths.get(this.jsd);\n    }\n}\n\nValidator.Array = class Arr extends BaseValidator {\n    /**\n     * @constructor\n     * @param path\n     * @param signature\n     * @param jsd\n     */\n    constructor(path, signature, jsd) {\n        super(path, signature, jsd);\n    }\n\n    /**\n     * validates Object datatypes\n     *\n     * @param value\n     * @returns {*}\n     */\n    exec(value) {\n        if (!Array.isArray(value)) {\n            return `type of array was expected for '${this.path}'. type was '<${typeof value}>'`;\n        }\n        return true;\n    }\n};\n\n/**\n * @private\n */\nValidator.Object = class Obj extends BaseValidator {\n    /**\n     * @constructor\n     * @param path\n     * @param signature\n     * @param jsd\n     */\n    constructor(path, signature, jsd) {\n        super(path, signature, jsd);\n    }\n\n    /**\n     * validates Object datatypes\n     *\n     * @param value\n     * @returns {*}\n     */\n    exec(value) {\n        let _iterate = (key, _val) => {\n            // replaces \".\" path with \"\"\n            let _p = `${this.path}.${key}`;\n            // obtains Validator Builder for this Document\n            let _v = _vBuilders.get(this.jsd);\n            // tests for Validator for path\n            if (!_v.get(_p)) {\n                // creates new Validator for path using signature for key\n                let _sig = this.signature.elements[key] || this.signature.elements[\"*\"];\n                _vBuilders.get(this.jsd).create(_sig, _p, this.jsd);\n            }\n            // calls the validator with path and value\n            let e = this.call(_p, _val);\n            if ((typeof e) === \"string\") {\n                return e;\n            }\n        };\n        if (typeof value === \"object\") {\n            if (!Array.isArray(value)) {\n                for (let _k in value) {\n                    if (value.hasOwnProperty(_k)) {\n                        let _res = _iterate(_k, value[_k]);\n                        if (typeof _res === \"string\") {\n                            return _res;\n                        }\n                    }\n                }\n            }\n            else {\n                for (let __ in value) {\n                    if (value.hasOwnProperty(__)) {\n                        let e = this.call(this.path, value[__]);\n                        if (typeof e === \"string\") {\n                            return e;\n                        }\n                    }\n                }\n            }\n            return true;\n        }\n        else {\n            return `'${this.path}' expected value of type 'Object'. Type was '<${typeof value}>'`;\n        }\n    }\n};\n/**\n * @private\n */\nValidator.Boolean = class Bool extends BaseValidator {\n    /**\n     * @constructor\n     * @param path\n     * @param signature\n     * @param jsd\n     */\n    constructor(path, signature, jsd) {\n        super(path, signature, jsd);\n    }\n\n    /**\n     * validates Boolean datatypes\n     *\n     * @param value\n     * @returns {Boolean|String}\n     */\n    exec(value) {\n        return this.checkType(\"boolean\", value);\n    }\n};\n\n/**\n * @private\n */\nValidator.String = class Str extends BaseValidator {\n    /**\n     * @constructor\n     * @param path\n     * @param signature\n     * @param jsd\n     */\n    constructor(path, signature, jsd) {\n        super(path, signature, jsd);\n    }\n\n    /**\n     * validates String datatypes\n     *\n     * @param value\n     * @returns {*}\n     */\n    exec(value) {\n        let __ = this.checkType(\"string\", value);\n        if ((typeof __) === \"string\") {\n            return __;\n        }\n        if (_exists(this.signature.restrict)) {\n            let _rxStr;\n            let _rxFlags;\n            /*\n                Allow restrict to be Array or String\n                if Array, first element is rx string, second element is rx flags\n             */\n            if (Array.isArray(this.signature.restrict)) {\n                _rxStr = this.signature.restrict[0];\n                _rxFlags = this.signature.restrict.length > 1 ? this.signature.restrict[1] : \"\";\n            } else {\n                _rxStr = this.signature.restrict;\n                _rxFlags = \"\";\n            }\n            // todo: loo into IDEA's \"duplicate \\\\ character\" warning\n            if (!_exists(new RegExp(_rxStr.replace(/[\\\\\\\\]{2,}/g, \"\\\\\"), _rxFlags).exec(value))) {\n                return `value '${value}' for ${this.path} did not match required expression`;\n            }\n        }\n        return true;\n    }\n};\n\n/**\n * @private\n */\nValidator.Number = class Num extends BaseValidator {\n    /**\n     * @constructor\n     * @param path\n     * @param signature\n     * @param jsd\n     */\n    constructor(path, signature, jsd) {\n        super(path, signature, jsd);\n    }\n\n    /**\n     * validates Number datatypes\n     *\n     * @param value\n     * @returns {*}\n     */\n    exec(value) {\n        let __ = this.checkType(\"number\", value);\n        if (typeof __ === \"string\") {\n            return __;\n        }\n        // attempts to cast to number\n        return !isNaN(Number(value)) ? true : `${this.path} was unable to process '${value}' as Number`;\n    }\n};\n\n/**\n * @private\n */\nValidator.Function = class Fun extends BaseValidator {\n    /**\n     * @constructor\n     * @param path\n     * @param signature\n     * @param jsd\n     */\n    constructor(path, signature, jsd) {\n        super(path, signature, jsd);\n    }\n\n    /**\n     * validates Function datatypes\n     *\n     * @param value\n     * @returns {*}\n     */\n    exec(value) {\n        let _x = typeof this.signature.type === \"string\" ?\n            this.signature.type :\n            wf.Fun.getConstructorName(this.signature.type);\n        let _fn = wf.Fun.getConstructorName(value);\n        return _x === _fn ? true :\n            `${this.path} requires '$_x' got '<${_fn}>' instead`;\n    }\n};\n\n/**\n * @private\n */\nValidator.Default = class Def extends BaseValidator {\n    /**\n     * @constructor\n     * @param path\n     * @param signature\n     * @param jsd\n     */\n    constructor(path, signature, jsd) {\n        super(path, signature, jsd);\n    }\n\n    /**\n     * validates unknown (default) datatypess\n     * @param value\n     * @returns {*}\n     */\n    exec(value) {\n        const _testValidator = (type, value) => {\n            if (type === \"*\") {\n                return true;\n            }\n            let _val = Validator[wf.Str.capitalize(type)];\n            if (!_exists(_val)) {\n                return `'${this.path}' was unable to obtain validator for type '<${type}>'`;\n            }\n            let _ = new _val(this.path, this.signature, this.jsd);\n            return _.exec(value);\n        };\n        let _x = typeof this.signature.type === \"string\"\n            ? this.jsd.getClass(this.signature.type)\n            : this.signature.type;\n        let _tR = this.checkType(_x, value);\n        if (typeof _tR === \"string\") {\n            return _tR;\n        }\n        if (Array.isArray(_x)) {\n            let _ = _x.map(itm => {\n                let _clazz = this.jsd.getClass(itm);\n                return _testValidator(_clazz, value);\n            });\n            return (0 <= _.indexOf(true)) ? true : _[_.length - 1];\n        }\n        return _testValidator(_x, value);\n    }\n};\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/_validators.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 123,
    "kind": "variable",
    "name": "Validator",
    "memberof": "src/classes/_validators.js",
    "static": true,
    "longname": "src/classes/_validators.js~Validator",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/_validators.js",
    "importStyle": "{Validator}",
    "description": "Holder for Validator Class References",
    "lineNumber": 6,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "class",
    "name": "BaseValidator",
    "memberof": "src/classes/_validators.js",
    "static": true,
    "longname": "src/classes/_validators.js~BaseValidator",
    "access": "private",
    "export": true,
    "importPath": "jsd/src/classes/_validators.js",
    "importStyle": "{BaseValidator}",
    "description": "",
    "lineNumber": 11,
    "interface": false
  },
  {
    "__docId__": 125,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_validators.js~BaseValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~BaseValidator#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 126,
    "kind": "member",
    "name": "path",
    "memberof": "src/classes/_validators.js~BaseValidator",
    "static": false,
    "longname": "src/classes/_validators.js~BaseValidator#path",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "member",
    "name": "_signature",
    "memberof": "src/classes/_validators.js~BaseValidator",
    "static": false,
    "longname": "src/classes/_validators.js~BaseValidator#_signature",
    "access": "private",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "member",
    "name": "jsd",
    "memberof": "src/classes/_validators.js~BaseValidator",
    "static": false,
    "longname": "src/classes/_validators.js~BaseValidator#jsd",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 129,
    "kind": "get",
    "name": "signature",
    "memberof": "src/classes/_validators.js~BaseValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~BaseValidator#signature",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "call",
    "memberof": "src/classes/_validators.js~BaseValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~BaseValidator#call",
    "access": "public",
    "description": "invokes `exec` for validator on object child elements",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "checkType",
    "memberof": "src/classes/_validators.js~BaseValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~BaseValidator#checkType",
    "access": "public",
    "description": "tests typeof value reference",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean|String}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "{*}"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "{*}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean",
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 132,
    "kind": "method",
    "name": "exec",
    "memberof": "src/classes/_validators.js~BaseValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~BaseValidator#exec",
    "access": "public",
    "description": "default exec method, must be overridden by subclass",
    "lineNumber": 99,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 133,
    "kind": "get",
    "name": "validations",
    "memberof": "src/classes/_validators.js~BaseValidator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~BaseValidator#validations",
    "access": "public",
    "description": "getter returns Hash of all validations defined for this document",
    "lineNumber": 108,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{V}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "V"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "class",
    "name": "Array",
    "memberof": "src/classes/_validators.js",
    "static": true,
    "longname": "src/classes/_validators.js~Array",
    "access": "public",
    "export": false,
    "importPath": "jsd/src/classes/_validators.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseValidator"
    ],
    "ignore": true
  },
  {
    "__docId__": 135,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_validators.js~Array",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Array#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 120,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "signature",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "jsd",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "exec",
    "memberof": "src/classes/_validators.js~Array",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Array#exec",
    "access": "public",
    "description": "validates Object datatypes",
    "lineNumber": 130,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 137,
    "kind": "class",
    "name": "Object",
    "memberof": "src/classes/_validators.js",
    "static": true,
    "longname": "src/classes/_validators.js~Object",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/_validators.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 141,
    "interface": false,
    "extends": [
      "BaseValidator"
    ],
    "ignore": true
  },
  {
    "__docId__": 138,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_validators.js~Object",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Object#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 148,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "signature",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "jsd",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "exec",
    "memberof": "src/classes/_validators.js~Object",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Object#exec",
    "access": "public",
    "description": "validates Object datatypes",
    "lineNumber": 158,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 140,
    "kind": "class",
    "name": "Boolean",
    "memberof": "src/classes/_validators.js",
    "static": true,
    "longname": "src/classes/_validators.js~Boolean",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/_validators.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 207,
    "interface": false,
    "extends": [
      "BaseValidator"
    ],
    "ignore": true
  },
  {
    "__docId__": 141,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_validators.js~Boolean",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Boolean#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 214,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "signature",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "jsd",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "exec",
    "memberof": "src/classes/_validators.js~Boolean",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Boolean#exec",
    "access": "public",
    "description": "validates Boolean datatypes",
    "lineNumber": 224,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean|String}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean",
        "String"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 143,
    "kind": "class",
    "name": "String",
    "memberof": "src/classes/_validators.js",
    "static": true,
    "longname": "src/classes/_validators.js~String",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/_validators.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 232,
    "interface": false,
    "extends": [
      "BaseValidator"
    ],
    "ignore": true
  },
  {
    "__docId__": 144,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_validators.js~String",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~String#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 239,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "signature",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "jsd",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "exec",
    "memberof": "src/classes/_validators.js~String",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~String#exec",
    "access": "public",
    "description": "validates String datatypes",
    "lineNumber": 249,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 146,
    "kind": "class",
    "name": "Number",
    "memberof": "src/classes/_validators.js",
    "static": true,
    "longname": "src/classes/_validators.js~Number",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/_validators.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 280,
    "interface": false,
    "extends": [
      "BaseValidator"
    ],
    "ignore": true
  },
  {
    "__docId__": 147,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_validators.js~Number",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Number#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 287,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "signature",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "jsd",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 148,
    "kind": "method",
    "name": "exec",
    "memberof": "src/classes/_validators.js~Number",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Number#exec",
    "access": "public",
    "description": "validates Number datatypes",
    "lineNumber": 297,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 149,
    "kind": "class",
    "name": "Function",
    "memberof": "src/classes/_validators.js",
    "static": true,
    "longname": "src/classes/_validators.js~Function",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/_validators.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 310,
    "interface": false,
    "extends": [
      "BaseValidator"
    ],
    "ignore": true
  },
  {
    "__docId__": 150,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_validators.js~Function",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Function#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 317,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "signature",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "jsd",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 151,
    "kind": "method",
    "name": "exec",
    "memberof": "src/classes/_validators.js~Function",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Function#exec",
    "access": "public",
    "description": "validates Function datatypes",
    "lineNumber": 327,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 152,
    "kind": "class",
    "name": "Default",
    "memberof": "src/classes/_validators.js",
    "static": true,
    "longname": "src/classes/_validators.js~Default",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/_validators.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 340,
    "interface": false,
    "extends": [
      "BaseValidator"
    ],
    "ignore": true
  },
  {
    "__docId__": 153,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/_validators.js~Default",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Default#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 347,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "signature",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "jsd",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "exec",
    "memberof": "src/classes/_validators.js~Default",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/_validators.js~Default#exec",
    "access": "public",
    "description": "validates unknown (default) datatypess",
    "lineNumber": 356,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 155,
    "kind": "file",
    "name": "src/classes/jsd.js",
    "content": "/**\n * Strict JS Objects and Collections created from JSON Schema Definitions\n * @class JSD\n * @example const _jsd = new JSD();\n * _jsd.document = {name: \"test\"};\n * console.log(`${jsd.document.name}`);\n * // -> \"test\"\n * console.log(`${jsd.document.get(\".\"}`);\n * // -> Schema\n */\nimport {wf, _kinds, _validPaths, _oBuilders, _vBuilders} from \"./_references\";\nimport {ObserverBuilder} from \"./_observerBuilder\";\nimport {ValidatorBuilder} from \"./_validatorBuilder\";\nimport {Schema} from \"./schema\";\nimport {Set} from \"./set\";\nimport {SchemaValidator} from \"./_schemaValidator\";\n\nconst _documents = new WeakMap();\n\n/**\n * JSD Document Entrypoint\n * @public\n */\nexport class JSD {\n    /**\n     * @constructor\n     * @param schema\n     * @param options\n     */\n    constructor(schema = JSD.defaults, options = Schema.defaultOption) {\n        _kinds.set(this, {\n            \"Array\": Array,\n            \"ArrayBuffer\": ArrayBuffer,\n            \"Boolean\": Boolean,\n            \"Buffer\": ArrayBuffer,\n            \"Date\": Date,\n            \"Number\": Number,\n            \"Object\": Object,\n            \"String\": String,\n            \"Function\": Function,\n        });\n\n\n        const vBuilder = new ValidatorBuilder(this);\n        _vBuilders.set(this, vBuilder);\n        _validPaths.set(this, {});\n        _oBuilders.set(this, new ObserverBuilder());\n\n        let _useSet = false;\n\n        if ((Array.isArray(schema)) ||\n            (schema.hasOwnProperty(\"type\") && schema.type === \"Array\")) {\n            _useSet = true;\n            // internally we handle all Sets as Polymorphic elements\n            schema = {\"*\": {polymorphic: Array.isArray(schema) ? schema : [schema]}};\n        }\n\n        // attempts to validate provided `schema` entries\n        let _sV = new SchemaValidator(schema, Object.assign({}, this.options, {\n            jsd: this,\n        }));\n\n        let eMsg;\n        // throws error if error message returned\n        if (typeof (eMsg = _sV.isValid) === \"string\") {\n            throw eMsg;\n        }\n\n        _documents.set(this, new (!_useSet ? Schema : Set)(schema, options, this));\n    }\n\n    /**\n     * @param key {String}\n     */\n    get(key) {\n        return _documents.get(this).get(key);\n    }\n\n    /**\n     * getter for Model document\n     * @returns {Schema|Set}\n     */\n    get document() {\n        return _documents.get(this);\n    }\n\n    /**\n     * getter for validation status\n     * @returns {boolean}\n     */\n    get isValid() {\n        return this.document.isValid;\n    }\n\n    /**\n     * @param {string|function|string[]} classesOrNames\n     * @returns {function|function[]|string|string[]|*[]}\n     */\n    getClass(classesOrNames) {\n        let _k = _kinds.get(this);\n        if (!Array.isArray(classesOrNames)) {\n            classesOrNames = [classesOrNames];\n        }\n        // traverses arguments\n        for (let arg of classesOrNames) {\n            if ((typeof arg) === \"string\") {\n                if (arg === \"*\") {\n                    // handles special * type\n                    return \"*\";\n                }\n                return (0 <= Object.keys(_k).indexOf(arg)) ? arg.toLowerCase() : null;\n            }\n            // operates on object\n            if (typeof arg === \"object\") {\n                //- operates on arrays\n                if (Array.isArray(arg)) {\n                    //- holds the results set\n                    let _r = [];\n                    // traverses array elements\n                    for (let n of arg) {\n                        //- tests elements\n                        switch (typeof n) {\n                            //- operates on string\n                            case \"string\":\n                                // sets reference onto results\n                                _r.push(this.getClass(n));\n                                break;\n                            //-- operates on functions/classes\n                            case \"function\":\n                                //- sets function/class on results\n                                _r.push(n);\n                                break;\n                            default:\n                                //- handles nested arrays\n                                _r.push(Array.isArray(n) ? this.getClass.apply(this, n) : null);\n                        }\n                    } //- end for/switch\n                    return (0 <= _r.indexOf(null)) ? {_r: null} : undefined;\n                } //- ends array handling\n                return null;\n            } //- end typrof arg is object\n            if (typeof arg === \"function\") {\n                let _ = wf.Fun.getConstructorName(arg);\n                return this.getClass(_);\n            }\n        } //- end args in classesOrNames\n        return null;\n    }\n\n    /**\n     * @param {string} name\n     * @param {function} clazz\n     */\n    registerClass(name, clazz) {\n        this[name] = clazz;\n        return _kinds.get(this)[name] = clazz;\n    }\n\n    /**\n     * @param {string} name\n     */\n    unregisterClass(name) {\n        if (_kinds.hasOwnProperty(name)) {\n            return delete _kinds.get(this)[name];\n        }\n        return false\n    }\n\n    /**\n     * lists registered Class Names\n     * @return {string[]}\n     */\n    listClasses() {\n        return Object.keys(_kinds.get(this));\n    }\n\n    /**\n     * creates new Schema from JSON data\n     * @param {string|object} json\n     * @returns {JSD}\n     */\n    static fromJSON(json) {\n        let _;\n        if (_ = (typeof json).match(/^(string|object)+$/)) {\n            return new JSD((_[1] === \"string\") ? JSON.parse(json) : json);\n        }\n        throw new Error(\"json must be either JSON formatted string or object\");\n    }\n\n    /**\n     * getter for base schema element signature\n     * @returns {object}\n     */\n    get schemaRef() {\n        let _keys = [].concat(Object.keys(_kinds.get(this)));\n        return {\n            type: {\n                type: _keys,\n                required: true\n            },\n            required: \"Boolean\",\n            extensible: \"Boolean\",\n            restrict: \"String\",\n            default: \"*\",\n            elements: [\"Object\", \"Array\"],\n            polymorphic: {\n                type: [\"Object\", \"Array\"],\n                required: false,\n                elements: {\n                    type: {\n                        type: this.listClasses(),\n                        required: true\n                    },\n                    extensible: \"Boolean\",\n                    restrict: \"String\",\n                    validate: \"Function\",\n                    default: \"*\",\n                    elements: [\"Object\", \"Array\"]\n                }\n            }\n        };\n    }\n\n    /**\n     * @getter\n     * @returns {object} base schema element settings\n     * @example let schema = Object.assign({}, {extensible: true}, JSD.defaults);\n     * console.log( JSON.stringify( schema ) );\n     * // -> `{ \"myElement\": { \"type\": \"*\", \"required\": false, \"extensible\": true } }`\n     *\n     */\n    static get defaults() {\n        return {\n            type: \"Object\",\n            required: false,\n            extensible: true,\n            writeLock: false,\n            elements: {\n                \"*\": {\n                    type: \"*\",\n                    required: false,\n                    extensible: true\n                }\n            }\n        };\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/jsd.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 156,
    "kind": "variable",
    "name": "_documents",
    "memberof": "src/classes/jsd.js",
    "static": true,
    "longname": "src/classes/jsd.js~_documents",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/jsd.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 157,
    "kind": "class",
    "name": "JSD",
    "memberof": "src/classes/jsd.js",
    "static": true,
    "longname": "src/classes/jsd.js~JSD",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/jsd.js",
    "importStyle": "{JSD}",
    "description": "JSD Document Entrypoint",
    "lineNumber": 24,
    "interface": false
  },
  {
    "__docId__": 158,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "schema",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 159,
    "kind": "method",
    "name": "get",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#get",
    "access": "public",
    "description": "",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "{String}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "get",
    "name": "document",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#document",
    "access": "public",
    "description": "getter for Model document",
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Schema|Set}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Schema",
        "Set"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 161,
    "kind": "get",
    "name": "isValid",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#isValid",
    "access": "public",
    "description": "getter for validation status",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "getClass",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#getClass",
    "access": "public",
    "description": "",
    "lineNumber": 99,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function|function[]|string|string[]|*[]}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "function",
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "classesOrNames",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function",
        "function[]",
        "string",
        "string[]",
        "*[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 163,
    "kind": "method",
    "name": "registerClass",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#registerClass",
    "access": "public",
    "description": "",
    "lineNumber": 154,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "clazz",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 164,
    "kind": "member",
    "name": "[name]",
    "memberof": "src/classes/jsd.js~JSD",
    "static": false,
    "longname": "src/classes/jsd.js~JSD#[name]",
    "access": "public",
    "description": null,
    "lineNumber": 155,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "unregisterClass",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#unregisterClass",
    "access": "public",
    "description": "",
    "lineNumber": 162,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "method",
    "name": "listClasses",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#listClasses",
    "access": "public",
    "description": "lists registered Class Names",
    "lineNumber": 173,
    "return": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 167,
    "kind": "method",
    "name": "fromJSON",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/jsd.js~JSD.fromJSON",
    "access": "public",
    "description": "creates new Schema from JSON data",
    "lineNumber": 182,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{JSD}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "json",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "JSD"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 168,
    "kind": "get",
    "name": "schemaRef",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/jsd.js~JSD#schemaRef",
    "access": "public",
    "description": "getter for base schema element signature",
    "lineNumber": 194,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "{\"type\": *, \"required\": string, \"extensible\": string, \"restrict\": string, \"default\": string, \"elements\": *, \"polymorphic\": *}"
      ]
    }
  },
  {
    "__docId__": 169,
    "kind": "get",
    "name": "defaults",
    "memberof": "src/classes/jsd.js~JSD",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/jsd.js~JSD.defaults",
    "access": "public",
    "description": "",
    "examples": [
      "let schema = Object.assign({}, {extensible: true}, JSD.defaults);\nconsole.log( JSON.stringify( schema ) );\n// -> `{ \"myElement\": { \"type\": \"*\", \"required\": false, \"extensible\": true } }`"
    ],
    "lineNumber": 232,
    "unknown": [
      {
        "tagName": "@getter",
        "tagValue": ""
      },
      {
        "tagName": "@returns",
        "tagValue": "{object} base schema element settings"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "base schema element settings"
    },
    "type": {
      "types": [
        "{\"type\": string, \"required\": *, \"extensible\": boolean, \"writeLock\": *, \"elements\": *}"
      ]
    }
  },
  {
    "__docId__": 170,
    "kind": "file",
    "name": "src/classes/model.js",
    "content": "import {\n    _mdRef, _oBuilders, _vBuilders, _exists,\n    _validPaths, _object, _schemaSignatures,\n    _schemaOptions\n} from \"./_references\";\nimport {JSD} from \"./jsd\";\nimport {remapPolypath} from \"./utils\";\nimport {MetaData} from \"./_metaData\";\n\n/**\n *\n * @param ref\n * @param writeLock\n * @param metaRef\n */\nconst createMetaDataRef = (ref, writeLock, metaRef) => {\n    let _md;\n    if (metaRef instanceof JSD) {\n        // root elements are handed the JSD object\n        // will create new MetaData and set reference as root element\n        _md = new MetaData(ref, {\n            _path: \"\",\n            _root: ref,\n            _writeLock: writeLock,\n            _jsd: metaRef,\n        });\n    }\n    else if ((typeof metaRef) === \"object\") {\n        // extends MetaData reference\n        if (metaRef instanceof MetaData) {\n            _md = metaRef;\n        } else {\n            // todo: re-evaluate this line for possible removal\n            _md = new MetaData(this, metaRef);\n        }\n    } else {\n        throw \"Invalid attempt to construct Model.\" +\n        \"tip: use `new JSD([schema])` instead\"\n    }\n    // sets MetaData object to global reference\n    _mdRef.set(ref, _md);\n};\n\n/**\n *\n */\nexport class Model {\n    constructor(writeLock = false) {\n        // tests if this is instance of MetaData\n        if (!(this instanceof MetaData)) {\n            createMetaDataRef(this, writeLock, arguments[1]);\n        }\n    }\n\n    /**\n     * subscribes handler method to observer for model\n     * @param func\n     * @returns {_subs}\n     */\n    subscribe(func) {\n        return this.subscribeTo(this.path, func);\n    }\n\n    /**\n     * stub for sub-class implementation\n     * @returns {{get: function, set: function}}\n     */\n    get handler() {\n        throw \"Model requires sub-classed implmentation of handler getter\"\n    }\n\n    /**\n     * subscribes handler method to property observer for path\n     * @param path\n     * @param func\n     * @returns {_subs}\n     */\n    subscribeTo(path, func) {\n        // throws if argument is not an object or function\n        if ((typeof func).match(/^(function|object)$/) === null) {\n            throw new Error(\"subscribeTo requires function\");\n        }\n\n        // creates an extensible object to hold our unsubscribe method\n        const _subs = class {};\n        const _subRefs = [];\n        // references the ObserverBuilder for the path\n        let _o = this.observerBuilder.get(path);\n\n        if (!_o || _o === null) {\n            this.observerBuilder.create(path, this);\n            _o = this.observerBuilder.get(path);\n        }\n\n        // adds onNext handler if `next` prop is defined\n        if (func.hasOwnProperty(\"next\")) {\n            _subRefs.push(_o.onNext.subscribe({next: func.next}));\n        }\n\n        // adds onError handler if `error` prop is defined\n        if (func.hasOwnProperty(\"error\")) {\n            _subRefs.push(_o.onError.subscribe({next: func.error}));\n        }\n\n        // adds onComplete handler if `complete` prop is defined\n        if (func.hasOwnProperty(\"complete\")) {\n            _subRefs.push(_o.onComplete.subscribe({next: func.complete}));\n        }\n\n        // adds unsubscribe to the Proto object\n        _subs.prototype.unsubscribe = () => {\n            _subRefs.forEach((sub) => {\n                sub.unsubscribe();\n            });\n        };\n        return new _subs();\n    }\n\n    /**\n     * @returns {boolean|string} returns error string or true\n     */\n    validate() {\n        const paths = _validPaths.get(this.jsd);\n        try {\n            Object.keys(paths).forEach((k) => {\n                const _t = typeof paths[k];\n                if (_t === \"string\") {\n                    throw paths[k];\n                }\n            });\n        } catch (e) {\n            return e;\n        }\n        return true;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    get isValid() {\n        return (typeof this.validate() !== \"string\");\n    }\n\n    /**\n     * gets raw value of this model\n     * @returns {*}\n     */\n    valueOf() {\n        return _object.get(this);\n    }\n\n    /**\n     * JSONifies Schema Model\n     */\n    toJSON() {\n        let _derive = (itm) => {\n            if (itm.hasOwnProperty(\"toJSON\") &&\n                (typeof this.toJSON) === \"function\") {\n                return itm.toJSON();\n            }\n            if (typeof itm === \"object\") {\n                const _o = !Array.isArray(itm) ? {} : [];\n                for (let k in itm) {\n                    if (itm.hasOwnProperty(k)) {\n                        _o[k] = _derive(itm[k]);\n                    }\n                }\n                return _o;\n            }\n            return itm;\n        };\n        return _derive(this.valueOf());\n    }\n\n    /**\n     * JSON stringifies primitive value\n     * @param pretty - `prettifies` JSON output for readability\n     */\n    toString(pretty = false) {\n        return JSON.stringify(this.toJSON(), null, (pretty ? 2 : void(0)));\n    }\n\n    /**\n     * @returns {string} Object ID for Schema\n     */\n    get objectID() {\n        return _mdRef.get(this)._id;\n    }\n\n    /**\n     * getter for document root element\n     * @returns {Model}\n     */\n    get root() {\n        return _mdRef.get(this).root || this;\n    }\n\n    /**\n     * getter for `path` to current Element\n     * @returns {string}\n     */\n    get path() {\n        let __ = _mdRef.get(this).path;\n        return _exists(__) ? __ : \"\";\n    }\n\n    /**\n     * getter for models parent Schema or Set element\n     * @returns {Model}\n     */\n    get parent() {\n        let __ = _mdRef.get(this).root;\n        return _exists(__) ? __ : this;\n    }\n\n    /**\n     * getter for model\"s JSD owner object\n     * @returns {JSD}\n     */\n    get jsd() {\n        return _mdRef.get(this).jsd;\n    }\n\n    /**\n     * get options (if any) for this model\"s schema\n     */\n    get options() {\n        return _schemaOptions.get(this);\n    }\n\n    /**\n     * getter for ValidatorBuilder reference\n     * @returns {ValidatorBuilder}\n     */\n    get validatorBuilder() {\n        return _vBuilders.get(this.jsd);\n    }\n\n    /**\n     * getter for ObserverBuilder reference\n     * @returns {ObserverBuilder}\n     */\n    get observerBuilder() {\n        return _oBuilders.get(this.jsd);\n    }\n\n    /**\n     * applies Object.freeze to model and triggers complete notification\n     * @returns {Model}\n     */\n    lock() {\n        Object.freeze(_object.get(this));\n        const _self = this;\n        setTimeout(()=> {\n            _self.observerBuilder.complete(_self.path, _self);\n        }, 0);\n        return this;\n    }\n\n    /**\n     *\n     * @returns {boolean}\n     */\n    get isLocked() {\n        return Object.isFrozen(_object.get(this));\n    }\n\n\n    get validationPath() {\n        let _p = remapPolypath(this.path);\n        if (this.schema.hasOwnProperty(\"polymorphic\")) {\n            _p = _p.replace(/(\\.\\d\\.(?!polymorphic))+/, \".*.polymorphic.\");\n        }\n\n        return _p;\n    }\n\n    /**\n     * TODO: remove and standardize around `signature`\n     * @returns {*}\n     */\n    get schema() {\n        return JSON.parse(_schemaSignatures.get(this));\n    }\n\n    /**\n     *\n     * @returns {*}\n     */\n    get signature() {\n        return this.schema;\n    }\n\n    /**\n     * creates owner Model reference on Proxied data object\n     * @param ref\n     * @param obj\n     * @returns {*}\n     */\n    static createRef(ref, obj) {\n        Object.defineProperty(obj, \"$ref\", {\n            value: ref,\n            writable: false\n        });\n        return obj;\n    };\n}",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/model.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 171,
    "kind": "function",
    "name": "createMetaDataRef",
    "memberof": "src/classes/model.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/model.js~createMetaDataRef",
    "access": "public",
    "export": false,
    "importPath": "jsd/src/classes/model.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "ref",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "writeLock",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "metaRef",
        "description": ""
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 172,
    "kind": "class",
    "name": "Model",
    "memberof": "src/classes/model.js",
    "static": true,
    "longname": "src/classes/model.js~Model",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/model.js",
    "importStyle": "{Model}",
    "description": "",
    "lineNumber": 47,
    "interface": false
  },
  {
    "__docId__": 173,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "subscribe",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#subscribe",
    "access": "public",
    "description": "subscribes handler method to observer for model",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{_subs}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "_subs"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 175,
    "kind": "get",
    "name": "handler",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#handler",
    "access": "public",
    "description": "stub for sub-class implementation",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{get: function, set: function}}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{get: function, set: function}"
      ],
      "spread": false,
      "description": ""
    },
    "type": null
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "subscribeTo",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#subscribeTo",
    "access": "public",
    "description": "subscribes handler method to property observer for path",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{_subs}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "_subs"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "validate",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#validate",
    "access": "public",
    "description": "",
    "lineNumber": 122,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean|string} returns error string or true"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean",
        "string"
      ],
      "spread": false,
      "description": "returns error string or true"
    },
    "params": []
  },
  {
    "__docId__": 178,
    "kind": "get",
    "name": "isValid",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#isValid",
    "access": "public",
    "description": "",
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 179,
    "kind": "method",
    "name": "valueOf",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#valueOf",
    "access": "public",
    "description": "gets raw value of this model",
    "lineNumber": 148,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "toJSON",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#toJSON",
    "access": "public",
    "description": "JSONifies Schema Model",
    "lineNumber": 155,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 181,
    "kind": "method",
    "name": "toString",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#toString",
    "access": "public",
    "description": "JSON stringifies primitive value",
    "lineNumber": 179,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pretty",
        "description": "`prettifies` JSON output for readability"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 182,
    "kind": "get",
    "name": "objectID",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#objectID",
    "access": "public",
    "description": "",
    "lineNumber": 186,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} Object ID for Schema"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Object ID for Schema"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 183,
    "kind": "get",
    "name": "root",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#root",
    "access": "public",
    "description": "getter for document root element",
    "lineNumber": 194,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Model}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Model"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 184,
    "kind": "get",
    "name": "path",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#path",
    "access": "public",
    "description": "getter for `path` to current Element",
    "lineNumber": 202,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 185,
    "kind": "get",
    "name": "parent",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#parent",
    "access": "public",
    "description": "getter for models parent Schema or Set element",
    "lineNumber": 211,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Model}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Model"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 186,
    "kind": "get",
    "name": "jsd",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#jsd",
    "access": "public",
    "description": "getter for model\"s JSD owner object",
    "lineNumber": 220,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{JSD}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "JSD"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 187,
    "kind": "get",
    "name": "options",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#options",
    "access": "public",
    "description": "get options (if any) for this model\"s schema",
    "lineNumber": 227,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 188,
    "kind": "get",
    "name": "validatorBuilder",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#validatorBuilder",
    "access": "public",
    "description": "getter for ValidatorBuilder reference",
    "lineNumber": 235,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ValidatorBuilder}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ValidatorBuilder"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 189,
    "kind": "get",
    "name": "observerBuilder",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#observerBuilder",
    "access": "public",
    "description": "getter for ObserverBuilder reference",
    "lineNumber": 243,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ObserverBuilder}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ObserverBuilder"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "method",
    "name": "lock",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#lock",
    "access": "public",
    "description": "applies Object.freeze to model and triggers complete notification",
    "lineNumber": 251,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Model}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Model"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 191,
    "kind": "get",
    "name": "isLocked",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#isLocked",
    "access": "public",
    "description": "",
    "lineNumber": 264,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 192,
    "kind": "get",
    "name": "validationPath",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#validationPath",
    "access": "public",
    "description": null,
    "lineNumber": 269,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 193,
    "kind": "get",
    "name": "schema",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#schema",
    "access": "public",
    "description": "TODO: remove and standardize around `signature`",
    "lineNumber": 282,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 194,
    "kind": "get",
    "name": "signature",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/model.js~Model#signature",
    "access": "public",
    "description": "",
    "lineNumber": 290,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 195,
    "kind": "method",
    "name": "createRef",
    "memberof": "src/classes/model.js~Model",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/model.js~Model.createRef",
    "access": "public",
    "description": "creates owner Model reference on Proxied data object",
    "lineNumber": 300,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "ref",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 196,
    "kind": "file",
    "name": "src/classes/schema.js",
    "content": "import {\n    _mdRef, _required_elements, _object, _exists, _schemaHelpers,\n    _schemaOptions, _schemaSignatures, _validPaths, _vPaths\n} from \"./_references\";\nimport {ensureRequiredFields} from \"./utils\";\nimport {SchemaHelpers} from \"./_schemaHelpers\";\nimport {JSD} from \"./jsd\";\nimport {Model} from \"./model\";\nconst _init = new WeakMap()\n/**\n * @class Schema\n */\nexport class Schema extends Model {\n    /**\n     *\n     * @param _signature {Object} - schema definition object\n     * @param opts {Object} - schema options\n     */\n    constructor(_signature = Schema.defaultSignature, opts = Schema.defaultOptions) {\n        super(_signature.writeLock || false, arguments[2]);\n\n        if (!_exists(_signature)) {\n            throw `Schema requires JSON object at arguments[0]. Got '${typeof _signature}'`;\n        }\n\n        _init.set(this, false);\n\n        // freezes Options object to prevent modification\n        _schemaOptions.set(this, Object.freeze(opts));\n\n        // creates instance of SchemaHelpers\n        const _sH = new SchemaHelpers(this);\n\n        // initialized Required Elements reference\n        _required_elements.set(this, []);\n\n        // stores SchemaHelpers reference for later use\n        _schemaHelpers.set(this, _sH);\n\n        // populates Required Elements reference from schema values\n        _sH.referenceRequiredElements(_signature);\n\n        _vPaths.set(this, this.path);\n\n        // freezes schema signature to prevent modifications\n        const _sig = Object.freeze(_signature || JSD.defaults);\n        _schemaSignatures.set(this, JSON.stringify(_sig));\n\n        _object.set(this, new Proxy(Model.createRef(this, {}), this.handler));\n        // applies default values (if any) on the model\n        this.setDefaults();\n    }\n\n    /**\n     * Handler for Object Proxy Evaluation\n     * @returns {{get: function, set: function}}\n     */\n    get handler() {\n        return {\n            get: (t, key) => {\n                return key === \"$ref\" ? this : t[key];\n            },\n            set: (t, key, value) => {\n                let _sH = _schemaHelpers.get(this);\n                if (typeof key === \"object\") {\n                    const e = _sH.setObject(key);\n                    if (typeof e === \"string\") {\n                        this.observerBuilder.error(this.path, e);\n                        return false;\n                    }\n                    _validPaths.get(this.jsd)[this.path] = true;\n                    return true;\n                }\n\n                const keyPath = `${this.validationPath}.${key}`.replace(/^\\.?(.*)$/, \"$1\");\n                // determines if parent element is Array (Set)\n                const inSet = Array.isArray(this.parent.model);\n                // calls validate with either full path if in Schema or key if nested in Set\n                const _isValid = _sH.validate((!inSet ? keyPath : key), value);\n                if ((typeof _isValid) !== \"string\") {\n                    _validPaths.get(this.jsd)[this.path] = true;\n                    if ((typeof value) === \"object\") {\n                        value = _sH.setChildObject(key, value);\n                        if ((typeof value) === \"string\") {\n                            _validPaths.get(this.jsd)[this.path] = value;\n                            this.observerBuilder.error(this.path, value);\n                            return false;\n                        }\n                    }\n                    t[key] = value;\n                } else {\n                    _validPaths.get(this.jsd)[this.path] = _isValid;\n                }\n\n                const _e = this.validate();\n                if ((typeof _e) !== \"string\") {\n                    if (this.path.length) {\n                        // TODO: should evaluate this block\n                        const _p = Schema.concatPathAddr(this.path, key);\n                        this.observerBuilder.next(_p, value);\n                    }\n                    return true;\n                }\n                this.observerBuilder.error(this.path, _e);\n                return false;\n            }\n\n        };\n    }\n\n    /**\n     * utility method to create selector path\n     * @param path\n     * @param addr\n     * @returns {string}\n     */\n    static concatPathAddr(path, addr) {\n        return path.length ? `${path}.${addr}` : addr;\n    }\n\n    /**\n     * @returns schema signature object\n     */\n    get signature() {\n        return JSON.parse(_schemaSignatures.get(this));\n    }\n\n    /**\n     * getter for object model\n     */\n    get model() {\n        return _object.get(this);\n    }\n\n    /**\n     * setter for object model\n     * @param value\n     */\n    set model(value) {\n        let e;\n        // -- reset the proxy model to initial object state if not locked\n        if (!this.isLocked) {\n            _object.set(this, new Proxy(Model.createRef(this, {}), this.handler));\n            // -- preliminary setting of default values on initial object\n            this.setDefaults();\n        }\n        if (typeof value === \"object\") {\n            const keys = Object.keys(value);\n            if (keys.length) {\n                keys.forEach((k) => {\n                    // -- added try/catch to avoid error in jsfiddle\n                    try {\n                        this.model[k] = value[k];\n                    } catch (e) {\n                        _validPaths.get(this.jsd)[this.path] = e;\n                        this.observerBuilder.error(this.path, e);\n                        return false;\n                    }\n                });\n            }\n            // final check for required field and setting of defaults\n            let reqErr = ensureRequiredFields(this, value);\n            if ((typeof reqErr) === \"string\") {\n                // applies current state of `e` to validation hash\n                _validPaths.get(this.jsd)[this.path] = reqErr;\n            }\n\n            // tests current state of validation hash\n            e = this.validate();\n            if ((typeof e) !== \"string\") {\n                // tests for writeLock and locks model if set\n                if (_mdRef.get(this).writeLock && !this.isLocked) {\n                    this.lock();\n                }\n                // calls next's observable to update subscribers\n                this.observerBuilder.next(this.path, this);\n                return true;\n            } else {\n                this.observerBuilder.error(this.path, e);\n                return false;\n            }\n        } else {\n            e = `unable to set scalar value on model at ${this.path.length ? this.path : \".\"}`;\n            _validPaths.get(this.jsd)[this.path] = e;\n            this.observerBuilder.error(this.path, e);\n            return false;\n        }\n    }\n\n    /**\n     * @param {string} key\n     * @returns {any}\n     */\n    get(key) {\n        return this.model[key];\n    }\n\n    /**\n     * sets value to schema key\n     * @param {string|object} key\n     * @param {any} value\n     */\n    set(key, value) {\n        if (typeof key === \"string\") {\n            _validPaths.get(this.jsd)[this.path] = -1;\n            this.model[key] = value;\n            let valid = this.validate();\n            if (typeof valid === \"string\") {\n                this.observerBuilder.error(this.path, valid);\n                return false;\n            }\n        } else {\n            let e = ensureRequiredFields(this, key);\n            _validPaths.get(this.jsd)[this.path] = e;\n            if (typeof e === \"string\") {\n                this.observerBuilder.error(this.path, e);\n                return false;\n            }\n            Object.keys(key).forEach((_k) => {\n                this.model[_k] = key[_k];\n            });\n        }\n        if (_init.get(this)) {\n            if (this.isValid) {\n                this.observerBuilder.next(this.path, this);\n                return this;\n            }\n            let eMsg = this.validate();\n            this.observerBuilder.error(this.path, eMsg);\n            return false;\n        }\n    }\n\n    /**\n     * indicates if Schema will accept arbitrary keys\n     * @returns {boolean}\n     */\n    get isExtensible() {\n        return _exists(this.signature.extensible) ?\n            this.signature.extensible : this.options.extensible || false;\n    }\n\n    /**\n     * @returns list of required elements on this Schema\n     */\n    get requiredFields() {\n        return _required_elements.get(this);\n    }\n\n    /**\n     * sets default values for schema keys\n     */\n    setDefaults() {\n        _init.set(this, false);\n        const _sig = this.schema;\n        // attempts to set default value\n        for (let _sigEl of Object.keys(_sig)) {\n            // -- tests for element `default`\n            let _default = _sig[_sigEl].default;\n            if (_exists(_default)) {\n                // sets default value for key on model\n                this.set(_sigEl, _default);\n            }\n        }\n        _init.set(this, true);\n    }\n\n    static get defaultOptions() {\n        return {\n            extensible: false,\n            debug: false,\n        };\n    }\n\n    /**\n     * base signature for all Schema Objects\n     */\n    static get defaultSignature() {\n        return {\n            type: \"*\",\n            required: true,\n            extensible: false\n        };\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/schema.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 197,
    "kind": "variable",
    "name": "_init",
    "memberof": "src/classes/schema.js",
    "static": true,
    "longname": "src/classes/schema.js~_init",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/schema.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 198,
    "kind": "class",
    "name": "Schema",
    "memberof": "src/classes/schema.js",
    "static": true,
    "longname": "src/classes/schema.js~Schema",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/schema.js",
    "importStyle": "{Schema}",
    "description": "",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Schema"
      }
    ],
    "interface": false,
    "extends": [
      "src/classes/model.js~Model"
    ]
  },
  {
    "__docId__": 199,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "_signature",
        "description": "{Object} - schema definition object"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": "{Object} - schema options"
      }
    ]
  },
  {
    "__docId__": 200,
    "kind": "get",
    "name": "handler",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#handler",
    "access": "public",
    "description": "Handler for Object Proxy Evaluation",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{get: function, set: function}}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{get: function, set: function}"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "{\"get\": *, \"set\": *}"
      ]
    }
  },
  {
    "__docId__": 201,
    "kind": "method",
    "name": "concatPathAddr",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/schema.js~Schema.concatPathAddr",
    "access": "public",
    "description": "utility method to create selector path",
    "lineNumber": 117,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "addr",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 202,
    "kind": "get",
    "name": "signature",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#signature",
    "access": "public",
    "description": "",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "schema signature object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "schema signature object"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 203,
    "kind": "get",
    "name": "model",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#model",
    "access": "public",
    "description": "getter for object model",
    "lineNumber": 131,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "set",
    "name": "model",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#model",
    "access": "public",
    "description": "setter for object model",
    "lineNumber": 139,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 205,
    "kind": "method",
    "name": "get",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#get",
    "access": "public",
    "description": "",
    "lineNumber": 194,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 206,
    "kind": "method",
    "name": "set",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#set",
    "access": "public",
    "description": "sets value to schema key",
    "lineNumber": 203,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 207,
    "kind": "get",
    "name": "isExtensible",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#isExtensible",
    "access": "public",
    "description": "indicates if Schema will accept arbitrary keys",
    "lineNumber": 238,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 208,
    "kind": "get",
    "name": "requiredFields",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#requiredFields",
    "access": "public",
    "description": "",
    "lineNumber": 246,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "list of required elements on this Schema"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "list of required elements on this Schema"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "setDefaults",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/schema.js~Schema#setDefaults",
    "access": "public",
    "description": "sets default values for schema keys",
    "lineNumber": 253,
    "params": [],
    "return": null
  },
  {
    "__docId__": 210,
    "kind": "get",
    "name": "defaultOptions",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/schema.js~Schema.defaultOptions",
    "access": "public",
    "description": null,
    "lineNumber": 268,
    "undocument": true,
    "type": {
      "types": [
        "{\"extensible\": *, \"debug\": *}"
      ]
    }
  },
  {
    "__docId__": 211,
    "kind": "get",
    "name": "defaultSignature",
    "memberof": "src/classes/schema.js~Schema",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/schema.js~Schema.defaultSignature",
    "access": "public",
    "description": "base signature for all Schema Objects",
    "lineNumber": 278,
    "type": {
      "types": [
        "{\"type\": string, \"required\": boolean, \"extensible\": *}"
      ]
    }
  },
  {
    "__docId__": 212,
    "kind": "file",
    "name": "src/classes/set.js",
    "content": "import {\n    _mdRef, _object, _schemaOptions,\n    _schemaHelpers, _schemaSignatures,\n    _vPaths, _validPaths\n} from \"./_references\";\nimport {SchemaValidator} from \"./_schemaValidator\";\nimport {JSD} from \"./jsd\";\nimport {Model} from \"./model\";\nimport {SchemaHelpers} from \"./_schemaHelpers\";\n\nconst _observerDelegates = new WeakMap();\n\n/**\n * @class Set\n */\nexport class Set extends Model {\n    /**\n     * @constructor\n     * @param _signature {*}\n     * @param opts {*}\n     */\n    constructor(_signature, opts = {}) {\n        super(_signature.writeLock || false, arguments[2]);\n        // stores our user Options into Weakmap\n        _schemaOptions.set(this, opts);\n        _schemaHelpers.set(this, new SchemaHelpers(this));\n\n        if (!_signature.hasOwnProperty(\"type\")) {\n            _signature.type = \"Array\";\n        }\n\n        _vPaths.set(this, `${this.path}.*.polymorphic`);\n\n        const _sig = _signature[\"*\"] || JSD.defaults;\n        _schemaSignatures.set(this, JSON.stringify(_sig));\n\n        _object.set(this, new Proxy(Model.createRef(this, []), this.handler));\n    }\n\n    /**\n     * getter for object model\n     */\n    get model() {\n        return _object.get(this);\n    }\n\n    /**\n     * setter for object model\n     * @param value\n     */\n    set model(value) {\n        if (Array.isArray(value)) {\n            if (!this.isLocked) {\n                _object.set(this, new Proxy(Model.createRef(this, []), this.handler));\n            }\n\n            try {\n                let cnt = 0;\n                // we delegate observation in the event of whole model replacement\n                // to prevent triggering a notification for each item\n                // if the user desires such behavior they can use `addItem` with an iterator\n                _observerDelegates.set(this, {\n                    next: () => {\n                        if (this.length === value.length) {\n                            this.observerBuilder.next(this.path, this);\n                        }\n                    },\n                    error: () => {\n                        // this is a no-op, we will dispatch error later in the setter pipe\n                    }\n                });\n                value.forEach((val) => {\n                    _object.get(this)[cnt++] = val;\n                });\n            } catch (e) {\n                return this.observerBuilder.error(this.path, e);\n            }\n            if ((typeof this.isValid) === \"boolean\") {\n                this.observerBuilder.next(this.path, this);\n                return true;\n            } else {\n                this.observerBuilder.error(this.path, this.validate());\n                return false;\n            }\n        } else {\n            this.observerBuilder.error(this.path, `${this.path} requires Array`);\n        }\n    }\n\n    get handler() {\n        return {\n            get: (t, idx) => {\n                // TODO: review for removal\n                // if (typeof idx === \"symbol\") {\n                //     idx = `${String(idx)}`;\n                // }\n\n                if (idx === \"length\") {\n                    return t.length;\n                }\n\n                if (idx in Array.prototype) {\n                    return t[idx];\n                }\n\n                if (idx === \"$ref\") {\n                    return this;\n                }\n\n                return t[idx];\n            },\n            set: (t, idx, value) => {\n                if (idx in Array.prototype) {\n                    // do nothing against proto props\n                    return true;\n                }\n\n                let _oDel = _observerDelegates.get(this);\n                const sendErr = (msg) => {\n                    _validPaths.get(this.jsd)[this.path] = msg;\n                    if (_oDel) {\n                        _oDel.error(msg);\n                    } else {\n                        this.observerBuilder.error(this.path, msg);\n                    }\n                };\n                let keyPath = `${_vPaths.get(this)}`.replace(/^\\.?(.*)$/, \"$1\");\n                let cnt = 0;\n                let msg = `unable to validate \"${this.path}\"`;\n                (this.schema.polymorphic || this.schema).some(() => {\n                    msg = this.validatorBuilder.exec(`${keyPath}.${cnt++}`, value);\n                    return (msg === true);\n                });\n                // if error message is present we do error handling and return\n                if ((typeof msg) === \"string\") {\n                    sendErr(msg);\n                    return false;\n                }\n\n                // we set the value on the array with success\n                if ((typeof value) === \"object\") {\n                    let _sH = _schemaHelpers.get(this);\n                    // note we use the last value of `cnt` and walk back one iteration\n                    value = _sH.setChildObject(`${keyPath}.${cnt - 1}`, value);\n                }\n                t[idx] = value;\n                msg = this.validate();\n                if ((typeof msg) === \"boolean\") {\n                    _validPaths.get(this.jsd)[this.path] = true;\n                    if (_oDel) {\n                        _oDel.next(this);\n                    } else {\n                        this.observerBuilder.next(this.path, this);\n                    }\n                    return true;\n                } else {\n                    sendErr(msg);\n                    return false;\n                }\n            },\n            deleteProperty: (t, idx) => {\n                if (idx >= t.length) {\n                    const e = `index ${idx} is out of bounds on ${this.path}`;\n                    this.observerBuilder.error(this.path, e);\n                    return false;\n                }\n                t.splice(idx, 1);\n                this.observerBuilder.next(this.path, t);\n                return true;\n            }\n        };\n    }\n\n    /**\n     * @param {number} idx\n     * @returns {any} element at index if found\n     */\n    getItemAt(idx) {\n        return this.model[idx];\n    }\n\n    /**\n     * @param {number} idx\n     * @param {any} item\n     * @returns {Set} reference to self\n     */\n    setItemAt(idx, item) {\n        this.model[idx] = item;\n        return this;\n    }\n\n    /**\n     *\n     * @param idx\n     * @returns {Set}\n     */\n    removeItemAt(idx) {\n        delete this.model[idx];\n        return this;\n    }\n\n    /**\n     * @param {Array} array\n     * @returns {Set} reference to self\n     */\n    replaceAll(array) {\n        this.model = array;\n        return this;\n    }\n\n    /**\n     * @param {number} idx\n     * @param {any} item\n     * @returns {boolean|Set} reference to self\n     */\n    replaceItemAt(idx, item) {\n        if (!this.validatorBuilder.exec(this.path, item)) {\n            return false;\n        }\n        if (idx > this.model.length) {\n            return false;\n        }\n        if (idx <= this.model.length) {\n            this.model[idx] = item;\n        }\n        return this;\n    }\n\n    /**\n     * @param {any} item\n     * @returns {Set} reference to self\n     */\n    addItem(item) {\n        this.setItemAt(this.model.length, item);\n        return this;\n    }\n\n    /**\n     * @returns {any} item removed from start of list\n     */\n    shift() {\n        return Reflect.apply(Array.prototype.shift, this.model, []);\n    };\n\n    /**\n     * @param {any} items to be added\n     * @returns {Set} reference to self\n     */\n    unshift(...items) {\n        Reflect.apply(Array.prototype.unshift, this.model, arguments);\n        return this;\n    }\n\n    /**\n     * @returns {any} items removed from end of list\n     */\n    pop() {\n        const v = this.model[this.model.length - 1];\n        delete this.model[this.model.length - 1];\n        return v\n    }\n\n    /**\n     * @param {any} items to be added at end of list\n     * @returns {Set} reference to self\n     */\n    push(...items) {\n        items.forEach(item => {\n            return this.addItem(item);\n        });\n        this.observerBuilder.next(this.path, this);\n        return this;\n    }\n\n    /**\n     * resets list to empty array\n     * @returns {Set} reference to self\n     */\n    reset() {\n        _object.set(this, new Proxy(Model.createRef(this, []), this.handler));\n        return this;\n    }\n\n    /**\n     * @param {function} func - sorting function\n     * @returns {Set} reference to self\n     */\n    sort(func) {\n        this.model.sort(func);\n        return this;\n    }\n\n    /**\n     * @returns {number} number of elements in list\n     */\n    get length() {\n        return this.model.length || 0;\n    }\n}\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/set.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 213,
    "kind": "variable",
    "name": "_observerDelegates",
    "memberof": "src/classes/set.js",
    "static": true,
    "longname": "src/classes/set.js~_observerDelegates",
    "access": "private",
    "export": false,
    "importPath": "jsd/src/classes/set.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 214,
    "kind": "class",
    "name": "Set",
    "memberof": "src/classes/set.js",
    "static": true,
    "longname": "src/classes/set.js~Set",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/set.js",
    "importStyle": "{Set}",
    "description": "",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Set"
      }
    ],
    "interface": false,
    "extends": [
      "src/classes/model.js~Model"
    ]
  },
  {
    "__docId__": 215,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "_signature",
        "description": "{*}"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": "{*}"
      }
    ]
  },
  {
    "__docId__": 216,
    "kind": "get",
    "name": "model",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#model",
    "access": "public",
    "description": "getter for object model",
    "lineNumber": 43,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 217,
    "kind": "set",
    "name": "model",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#model",
    "access": "public",
    "description": "setter for object model",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 218,
    "kind": "get",
    "name": "handler",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#handler",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "type": {
      "types": [
        "{\"get\": *, \"set\": *, \"deleteProperty\": *}"
      ]
    }
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "getItemAt",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#getItemAt",
    "access": "public",
    "description": "",
    "lineNumber": 178,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any} element at index if found"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "idx",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": "element at index if found"
    }
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "setItemAt",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#setItemAt",
    "access": "public",
    "description": "",
    "lineNumber": 187,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Set} reference to self"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "idx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": "reference to self"
    }
  },
  {
    "__docId__": 221,
    "kind": "method",
    "name": "removeItemAt",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#removeItemAt",
    "access": "public",
    "description": "",
    "lineNumber": 197,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Set}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "idx",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 222,
    "kind": "method",
    "name": "replaceAll",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#replaceAll",
    "access": "public",
    "description": "",
    "lineNumber": 206,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Set} reference to self"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": "reference to self"
    }
  },
  {
    "__docId__": 224,
    "kind": "method",
    "name": "replaceItemAt",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#replaceItemAt",
    "access": "public",
    "description": "",
    "lineNumber": 216,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean|Set} reference to self"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "idx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean",
        "Set"
      ],
      "spread": false,
      "description": "reference to self"
    }
  },
  {
    "__docId__": 225,
    "kind": "method",
    "name": "addItem",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#addItem",
    "access": "public",
    "description": "",
    "lineNumber": 233,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Set} reference to self"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "item",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": "reference to self"
    }
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "shift",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#shift",
    "access": "public",
    "description": "",
    "lineNumber": 241,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any} item removed from start of list"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": "item removed from start of list"
    },
    "params": []
  },
  {
    "__docId__": 227,
    "kind": "method",
    "name": "unshift",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#unshift",
    "access": "public",
    "description": "",
    "lineNumber": 249,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Set} reference to self"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "items",
        "description": "to be added"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": "reference to self"
    }
  },
  {
    "__docId__": 228,
    "kind": "method",
    "name": "pop",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#pop",
    "access": "public",
    "description": "",
    "lineNumber": 257,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{any} items removed from end of list"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": "items removed from end of list"
    },
    "params": []
  },
  {
    "__docId__": 229,
    "kind": "method",
    "name": "push",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#push",
    "access": "public",
    "description": "",
    "lineNumber": 267,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Set} reference to self"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "items",
        "description": "to be added at end of list"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": "reference to self"
    }
  },
  {
    "__docId__": 230,
    "kind": "method",
    "name": "reset",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#reset",
    "access": "public",
    "description": "resets list to empty array",
    "lineNumber": 279,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Set} reference to self"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": "reference to self"
    },
    "params": []
  },
  {
    "__docId__": 231,
    "kind": "method",
    "name": "sort",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#sort",
    "access": "public",
    "description": "",
    "lineNumber": 288,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Set} reference to self"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": "sorting function"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": "reference to self"
    }
  },
  {
    "__docId__": 232,
    "kind": "get",
    "name": "length",
    "memberof": "src/classes/set.js~Set",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/classes/set.js~Set#length",
    "access": "public",
    "description": "",
    "lineNumber": 296,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} number of elements in list"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "number of elements in list"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 233,
    "kind": "file",
    "name": "src/classes/utils.js",
    "content": "import {_exists} from \"./_references\";\n\n/**\n * method for reformatting polymorphic paths\n * @param path (string}\n */\nexport const remapPolypath = (path) => {\n    // regex for reformatting polymorphic path entries\n    const _remapRx = /(.*)\\d\\.polymorphic+(.*)/;\n    return ((path) => {\n        let matched = false;\n        path = path.replace(_remapRx, function (match, $1, $2) {\n            if (match) {\n                matched = true;\n            }\n            return `${$1}*.polymorphic${$2}`;\n        });\n        if (matched) {\n            path = remapPolypath(path);\n        }\n        return path;\n    })(path);\n};\n\n/**\n * @param itm {Object}\n * @returns {string|boolean}\n */\nexport const ensureKindIsString = (itm) => {\n    switch (typeof itm) {\n        case \"string\":\n            // wrapped value in template string per lint griping about return type\n            return `${itm}`;\n        case \"object\":\n            if (itm.hasOwnProperty(\"type\")) {\n                return this.ensureKindIsString(itm.type);\n            }\n    }\n    return false;\n};\n\n/**\n * Tests if required fields exist on reference object\n * sets default values upon sample object if present\n * @param {Schema} ref - reference object\n * @param {Object} obj - object for evaluation\n * @returns {Object|string} - returns true or error string\n */\nexport const ensureRequiredFields = (ref, obj) => {\n    let oKeys = Object.keys(obj || {});\n    let _required = ref.requiredFields;\n    try {\n        _required.forEach((__) => {\n            let _key = _required[__];\n            let _path = ref.path.length ? ref.path : \"root element\";\n            if (0 > oKeys.indexOf(_key)) {\n                if (_exists(ref.signature[_key].default)) {\n                    obj[_key] = ref.signature[_key].default;\n                } else {\n                    throw `required property \"${_key}\" is missing for '${_path}'`;\n                }\n            }\n        });\n    } catch (e) {\n        return e;\n    }\n\n    return obj;\n};\n",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/classes/utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 234,
    "kind": "function",
    "name": "remapPolypath",
    "memberof": "src/classes/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/utils.js~remapPolypath",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/utils.js",
    "importStyle": "{remapPolypath}",
    "description": "method for reformatting polymorphic paths",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "(string}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 235,
    "kind": "function",
    "name": "ensureKindIsString",
    "memberof": "src/classes/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/utils.js~ensureKindIsString",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/utils.js",
    "importStyle": "{ensureKindIsString}",
    "description": "",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "itm",
        "description": "{Object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 236,
    "kind": "function",
    "name": "ensureRequiredFields",
    "memberof": "src/classes/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/classes/utils.js~ensureRequiredFields",
    "access": "public",
    "export": true,
    "importPath": "jsd/src/classes/utils.js",
    "importStyle": "{ensureRequiredFields}",
    "description": "Tests if required fields exist on reference object\nsets default values upon sample object if present",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object|string} - returns true or error string"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Schema"
        ],
        "spread": false,
        "optional": false,
        "name": "ref",
        "description": "reference object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "object for evaluation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "string"
      ],
      "spread": false,
      "description": "returns true or error string"
    }
  },
  {
    "__docId__": 237,
    "kind": "file",
    "name": "src/index.js",
    "content": "/////////////////////////////////////////////////\n// JSD\n// (c)2015-2017 Van Schroeder <van@webfreshener.com>\n/////////////////////////////////////////////////\n//== Polyfills Object.assign\nif (typeof Object.assign != \"function\") {\n    Object.assign = function (target) {\n        if (target == null) {\n            throw new TypeError(\"Cannot convert undefined or null to object\");\n        }\n        target = Object(target);\n        let index = 1;\n        while (index < arguments.length) {\n            let source = arguments[index];\n            if (source !== null) {\n                for (let key in source) {\n                    if (Object.prototype.hasOwnProperty.call(source, key)) {\n                        target[key] = source[key];\n                    }\n                }\n            }\n            index = index + 1;\n        }\n        return target;\n    }\n}\nexport {JSD} from './classes/jsd';",
    "static": true,
    "longname": "/Users/van/IdeaProjects/JSD/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "kind": "index",
    "content": "JSD\n=============\n**JSON Schema Definition**<br/>\nSchema Based Self-Validating and Observable Data Models\n\n[![Build Status](https://travis-ci.org/Webfreshener/JSD.svg?branch=master)](https://travis-ci.org/Webfreshener/JSD)\n[![Dev Dependency Status](https://david-dm.org/webfreshener/jsd/dev-status.svg)](https://david-dm.org/webfreshener/jsd?type=dev)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/3ca79cd83489410295680ef3ee96cd01)](https://www.codacy.com/app/vanschroeder/JSD?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Webfreshener/JSD&amp;utm_campaign=Badge_Grade)\n[![NSP Status](https://nodesecurity.io/orgs/webfreshener-llc/projects/ec54a505-71a0-42de-8b84-3aba21031b01/badge)](https://nodesecurity.io/orgs/webfreshener-llc/projects/ec54a505-71a0-42de-8b84-3aba21031b01)\n\n[Online Developer Documentation](https://webfreshener.github.io/JSD/)\n\n### Purpose \n Most every developer has wished for a way to quickly and easily validate data from User Input or remote API calls and\n and to be able to easily recieve update notifications without having to manually write code to facilitaate those \n objectives it is to that end that JSD was developed, an Observable, Schema Based Data Validation Utility written for Javascript, \n but which sets forth a Specification which may be implemented in any\n\n### Table of Contents\n\n**[Installation Instructions](#installation-instructions)**\n\n**[Basic Usage](#basic-usage)**\n\n   * [Schema Basics](#schema-basics)\n    \n**[JSD Specification](#jsd-specification)**\n\n   * [Array Type](#array-type)\n   * [Boolean Type](#boolean-type)\n   * [Number Type](#number-type)\n   * [Object Type](#object-type)\n   * [String Type](#string-type)\n   \n**[Advanced Usage](#advanced-usage)**\n\n   * [Wildcard Keys](#wildcard-keys)\n   * [Wildcard Types](#wildcard-types)\n   * [Polymorphism](#polymorphism)\n   * [Regular Expressions](#regular-expressions)\n    \n        * [JSON File Example with Special Escaping](#json-file-example-with-special-escaping)\n   * [Write-Locking](#write-locking)\n\n#### Installation Instructions ####\nThere are no dependencies or prerequesites besides NPM and NodeJS\nHowever, this project is not yet published. \nYou must manually add to your package.json\n```\n...\ndependencies: {\n    ...\n    \"jsd\": \"git+https://github.com/Webfreshener/JSD\",\n    ...\n}\n...\n```\n\n#### Basic Usage ####\n\n##### Schema Basics #####\n\nA schema is simply a JSON Document that \ndescribes the attributes of a Data Model\n\nThe example below defines an Schema that expects a `name` and an `age` attribute\n\n```\nconst _schema = {\n    \"name\": {\n        \"type\": \"String\",\n        \"required\": true\n    },\n    \"age\": {\n        \"type\": \"Number\",\n        \"required\": true\n    }\n};\nconst _handlers = {\n    next: function (schema) {\n        if (typeof schema !== 'undefined') {\n            // outputs: {\"name\":\"Frank\",\"age\":23}\n            console.log(`${schema}`);\n        }\n    },\n    error: function (e) {\n        // error: 'age' expected number, type was '<string>'\n        console.log(`error: ${e}`);\n    }\n};\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handlers);\n\n// set invalid data to the model to trigger error handler\n_jsd.document.model = {\n    \"name\": \"Frank\",\n    \"age\": \"23\"\n};\n\n// set valid data to the model to trigger next handler\n_jsd.document.model = {\n    \"name\": \"Frank\",\n    \"age\": 23\n};\n```\n\n\n### JSD Specification ###\n\n\n#### Array Type \nAttribute Name | Data Type\n---------------|-----------\nrequired | Boolean\nelements | Object\ndefault | Array \n\n###### Schema Example\n```\n// defines an Array of Strings\n{\n    type: \"Array\",\n    \"required\": false,\n    \"elements\": {\n        \"type\": \"String\",\n        \"required\": false\n    }\n}\n\n// defines an Array of Strings and Numbers\n{\n    type: \"Array\",\n    \"required\": false,\n    \"elements\": [\n        {\n        \"type\": \"String\",\n        \"required\": false\n       },\n       {\n        \"type\": \"String\",\n        \"required\": false\n        }\n     ]\n}\n```\n###### Usage Example\n```\n// we define an array that accepts objects comprised of a name string and numeric score\nconst _schema = {\n    type: \"Array\",\n    default: [],\n    elements: [{\n        type: \"Object\",\n        elements: {\n            name: {\n                type: \"String\",\n                required: true,\n                restrict: \"^[a-zA-Z0-9\\\\-\\\\s]{1,24}$\"\n            },\n            score: {\n                type: \"Number\",\n                required: true\n            },\n        },\n    }],\n};\n\nconst _handler = {\n    next: (val) => {\n        // outputs: {\"values\":[{\"name\":\"Player 1\",\"score\":2000000},{\"name\":\"Player 2\",\"score\":1100000},{\"name\":\"Player 3\",\"score\":900000}]}\n        console.log(`${val}`);\n    },\n    error: (e) => {\n        // error: 'score' expected number, type was '<string>'s\n        console.log(`error: ${e}`);\n    }\n};\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n_jsd.document.model = [{\n    name: \"Player 1\",\n    score: 2000000,\n}, {\n    name: \"Player 2\",\n    score: 1100000\n}, {\n    // this will error because score is a string value\n    name: \"BOGUS\",\n    score: \"1100000\"\n}, {\n    name: \"Player 3\",\n    score: 900000\n}];\n```\n\n#### Boolean Type\nAttribute Name | Data Type\n---------------|-----------\nrequired | Boolean\ndefault | Boolean \n```\n// defines an Boolean Element \n{\n    \"myElement\": {\n        \"type\": \"Boolean\",\n        \"required\": false,\n        \"default\": true\n    }\n}\n```\n\n###### Usage Example\n```\nconst _schema = {\n    value: {\n        type: \"Boolean\",\n        required: false,\n        default: true,\n    }\n};\n\nconst _handler = {\n    next: (val) => {\n        // outputs: {\"value\":true}\n        // outputs: {\"value\":true}\n        // outputs: {\"value\":false}\n        console.log(`${val}`);\n    },\n    error: (e) => {\n        // error: 'value' expected boolean, type was '<string>'\n        console.log(`error: ${e}`);\n    }\n};\n\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// - this will trigger the default value\n_jsd.document.model = {};\n\n// set value to true\n_jsd.document.model = {value: true};\n\n// set value to false\n_jsd.document.model = {value: false};\n\n// triggers error due to type mismatch\n_jsd.document.model = {value: \"true\"};\n```\n\n#### Number Type\nAttribute Name | Data Type\n---------------|-----------\nrequired | Boolean\ndefault | Number \n\n```\n// defines an Number Element \n{\n    \"myElement\": {\n        \"type\": \"Number\",\n        \"required\": false,\n        \"default\": 0 \n    }\n}\n```\n\n###### Usage Example\n```\nconst _schema = {\n    value: {\n        type: \"Number\",\n        required: true,\n        // default: true,\n    }\n};\n\nconst _handler = {\n    next: (val) => {\n        // outputs: {\"value\":1234}\n        console.log(`${val}`);\n    },\n    error: (e) => {\n        // error: 'value' expected number, type was '<string>'\n        console.log(`error: ${e}`);\n    }\n};\n\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// this fails because the value is a string\n_jsd.document.model = {value: \"1234\"};\n\n// this will succeed\n_jsd.document.model = {value: 1234};\n```\n\n#### Object Type \nAttribute Name | Data Type\n---------------|-----------\nrequired | Boolean\nextensible | Boolean\nelements | Object\npolymorphic | Array\ndefault | Object \n\n```\n// defines an Object Element \n{\n    \"myElement\": {\n        \"type\": \"Object\",\n        \"required\": false,\n        \"default\": {\n         },\n         elements: {\n            \"name\": {\n                \"type\": \"String\"\n                \"required\": true\n            },\n            \"active\": {\n                \"type\": \"Boolean\"\n                \"required\": false,\n                \"default\": true\n            }\n         }\n    }\n}\n```\n\n###### Usage Example\n```\n// we define an element named `value` that requires a name and optional active attributes \nconst _schema = {\n    value: {\n        type: \"Object\",\n        required: false,\n        elements: {\n            name: {\n                type: \"String\",\n                required: true\n            },\n            active: {\n                type: \"Boolean\",\n                required: false,\n                default: false\n            }\n        }\n    }\n};\n\nconst _handler = {\n    next: (val) => {\n        // outputs: {\"value\":{\"name\":\"Alice\",\"active\":true}}\n        // outputs: {\"value\":{\"name\":\"Bob\",\"active\":false}}\n        console.log(`${val}`);\n    },\n    error: (e) => {\n        // error: 'value.active' expected boolean, type was '<number>'\n        console.log(`error: ${e}`);\n    }\n};\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// this will error since `active` is a number\n_jsd.document.model = {\n    value: {\n        name: \"Alice\",\n        active: 1,\n    }\n};\n\n// this will pass\n_jsd.document.model = {\n    value: {\n        name: \"Alice\",\n        active: true\n    }\n};\n\n// this will also pass since `active` is optional\n_jsd.document.model = {\n    value: {\n        name: \"Bob\",\n    }\n};\n```\n\n#### String Type \nAttribute Name | Data Type\n---------------|-----------\nrequired | Boolean\nrestrict | RegExp\ndefault | String\n\n``` \n// defines a String Element \n{\n    \"myElement\": {\n        \"type\": \"String\"\n        \"required\": true\n    }\n}\n```\n\n###### Usage Example\n```\nconst _schema = {\n    value: {\n        type: \"String\",\n        required: true,\n        restrict: \"^[a-zA-Z0-9_\\\\s\\\\-]+$\"\n    }\n};\n\nconst _handler = {\n    next: (val) => {\n        // outputs: {\"value\":\"false\"}\n        console.log(`${val}`);\n    },\n    error: (e) => {\n        // error: 'value' expected string, type was '<boolean>'\n        console.log(`error: ${e}`);\n    }\n};\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// this fails because type is boolean\n_jsd.document.model = {value: true};\n\n// this will succeeed\n_jsd.document.model = {value: \"false\"};\n```\n\n### Advanced Usage \n\n#### Wildcard Keys\nWildcards keys allow for cases where you might not know or care about the actual key values.\nThis is useful in cases where you might have severage elements of the ame data type and \nformat that you wish to describe in a single instance\n\n###### Schema Example\n```\n// declares any amount of Alphanumeric String values\n{\n    \"*\": {\n        \"type\": \"String\",\n        \"restrict\": \"^[a-zA-Z0-9\\-]{1,10}$\"\n    }\n}\n\n// declares any amount of extensible Object values with name and age attributes \n{\n    \"*\": {\n        type: \"Object\",\n        \"extensible\": true\n        \"elements\": {\n            \"name\": {\n                \"type\": \"String\",\n                \"required\": true,\n                \"restrict\": \"^[a-zA-Z0-9\\-]{1,10}$\"\n            },\n            {\n            \"age\": {\n                \"type\": \"Number\",\n                \"required\":true \n            }\n        },\n    }\n}\n```\n###### Usage Example\n```\n// creates a schema that allows any key assignent, but value must be object\nconst _schema = {\n    \"*\": {\n        type: \"Object\",\n        extensible: true,\n        elements: {\n            name: {\n                type: \"String\",\n                required: true,\n                restrict: \"^[a-zA-Z0-9_\\\\s\\\\-]{9,}$\"\n            },\n            score: {\n                type: \"Number\",\n                required: true,\n            }\n        },\n    }\n};\n\nconst _handler = {\n    next: (val) => {\n        // {\"1\":{\"name\":\"Big Daddy\",\"score\":2000000}, ...}\n        console.log(`${val}`); \n    },\n    error: (e) => {\n        // error: 1 expected value of type 'Object'. Type was '<number>'\n        console.log(`error: ${e}`);\n    }\n};\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// this will fail because value is number, not an object\n_jsd.document.model = {\n    1: 900000,\n};\n\n// this succeeds\n_jsd.document.model = {\n    1: {\n        name: \"Big Daddy\",\n        score: 2000000\n    },\n    2: {\n        name: \"HeavyMetalPrincess\",\n        score: 1100000\n    },\n    3: {\n        name: \"Munga-Munga\",\n        score: 900000\n    },\n};\n```\n#### Wildcard Types \nIn some cases, you might know the key of an attribute, \nbut the type might not be determined. In these cases,\nwhere you want to restrict an object to known keys but \nallow for various value assignment, you can use \nwildcard types\n\n###### Schema Example\n```\n// declares element myKey which can be any type, but must be present \n{\n    \"myKey\": {\n        \"type\": \"*\",\n        \"required\": true\n    }\n}\n\n// declares an Object that allows for special user data \n{\n    \"id\": {\n        \"type\": \"Number\",\n        \"required\": true,\n    },\n    \"name\": {\n        \"type\": \"String\",\n        \"required\": true,\n        \"restrict\": \"^[a-zA-Z0-9\\-]{1,10}$\"\n    },\n    {\n    \"dataField1\": {\n        \"type\": \"*\",\n        \"required\": false \n    },\n    \"dataField2\": {\n        \"type\": \"*\",\n        \"required\": false \n    }\n}\n```\n###### Usage Example\n```\n// creates a schema that lets key `value` be set to any type \nconst _schema = {\n    value: {\n        type: \"*\",\n    }\n};\n\nconst _handler = {\n    next: (val) => {\n        // outputs: {\"value\":900000}\n        // outputs: {\"value\":\"A string\"}\n        // outputs: {\"value\":false}\n        console.log(`${val}`); \n    },\n    error: (e) => {\n        // error: element 'bogus' is not a valid element\n        console.log(`error: ${e}`);\n    }\n};\n\nconst _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// any model with the key named `value` is ok\n_jsd.document.model = {\n    value: 900000,\n};\n\n// any model with the key named `value` is ok\n_jsd.document.model = {\n    value: \"A string\",\n};\n\n// any model with the key named `value` is ok\n_jsd.document.model = {\n    value: false,\n};\n\n// this will fail because key `bogus` is not allowed\n_jsd.document.model = {\n    bogus: \"false\",\n}\n```\n\n#### Polymorphism\nIn cases where you want to keep the data model tightly defined but must allow for certain values to conform to more \nthan one data type, you can use polymorhism\n\n###### Schema Example\n```\n// declares element `polyValue` which can be a String or an Object\n{\n   \"polyValue\": {\n     \"required\": true,\n     \"polymorphic\": [\n       {\n         \"type\": \"String\",\n         \"restrict\": \"^[a-zA-Z-0-9_]+$\"\n       },\n       {\n         \"type\": \"Object\",\n         \"elements\": {\n           \"name\": {\n             \"type\": \"String\",\n             \"required\": true,\n             \"restrict\": \"^[a-zA-Z-0-9_]{1,24}+$\"\n           },\n           \"details\": {\n             \"type\": \"String\",\n             \"required\": false,\n             \"restrict\": \"^[a-zA-Z-0-9_]{0,256}+$\"\n           }, \n         }\n       }\n     ]\n   } \n}\n```\n###### Usage Example\n```\nconst _schema = {\n    polyValue: {\n        required: true,\n        default: \"DEFAULT VALUE\",\n        polymorphic: [\n            // this schema will accept a string value\n            {\n                type: \"String\",\n                restrict: \"^[a-zA-Z0-9_\\\\s]+$\",\n\n            },\n            // ... or and object with `name` and `description` elements\n            {\n                type: \"Object\",\n                elements: {\n                    name: {\n                        type: \"String\",\n                        required: true,\n                        restrict: \"^[a-zA-Z0-9_\\\\s]{1,24}$\"\n                    },\n                    description: {\n                        type: \"String\",\n                        required: true,\n                        restrict: \"^[a-zA-Z0-9_\\\\s]{1,140}$\"\n                    },\n                },\n            },\n            // ... or a wildcard key & numeric value pair\n            {\n                type: \"Object\",\n                elements: {\n                    \"*\": {\n                        type: \"Number\"\n                    },\n                },\n            }]\n    }\n};\n\nlet _handler = {\n    next: (val) => {\n        // {\"polyValue\":\"DEFAULT VALUE\"}\n        // {\"polyValue\":\"HeavyMetalPrincess\"}\n        // {\"polyValue\":{\"name\":\"HeavyMetalPrincess\",\"description\":\"cupcakes\"}}\n        // {\"polyValue\":{\"HeavyMetalPrincess\":10001234}}\n        console.log(`${val}`);\n    },\n    error: (e) => {\n        // error: 'polyValue.polymorphic.2.*' expected number, type was '<string>'\n        console.log(`error: ${e}`);\n    }\n\n};\n\nconst _jsd = new JSD(_schema, {debug: true});\n_jsd.document.subscribe(_handler);\n\n// will set default value\n_jsd.document.model = {};\n\n\n// can be a string value\n_jsd.document.model = {\n    \"polyValue\": \"HeavyMetalPrincess\",\n}\n\n// can be an object with `name` and `description` elements\n_jsd.document.model = {\n    \"polyValue\": {\n        \"name\": \"HeavyMetalPrincess\",\n        \"description\": \"cupcakes\",\n    }\n};\n\n// or a wildcard key & numeric value pair...\n\n// -- this will error because the value is a string, not numeric\n_jsd.document.model = {\n    \"polyValue\": {\n        HeavyMetalPrincess: \"10001234\",\n    },\n};\n\n// -- this has a numeric value and will succeed\n_jsd.document.model = {\n    \"polyValue\": {\n        HeavyMetalPrincess: 10001234,\n    },\n};\n});\n```\n\n#### Regular Expressions\nJSD allows the use of Regular Expressions to restrict String input\nThere are caveats to it's use due to the nature of RegExp syntax vs  JSON\ncharacter encoding limitations\n\n###### JS and TS file Example\n```\n// in code declaring a RegExp in JS or TS is no big deal \nconst schema = {\n   stringValue: {\n     required: true,\n     type: \"String\",\n     restrict: \"^[a-zA-Z0-9_\\\\-\\\\s]+$\"\n   }\n};\n```\n\n\n###### JSON File Example with Special Escaping\n```\n{\n    \"stringValue\": {\n        \"required\": true,\n        \"type\": \"String\",\n        \"restrict\": \"^[a-zA-Z0-9_\\\\\\\\-\\\\\\\\s]+$\"\n    }\n}\n```\n\n#### Write-Locking \nIn some cases you might want to define Read-Only Data Structures, such as Config Files\nJSD allows you to set data to the Schema and then Write-Lock it via Schema Params or Programmatically\n\n###### Schema Example\n```\n// a schema designating itself as write-locked with the writeLock attribute\n// once data is set to this schema, it will be read-only\n{\n  \"writeLock\": true,\n  \"elements\": {\n    \"*\"{\n      \"type\": \"*\"\n    }\n  }\n}\n```\n###### Usage Example\n```\n// creates a schema with writeLock attribute set to true\nvar _schema = {\n    writeLock: true,\n    elements: {\n        \"*\": {\n            type: \"*\",\n        }\n    }\n};\n\nvar _handler = {\n    next: function(val) {\n        // {\"valueA\":1,\"valueB\":2,\"valueC\":3}\n        // {\"valueA\":1,\"valueB\":2,\"valueC\":3}\n        console.log(`${val}`);\n    },\n    complete: function(model) {\n        // complete: schema is now locked.\n        console.log('complete: schema is now locked.');\n    }\n};\n\nvar _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// will lock schema after write\n_jsd.document.model = {\n    valueA: 1,\n    valueB: 2,\n    valueC: 3,\n};\n\n// subsequent writes will silently fail\n_jsd.document.model = {\n    valueD: 4,\n    valueE: 5,\n    valueF: 6,\n};\n\n\n// Additionally, the end-user can set this programatically\n\n// creates a schema with writeLock attribute set to true\nvar _schema = {\n    \"*\": {\n        type: \"*\",\n    }\n};\n\nvar _handler = {\n    next: function(val) {\n        // {\"valueA\":1,\"valueB\":2,\"valueC\":3}\n        // {\"valueA\":1,\"valueB\":2,\"valueC\":3}\n        console.log(`${val}`);\n    },\n    complete: function(model) {\n        // complete: schema is now locked.\n        console.log('complete: schema is now locked.');\n    }\n};\n\nvar _jsd = new JSD(_schema);\n_jsd.document.subscribe(_handler);\n\n// will lock schema after write\n_jsd.document.model = {\n    valueA: 1,\n    valueB: 2,\n    valueC: 3,\n};\n\n// Invoke the lock feature on the document\n_jsd.document.lock();\n\n// subsequent writes will silently fail\n_jsd.document.model = {\n    valueD: 4,\n    valueE: 5,\n    valueF: 6,\n};\n```",
    "longname": "/Users/van/IdeaProjects/JSD/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"author\": \"Van Schroeder <van@webfreshener.com>\",\n  \"name\": \"jsd\",\n  \"description\": \"Schema Generation and Data Validation with object virtualization\",\n  \"keywords\": [\n    \"schema\",\n    \"validation\",\n    \"validatable\",\n    \"observable\",\n    \"proxy\",\n    \"model\",\n    \"json\",\n    \"data\",\n    \"orm\",\n    \"object\",\n    \"hash\",\n    \"properties\",\n    \"DOM\",\n    \"object model\"\n  ],\n  \"version\": \"1.0.0-beta.2\",\n  \"main\": \"./index.js\",\n  \"licenses\": [\n    {\n      \"type\": \"MIT\",\n      \"url\": \"http://www.opensource.org/licenses/MIT\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/Webfreshener/JSD.git\"\n  },\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"babel\": \"^6.5.2\",\n    \"babel-core\": \"^6.18.2\",\n    \"babel-loader\": \"^7.1.3\",\n    \"babel-plugin-transform-remove-strict-mode\": \"0.0.2\",\n    \"babel-preset-env\": \"^1.6.1\",\n    \"babel-register\": \"^6.18.0\",\n    \"chai\": \"^4.1.2\",\n    \"deep-equal\": \"^1.0.1\",\n    \"es6-weak-map\": \"^2.0.1\",\n    \"esdoc\": \"^1.0.4\",\n    \"esdoc-accessor-plugin\": \"^1.0.0\",\n    \"esdoc-exclude-source-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"jest\": \"^22.1.4\",\n    \"jest-babel-istanbul\": \"^0.1.0\",\n    \"jest-each\": \"^0.3.1\",\n    \"jsd-utils\": \"git+https://github.com/webfreshener/jsd-utils.git\",\n    \"jshint\": \"^2.9.4\",\n    \"mocha\": \"^5.0.0\",\n    \"mocha-lcov-reporter\": \"^1.3.0\",\n    \"rxjs\": \"^5.5.6\",\n    \"weakmap\": \"0.0.6\",\n    \"webpack\": \"^4.0.1\",\n    \"webpack-cli\": \"^2.0.10\"\n  },\n  \"homepage\": \"https://webfreshener.github.io/JSD/\",\n  \"scripts\": {\n    \"test\": \"jest\",\n    \"build-test\": \"webpack --mode development; npm test\",\n    \"build\": \"webpack --mode production\",\n    \"version\": \"npm run build\",\n    \"docs\": \"./node_modules/.bin/esdoc\"\n  },\n  \"jest\": {\n    \"coverageCollector\": \"jest-babel-istanbul\"\n  }\n}\n",
    "longname": "/Users/van/IdeaProjects/JSD/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]