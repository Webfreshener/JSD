// Generated by CoffeeScript 1.10.0
var GeoPoint, SchemaRoller, _kinds, global, ref,
  slice = [].slice;

global = (ref = module.exports) != null ? ref : window;

String.prototype.ucfirst = function() {
  return this.charAt(0).toUpperCase() + this.substr(1);
};

GeoPoint = {
  lat: 0,
  lng: 0
};

_kinds = {};

SchemaRoller = (function() {
  'use strict';
  function SchemaRoller() {
    _kinds = {
      Array: Array,
      Boolean: Boolean,
      Buffer: ArrayBuffer,
      Date: Date,
      GeoPoint: GeoPoint,
      Number: Number,
      Object: Object,
      String: String,
      Function: Function
    };
    this.getClass = (function(_this) {
      return function() {
        var _r, arg, classesOrNames, i, j, len, len1, n, ref1;
        classesOrNames = 1 <= arguments.length ? slice.call(arguments, 0) : [];
        for (i = 0, len = classesOrNames.length; i < len; i++) {
          arg = classesOrNames[i];
          if (typeof arg === 'object') {
            if (Array.isArray(arg)) {
              _r = [];
              for (j = 0, len1 = arg.length; j < len1; j++) {
                n = arg[j];
                switch (typeof n) {
                  case 'string':
                    _r.push(_this.getClass(n));
                    break;
                  case 'function':
                    _r.push(n);
                    break;
                  default:
                    _r.push(Array.isArray(n) ? _this.getClass.apply(_this, n) : null);
                }
              }
              return (!(0 <= _r.indexOf(null)) ? {
                _r: null
              } : void 0);
            }
            return null;
          }
          return (ref1 = _kinds[arg]) != null ? ref1 : null;
        }
        return null;
      };
    })(this);
    this.registerClass = function(name, clazz) {
      return _kinds[name] = clazz;
    };
    this.unregisterClass = function(name) {
      if (_kinds.hasOwnProperty(name)) {
        return delete _kinds[name];
      }
    };
  }

  return SchemaRoller;

})();

module.exports.SchemaRoller = new SchemaRoller;

module.exports.SchemaRoller.Vector = require('./vector');

module.exports.SchemaRoller.Schema = require('./schema');
